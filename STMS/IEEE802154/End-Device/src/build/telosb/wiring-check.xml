<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:EndDeviceAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2afd8c21a020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2afd8bda8720"/></to>
    </wire>
    <wire loc="72:../../../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2afd8bda8720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2afd8bf8d590"/></to>
    </wire>
    <wire loc="10:EndDeviceAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c21a620"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf99a70"/></to>
    </wire>
    <wire loc="11:EndDeviceAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0x2afd8c23b810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8c342640"/></to>
    </wire>
    <wire loc="52:../../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8c342640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c339610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:EndDeviceAppC.nc">
      <from><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c233b50"/></from>
      <to><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c4ea8a0"/></to>
    </wire>
    <wire loc="76:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c4ea8a0"/></from>
      <to><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c5415d0"/></to>
    </wire>
    <wire loc="16:EndDeviceAppC.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c279210"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c4e9020"/></to>
    </wire>
    <wire loc="75:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c4e9020"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c540e80"/></to>
    </wire>
    <wire loc="17:EndDeviceAppC.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c28c630"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c5012d0"/></to>
    </wire>
    <wire loc="74:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c5012d0"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c547cf0"/></to>
    </wire>
    <wire loc="18:EndDeviceAppC.nc">
      <from><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c27d130"/></from>
      <to><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c4cb920"/></to>
    </wire>
    <wire loc="81:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c4cb920"/></from>
      <to><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c549b00"/></to>
    </wire>
    <wire loc="21:EndDeviceAppC.nc">
      <from><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c287020"/></from>
      <to><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c4d1670"/></to>
    </wire>
    <wire loc="79:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c4d1670"/></from>
      <to><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c54dd70"/></to>
    </wire>
    <wire loc="22:EndDeviceAppC.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8c3108e0"/></from>
      <to><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c5172f0"/></to>
    </wire>
    <wire loc="87:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c5172f0"/></from>
      <to><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c575590"/></to>
    </wire>
    <wire loc="23:EndDeviceAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afd8c304180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afd8c52e2b0"/></to>
    </wire>
    <wire loc="92:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afd8c52e2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afd8c54ad70"/></to>
    </wire>
    <wire loc="27:EndDeviceAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x2afd8c3015c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x2afd8db64310"/></to>
    </wire>
    <wire loc="54:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x2afd8db64310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x2afd8e5ba290"/></to>
    </wire>
    <wire loc="103:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e5e61b0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d9a2200"/></to>
    </wire>
    <wire loc="14:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e503720"/></to>
    </wire>
    <wire loc="16:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d8fc020"/></to>
    </wire>
    <wire loc="19:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d8f4860"/></to>
    </wire>
    <wire loc="14:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e3d1780"/></to>
    </wire>
    <wire loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d73fbf0"/></to>
    </wire>
    <wire loc="103:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e395140"/></to>
    </wire>
    <wire loc="74:../../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d324020"/></to>
    </wire>
    <wire loc="79:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d075720"/></to>
    </wire>
    <wire loc="119:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d6b0860"/></to>
    </wire>
    <wire loc="48:../../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e20dbd0"/></to>
    </wire>
    <wire loc="48:../../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e173d70"/></to>
    </wire>
    <wire loc="78:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8c88c220"/></to>
    </wire>
    <wire loc="360:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="LocalInit" scoped="" ref="0x2afd8c6561d0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8c331400"/></to>
    </wire>
    <wire loc="67:../../../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2afd8bf8dc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2afd8b92b3a0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2afd8b92b3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2afd8bd83140"/></to>
    </wire>
    <wire loc="68:../../../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2afd8bf8c6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bdaac40"/></to>
    </wire>
    <wire loc="48:../../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8bdaac40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bdc2e70"/></to>
    </wire>
    <wire loc="71:../../../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bf8cdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></to>
    </wire>
    <wire loc="49:../../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2afd8bdbf5b0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2afd8bdc03a0"/></to>
    </wire>
    <wire loc="46:../../../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2afd8bdc03a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bdda2a0"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2afd8bdbfc90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bdb81a0"/></to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2afd8bdbe400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bfbc2e0"/></to>
    </wire>
    <wire loc="46:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8bdda2a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8be003c0"/></to>
    </wire>
    <wire loc="47:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afd8bdf1850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afd8be00a70"/></to>
    </wire>
    <wire loc="48:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2afd8bac6080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2afd8bdffcc0"/></to>
    </wire>
    <wire loc="113:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2afd8be3ca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf0b6d0"/></to>
    </wire>
    <wire loc="126:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2afd8be4a410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf04b30"/></to>
    </wire>
    <wire loc="108:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2afd8be33bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8beee160"/></to>
    </wire>
    <wire loc="149:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2afd8be56020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf0ecb0"/></to>
    </wire>
    <wire loc="107:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2afd8be38020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8beef480"/></to>
    </wire>
    <wire loc="148:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2afd8be5d570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf0e020"/></to>
    </wire>
    <wire loc="170:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2afd8be53020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf3fcb0"/></to>
    </wire>
    <wire loc="154:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2afd8be44a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf2c220"/></to>
    </wire>
    <wire loc="99:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2afd8be23020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8be949d0"/></to>
    </wire>
    <wire loc="135:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2afd8be58020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf1d2f0"/></to>
    </wire>
    <wire loc="134:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2afd8be5f890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8befa610"/></to>
    </wire>
    <wire loc="133:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2afd8be498c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8befb220"/></to>
    </wire>
    <wire loc="115:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2afd8be32bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf097a0"/></to>
    </wire>
    <wire loc="156:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2afd8be55020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf2a2f0"/></to>
    </wire>
    <wire loc="140:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2afd8be47020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf186d0"/></to>
    </wire>
    <wire loc="114:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2afd8be38da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf0aac0"/></to>
    </wire>
    <wire loc="93:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2afd8be247b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8bea2540"/></to>
    </wire>
    <wire loc="155:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2afd8be5c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf2b610"/></to>
    </wire>
    <wire loc="106:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2afd8be225a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bef0020"/></to>
    </wire>
    <wire loc="161:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2afd8be42020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf246d0"/></to>
    </wire>
    <wire loc="101:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2afd8be4db60"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bef6a90"/></to>
    </wire>
    <wire loc="142:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2afd8be57020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf167a0"/></to>
    </wire>
    <wire loc="100:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2afd8be39140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bef7de0"/></to>
    </wire>
    <wire loc="141:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2afd8be5e700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf17ac0"/></to>
    </wire>
    <wire loc="163:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2afd8be54020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf227a0"/></to>
    </wire>
    <wire loc="147:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2afd8be465a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf10b30"/></to>
    </wire>
    <wire loc="120:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="162:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2afd8be5b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf23ac0"/></to>
    </wire>
    <wire loc="128:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2afd8be59020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8bf02cb0"/></to>
    </wire>
    <wire loc="169:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2afd8be5a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf3f020"/></to>
    </wire>
    <wire loc="127:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2afd8be60a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2afd8bf02020"/></to>
    </wire>
    <wire loc="168:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2afd8be615a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2afd8bf41b30"/></to>
    </wire>
    <wire loc="94:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2afd8bea0450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8bea1d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2afd8bea0aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2afd8bf3aa90"/></to>
    </wire>
    <wire loc="96:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2afd8be9f120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2afd8bf36260"/></to>
    </wire>
    <wire loc="102:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bef5930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8bea2540"/></to>
    </wire>
    <wire loc="103:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bef3020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8bea1d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8beed020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8bea2540"/></to>
    </wire>
    <wire loc="110:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8beeb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8bea1d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf08610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8bea2540"/></to>
    </wire>
    <wire loc="117:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf07c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8bea1d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2afd8be982f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2afd8be98940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2afd8bf369f0"/></to>
    </wire>
    <wire loc="123:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2afd8be97020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2afd8bf35240"/></to>
    </wire>
    <wire loc="129:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf01b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="130:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8beff2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf1c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="137:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf1b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf15610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="144:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf14c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf0db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="151:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf2f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf29160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="158:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf287a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf21610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="165:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf20c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8bf3eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></to>
    </wire>
    <wire loc="172:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2afd8bf3c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8bd81040"/></to>
    </wire>
    <wire loc="55:../../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2afd8bd7e5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2afd8b98b2d0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8bfbc2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8bf99470"/></to>
    </wire>
    <wire loc="54:../../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2afd8bf96060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2afd8bf9aaf0"/></to>
    </wire>
    <wire loc="58:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2afd8bf9aaf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1e5020"/></to>
    </wire>
    <wire loc="55:../../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2afd8bf95340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2afd8bfbfcf0"/></to>
    </wire>
    <wire loc="61:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2afd8bfbfcf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1ffb90"/></to>
    </wire>
    <wire loc="56:../../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2afd8bf90660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2afd8bfbd020"/></to>
    </wire>
    <wire loc="64:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2afd8bfbd020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1fa710"/></to>
    </wire>
    <wire loc="59:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1d42f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2afd8c0269a0"/></to>
    </wire>
    <wire loc="486:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2afd8c0269a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c14dd10"/></to>
    </wire>
    <wire loc="62:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1fede0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2afd8c0249a0"/></to>
    </wire>
    <wire loc="487:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2afd8c0249a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c148740"/></to>
    </wire>
    <wire loc="65:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1f9930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2afd8c0229a0"/></to>
    </wire>
    <wire loc="488:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2afd8c0229a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c143100"/></to>
    </wire>
    <wire loc="442:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2afd8bfcd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c08f740"/></to>
    </wire>
    <wire loc="455:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2afd8bfde810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0dd100"/></to>
    </wire>
    <wire loc="531:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2afd8c032ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ce100"/></to>
    </wire>
    <wire loc="551:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2afd8c05dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c175740"/></to>
    </wire>
    <wire loc="532:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2afd8c030cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0f4d10"/></to>
    </wire>
    <wire loc="460:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2afd8c000810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0d3740"/></to>
    </wire>
    <wire loc="473:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2afd8c0139a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0f8460"/></to>
    </wire>
    <wire loc="497:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2afd8c0169a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c152100"/></to>
    </wire>
    <wire loc="535:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2afd8c02acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ea100"/></to>
    </wire>
    <wire loc="545:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2afd8c041cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c165740"/></to>
    </wire>
    <wire loc="557:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2afd8c055cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c16f100"/></to>
    </wire>
    <wire loc="445:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2afd8bfed810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ab740"/></to>
    </wire>
    <wire loc="536:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2afd8c04fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0e6d10"/></to>
    </wire>
    <wire loc="450:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2afd8bfe8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0cbd10"/></to>
    </wire>
    <wire loc="463:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2afd8bffa810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ef740"/></to>
    </wire>
    <wire loc="476:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2afd8c00d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c116100"/></to>
    </wire>
    <wire loc="489:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2afd8c0209a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c13ed10"/></to>
    </wire>
    <wire loc="500:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2afd8c0389a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c16f100"/></to>
    </wire>
    <wire loc="440:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2afd8bfd1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c098100"/></to>
    </wire>
    <wire loc="453:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2afd8bfe2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0bdd80"/></to>
    </wire>
    <wire loc="466:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2afd8bff4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c10c740"/></to>
    </wire>
    <wire loc="530:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2afd8c034cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ce100"/></to>
    </wire>
    <wire loc="548:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2afd8c063cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c157740"/></to>
    </wire>
    <wire loc="555:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2afd8c057cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c16f100"/></to>
    </wire>
    <wire loc="541:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2afd8c047cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c125100"/></to>
    </wire>
    <wire loc="471:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2afd8bff0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c102e60"/></to>
    </wire>
    <wire loc="484:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2afd8c0029a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c12a740"/></to>
    </wire>
    <wire loc="495:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2afd8c01a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c15cd10"/></to>
    </wire>
    <wire loc="549:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2afd8c061cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c152100"/></to>
    </wire>
    <wire loc="538:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2afd8c04dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c133100"/></to>
    </wire>
    <wire loc="443:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2afd8bfcb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0b4100"/></to>
    </wire>
    <wire loc="456:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2afd8bfdc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0d9d10"/></to>
    </wire>
    <wire loc="493:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2afd8c01e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c165740"/></to>
    </wire>
    <wire loc="461:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2afd8bffe810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ce100"/></to>
    </wire>
    <wire loc="474:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2afd8c0119a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c120e00"/></to>
    </wire>
    <wire loc="498:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2afd8c03c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c17ad10"/></to>
    </wire>
    <wire loc="540:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2afd8c049cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c12a740"/></to>
    </wire>
    <wire loc="438:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2afd8bfd3870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c076d10"/></to>
    </wire>
    <wire loc="451:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2afd8bfe6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0c6740"/></to>
    </wire>
    <wire loc="464:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2afd8bff8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ea100"/></to>
    </wire>
    <wire loc="477:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2afd8c00b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c112d10"/></to>
    </wire>
    <wire loc="542:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2afd8c045cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c10c740"/></to>
    </wire>
    <wire loc="546:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2afd8c03fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c160100"/></to>
    </wire>
    <wire loc="552:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2afd8c05bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c16f100"/></to>
    </wire>
    <wire loc="482:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2afd8c0069a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c133100"/></to>
    </wire>
    <wire loc="543:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2afd8c043cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c107100"/></to>
    </wire>
    <wire loc="441:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2afd8bfcf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c094d10"/></to>
    </wire>
    <wire loc="454:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2afd8bfe0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0e2740"/></to>
    </wire>
    <wire loc="467:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2afd8bff2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c107100"/></to>
    </wire>
    <wire loc="539:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2afd8c04bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c12fd10"/></to>
    </wire>
    <wire loc="550:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2afd8c05fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c17ad10"/></to>
    </wire>
    <wire loc="472:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2afd8c0159a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0fd9f0"/></to>
    </wire>
    <wire loc="485:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2afd8c0289a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c125100"/></to>
    </wire>
    <wire loc="496:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2afd8c0189a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c157740"/></to>
    </wire>
    <wire loc="444:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2afd8bfc9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0b0d10"/></to>
    </wire>
    <wire loc="494:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2afd8c01c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c160100"/></to>
    </wire>
    <wire loc="449:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2afd8bfeb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0a5100"/></to>
    </wire>
    <wire loc="462:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2afd8bffc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0f4d10"/></to>
    </wire>
    <wire loc="475:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2afd8c00f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c11b740"/></to>
    </wire>
    <wire loc="499:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2afd8c03a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c175740"/></to>
    </wire>
    <wire loc="439:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2afd8bfb7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c09d740"/></to>
    </wire>
    <wire loc="452:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2afd8bfe4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0c1100"/></to>
    </wire>
    <wire loc="465:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2afd8bff6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0e6d10"/></to>
    </wire>
    <wire loc="478:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2afd8c0099a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c138740"/></to>
    </wire>
    <wire loc="534:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2afd8c02cca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ef740"/></to>
    </wire>
    <wire loc="547:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2afd8c065cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c15cd10"/></to>
    </wire>
    <wire loc="533:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2afd8c02ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0ef740"/></to>
    </wire>
    <wire loc="483:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2afd8c0049a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c12fd10"/></to>
    </wire>
    <wire loc="554:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2afd8c059cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c175740"/></to>
    </wire>
    <wire loc="558:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2afd8c053cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c13ed10"/></to>
    </wire>
    <wire loc="529:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2afd8c0369f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2afd8c0d3740"/></to>
    </wire>
    <wire loc="54:../../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c339610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c3301d0"/></to>
    </wire>
    <wire loc="58:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c3301d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8c4c0690"/></to>
    </wire>
    <wire loc="57:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8c331400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8c41e760"/></to>
    </wire>
    <wire loc="59:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8c35ba80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8c4b1cf0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8c41e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e09cc40"/></to>
    </wire>
    <wire loc="61:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2afd8c4bac30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8c462cf0"/></to>
    </wire>
    <wire loc="62:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8c45c1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8c455020"/></to>
    </wire>
    <wire loc="53:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8c455020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e094890"/></to>
    </wire>
    <wire loc="63:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8c4df020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8c3bf020"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8c3bf020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8c3f00f0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e09cc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e07f660"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e08d0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e09a4f0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e09a4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e07e020"/></to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8e091c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8c3bf020"/></to>
    </wire>
    <wire loc="54:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e07a190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e084340"/></to>
    </wire>
    <wire loc="49:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e084340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e079770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e083a80"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e083a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e078a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e082da0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e082da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="59:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2afd8be4a410"/></to>
    </wire>
    <wire loc="60:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2afd8be60a20"/></to>
    </wire>
    <wire loc="66:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="67:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2afd8be47020"/></to>
    </wire>
    <wire loc="68:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2afd8be5e700"/></to>
    </wire>
    <wire loc="70:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="71:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2afd8be465a0"/></to>
    </wire>
    <wire loc="72:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2afd8be5d570"/></to>
    </wire>
    <wire loc="74:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="75:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2afd8be44a50"/></to>
    </wire>
    <wire loc="76:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2afd8be5c3e0"/></to>
    </wire>
    <wire loc="78:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="79:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2afd8be42020"/></to>
    </wire>
    <wire loc="80:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2afd8be5b1f0"/></to>
    </wire>
    <wire loc="82:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="83:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2afd8be615a0"/></to>
    </wire>
    <wire loc="84:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2afd8be5a020"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2afd8c3ed540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afd8c3b7020"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afd8c3b7020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8c3b20a0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3da2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></to>
    </wire>
    <wire loc="74:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2afd8c458490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2afd8c4b5e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8c4e7840"/></from>
      <to><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8c541dc0"/></to>
    </wire>
    <wire loc="180:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8c541dc0"/></from>
      <to><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8cc9f150"/></to>
    </wire>
    <wire loc="90:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8c535190"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c56cd70"/></to>
    </wire>
    <wire loc="187:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c56cd70"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></to>
    </wire>
    <wire loc="188:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afd8c54ad70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afd8c63eda0"/></to>
    </wire>
    <wire loc="176:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c547cf0"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="82:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8c4f8940"/></from>
      <to><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8c5473a0"/></to>
    </wire>
    <wire loc="172:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8c5473a0"/></from>
      <to><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8cc506a0"/></to>
    </wire>
    <wire loc="73:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_START" scoped="" ref="0x2afd8c511ad0"/></from>
      <to><interface-ref name="MLME_START" scoped="" ref="0x2afd8c5772e0"/></to>
    </wire>
    <wire loc="170:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_START" scoped="" ref="0x2afd8c5772e0"/></from>
      <to><interface-ref name="MLME_START" scoped="" ref="0x2afd8cb7b020"/></to>
    </wire>
    <wire loc="89:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8c536990"/></from>
      <to><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8c56eb30"/></to>
    </wire>
    <wire loc="185:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8c56eb30"/></from>
      <to><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8cb7fe50"/></to>
    </wire>
    <wire loc="91:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8c53e020"/></from>
      <to><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8c56c020"/></to>
    </wire>
    <wire loc="186:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8c56c020"/></from>
      <to><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8cd0d7b0"/></to>
    </wire>
    <wire loc="183:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c575590"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="111:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timestamp" scoped="" ref="0x2afd8c558860"/></from>
      <to><interface-ref name="Timestamp" scoped="" ref="0x2afd8ce88270"/></to>
    </wire>
    <wire loc="75:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="Timestamp" scoped="" ref="0x2afd8ce88270"/></from>
      <to><interface-ref name="Timestamp" scoped="" ref="0x2afd8cefe830"/></to>
    </wire>
    <wire loc="171:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c549b00"/></from>
      <to><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8cbce020"/></to>
    </wire>
    <wire loc="85:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8c4ea0d0"/></from>
      <to><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8c542dc0"/></to>
    </wire>
    <wire loc="178:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8c542dc0"/></from>
      <to><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8ca8ca20"/></to>
    </wire>
    <wire loc="166:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c54dd70"/></from>
      <to><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c5a0940"/></to>
    </wire>
    <wire loc="83:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c4ffaf0"/></from>
      <to><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c548ce0"/></to>
    </wire>
    <wire loc="174:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c548ce0"/></from>
      <to><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8cbceb50"/></to>
    </wire>
    <wire loc="175:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c548ce0"/></from>
      <to><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8cd39020"/></to>
    </wire>
    <wire loc="86:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8c4efd50"/></from>
      <to><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8c542600"/></to>
    </wire>
    <wire loc="177:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8c542600"/></from>
      <to><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8cd3a770"/></to>
    </wire>
    <wire loc="77:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8c4c97d0"/></from>
      <to><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8c548660"/></to>
    </wire>
    <wire loc="173:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8c548660"/></from>
      <to><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8cad9840"/></to>
    </wire>
    <wire loc="78:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8c51a780"/></from>
      <to><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8c5405c0"/></to>
    </wire>
    <wire loc="181:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8c5405c0"/></from>
      <to><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8cad9020"/></to>
    </wire>
    <wire loc="182:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c540e80"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="88:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="IEEE154BeaconFrame" scoped="" ref="0x2afd8c504390"/></from>
      <to><interface-ref name="IEEE154BeaconFrame" scoped="" ref="0x2afd8c56fb00"/></to>
    </wire>
    <wire loc="184:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IEEE154BeaconFrame" scoped="" ref="0x2afd8c56fb00"/></from>
      <to><interface-ref name="BeaconFrame" scoped="" ref="0x2afd8c645020"/></to>
    </wire>
    <wire loc="179:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c5415d0"/></from>
      <to><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c656810"/></to>
    </wire>
    <wire loc="80:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c4cb2a0"/></from>
      <to><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c54a760"/></to>
    </wire>
    <wire loc="167:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c54a760"/></from>
      <to><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c59d2e0"/></to>
    </wire>
    <wire loc="104:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Alarm1" scoped="" ref="0x2afd8ce827d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d8b24e0"/></to>
    </wire>
    <wire loc="11:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d8b24e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e3cc6d0"/></to>
    </wire>
    <wire loc="113:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Alarm2" scoped="" ref="0x2afd8ce7ee20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d938c30"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d938c30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d8a3280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8ce83300"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8d92d6f0"/></to>
    </wire>
    <wire loc="10:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8d92d6f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8d9239f0"/></to>
    </wire>
    <wire loc="115:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="ReliableWait" scoped="" ref="0x2afd8ce71940"/></from>
      <to><interface-ref name="ReliableWait" scoped="" ref="0x2afd8d9172a0"/></to>
    </wire>
    <wire loc="116:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8ce77910"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c569020"/></to>
    </wire>
    <wire loc="189:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c569020"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c63da70"/></to>
    </wire>
    <wire loc="117:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="CaptureTime" scoped="" ref="0x2afd8ced6a60"/></from>
      <to><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d9162e0"/></to>
    </wire>
    <wire loc="118:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8d916b00"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c569020"/></to>
    </wire>
    <wire loc="119:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8d9109b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="120:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afd8d915470"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2afd8ce88d50"/></to>
    </wire>
    <wire loc="79:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afd8ce88d50"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2afd8cefd460"/></to>
    </wire>
    <wire loc="121:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="SymbolAlarm" scoped="" ref="0x2afd8d9148b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d9324e0"/></to>
    </wire>
    <wire loc="11:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d9324e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4fd6d0"/></to>
    </wire>
    <wire loc="129:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2afd8c584be0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d9cf370"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8d9cf370"/></from>
      <to><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2afd8c57c060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d9c9cb0"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8d9c9cb0"/></from>
      <to><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timer3" scoped="" ref="0x2afd8c5b6650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d9c2750"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8d9c2750"/></from>
      <to><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timer4" scoped="" ref="0x2afd8c5b1bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d9bb060"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8d9bb060"/></from>
      <to><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Timer5" scoped="" ref="0x2afd8c5aa060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d9b5b00"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8d9b5b00"/></from>
      <to><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8c5a55f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8d92d6f0"/></to>
    </wire>
    <wire loc="137:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8c597020"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce8c5f0"/></to>
    </wire>
    <wire loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce8c5f0"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8cf02460"/></to>
    </wire>
    <wire loc="138:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c588600"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce8b600"/></to>
    </wire>
    <wire loc="70:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce8b600"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8cf014a0"/></to>
    </wire>
    <wire loc="139:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8c5946f0"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce8daf0"/></to>
    </wire>
    <wire loc="67:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce8daf0"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8cf03960"/></to>
    </wire>
    <wire loc="140:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8c58c800"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce8a600"/></to>
    </wire>
    <wire loc="71:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce8a600"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8cf03020"/></to>
    </wire>
    <wire loc="141:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8c585e10"/></from>
      <to><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8ce8be00"/></to>
    </wire>
    <wire loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8ce8be00"/></from>
      <to><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8cf01ca0"/></to>
    </wire>
    <wire loc="142:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="PhySplitControl" scoped="" ref="0x2afd8c58b700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afd8ce8d020"/></to>
    </wire>
    <wire loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afd8ce8d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afd8cf044d0"/></to>
    </wire>
    <wire loc="143:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c582920"/></from>
      <to><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8ce89190"/></to>
    </wire>
    <wire loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8ce89190"/></from>
      <to><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8ceff700"/></to>
    </wire>
    <wire loc="144:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ce79080"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c5982c0"/></to>
    </wire>
    <wire loc="190:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c5982c0"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="147:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afd8c5a1bb0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afd8d9a7c50"/></to>
    </wire>
    <wire loc="56:../../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afd8d9a7c50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afd8d9a1c10"/></to>
    </wire>
    <wire loc="148:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="149:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afd8ce76100"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afd8d9a7c50"/></to>
    </wire>
    <wire loc="359:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/></from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c6411d0"/></to>
    </wire>
    <wire loc="197:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8cadc860"/></to>
    </wire>
    <wire loc="216:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8cb7f7a0"/></to>
    </wire>
    <wire loc="227:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8cbd1920"/></to>
    </wire>
    <wire loc="244:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8cc50020"/></to>
    </wire>
    <wire loc="279:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8ca8c3f0"/></to>
    </wire>
    <wire loc="290:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8c9e7800"/></to>
    </wire>
    <wire loc="301:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8cd3a130"/></to>
    </wire>
    <wire loc="343:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8cd0d080"/></to>
    </wire>
    <wire loc="351:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8cca3ac0"/></to>
    </wire>
    <wire loc="198:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cad7310"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="199:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cad3aa0"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="200:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8cad0ce0"/></from>
      <to><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8c585e10"/></to>
    </wire>
    <wire loc="201:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8cacfe20"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8cdf7270"/></to>
    </wire>
    <wire loc="53:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8cdf7270"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="202:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8cace910"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8cdf7cf0"/></to>
    </wire>
    <wire loc="54:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8cdf7cf0"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="203:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8cacd1c0"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="204:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="BeaconFrame" scoped="" ref="0x2afd8cacb890"/></from>
      <to><interface-ref name="BeaconFrame" scoped="" ref="0x2afd8c645020"/></to>
    </wire>
    <wire loc="205:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8cacf4e0"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8cdf8800"/></to>
    </wire>
    <wire loc="55:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8cdf8800"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="206:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="ScanTimer" scoped="" ref="0x2afd8cacab10"/></from>
      <to><interface-ref name="Timer1" scoped="" ref="0x2afd8c584be0"/></to>
    </wire>
    <wire loc="207:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cac3130"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="49:../../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8e1724f0"/></to>
    </wire>
    <wire loc="208:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cac1c20"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></to>
    </wire>
    <wire loc="49:../../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8e20c390"/></to>
    </wire>
    <wire loc="209:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8cb0f600"/></from>
      <to><interface-ref name="RadioToken" scoped="" ref="0x2afd8cdf5440"/></to>
    </wire>
    <wire loc="58:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8cdf5440"/></from>
      <to><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8cb0c5c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></to>
    </wire>
    <wire loc="211:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cb0d610"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="217:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="BeaconRequestRx" scoped="" ref="0x2afd8cb7b950"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="218:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="BeaconRequestResponseTx" scoped="" ref="0x2afd8cb7a150"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="219:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cb7a910"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="220:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cb75120"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="221:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cb724f0"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="222:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8cb71690"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="223:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="SetMacPanCoordinator" scoped="" ref="0x2afd8cb6e020"/></from>
      <to><interface-ref name="SetMacPanCoordinator" scoped="" ref="0x2afd8c64a7c0"/></to>
    </wire>
    <wire loc="228:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="AssociationRequestRx" scoped="" ref="0x2afd8cbcd470"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="229:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="AssociationRequestTx" scoped="" ref="0x2afd8cbcdba0"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="AssociationResponseExtracted" scoped="" ref="0x2afd8cbcb5f0"/></from>
      <to><interface-ref name="FrameExtracted" scoped="" ref="0x2afd8c902d30"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="231:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="AssociationResponseTx" scoped="" ref="0x2afd8cbcbd30"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9e4410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="232:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DataRequest" scoped="" ref="0x2afd8cbca530"/></from>
      <to><interface-ref name="DataRequest" scoped="" ref="0x2afd8ca87340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="233:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="ResponseTimeout" scoped="" ref="0x2afd8cbc9020"/></from>
      <to><interface-ref name="Timer2" scoped="" ref="0x2afd8c57c060"/></to>
    </wire>
    <wire loc="234:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cbc46c0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="235:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cbc0270"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></to>
    </wire>
    <wire loc="236:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cbbea70"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="237:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cc0e2d0"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="238:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cc0b680"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="239:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8cc0a820"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="240:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cc07020"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></to>
    </wire>
    <wire loc="245:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DisassociationIndirectTx" scoped="" ref="0x2afd8cc4f1c0"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9e4410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DisassociationDirectTx" scoped="" ref="0x2afd8cc4fa90"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DisassociationToCoord" scoped="" ref="0x2afd8cc4e3e0"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="248:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DisassociationExtractedFromCoord" scoped="" ref="0x2afd8cc4d550"/></from>
      <to><interface-ref name="FrameExtracted" scoped="" ref="0x2afd8c902d30"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="250:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DisassociationRxFromDevice" scoped="" ref="0x2afd8cc4dcc0"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cc4c5a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="253:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cc48150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></to>
    </wire>
    <wire loc="254:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cc459a0"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="255:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cc402d0"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="256:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cc954f0"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="257:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8cc94690"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="258:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cc92df0"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></to>
    </wire>
    <wire loc="262:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DeviceCapTx" scoped="" ref="0x2afd8c5d3930"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="263:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="CoordCapTx" scoped="" ref="0x2afd8c59a1c0"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="264:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DeviceCapRx" scoped="" ref="0x2afd8c5d5370"/></from>
      <to><interface-ref name="DataRx" scoped="" ref="0x2afd8ca88340"/></to>
    </wire>
    <wire loc="265:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DeviceCapRx" scoped="" ref="0x2afd8c5d5370"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8cd0a550"/></to>
    </wire>
    <wire loc="266:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DeviceCapRx" scoped="" ref="0x2afd8c5d5370"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8c5ccca0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="268:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IndirectTx" scoped="" ref="0x2afd8c5c8660"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9e4410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="269:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c5c7e40"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="270:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8c5ba9b0"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="271:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PurgeDirect" scoped="" ref="0x2afd8c5c2b90"/></from>
      <to><interface-ref name="Purge" scoped="" ref="0x2afd8c9f0840"/></to>
    </wire>
    <wire loc="272:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PurgeIndirect" scoped="" ref="0x2afd8c5c4510"/></from>
      <to><interface-ref name="Purge" scoped="" ref="0x2afd8c9deaa0"/></to>
    </wire>
    <wire loc="273:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c5c3e30"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="274:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2afd8c5bbc10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2afd8c63eda0"/></to>
    </wire>
    <wire loc="275:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c5bd5c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></to>
    </wire>
    <wire loc="280:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PollTx" scoped="" ref="0x2afd8ca87c10"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="281:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DataExtracted" scoped="" ref="0x2afd8ca86560"/></from>
      <to><interface-ref name="FrameExtracted" scoped="" ref="0x2afd8c902d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="282:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ca86bb0"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="283:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8ca83e80"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="284:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxControlPool" scoped="" ref="0x2afd8ca7fa50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></to>
    </wire>
    <wire loc="285:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8ca7b300"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="286:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8ca77cf0"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></to>
    </wire>
    <wire loc="291:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="CoordCapTx" scoped="" ref="0x2afd8c9dd410"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DataRequestRx" scoped="" ref="0x2afd8c9ddc90"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="293:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c9dc350"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="294:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c9d8c50"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="295:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IndirectTxTimeout" scoped="" ref="0x2afd8c9d52f0"/></from>
      <to><interface-ref name="Timer3" scoped="" ref="0x2afd8c5b6650"/></to>
    </wire>
    <wire loc="296:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8ca1f630"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c63da70"/></to>
    </wire>
    <wire loc="297:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8ca1fdc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></to>
    </wire>
    <wire loc="302:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="CoordRealignmentTx" scoped="" ref="0x2afd8cd38e40"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="303:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="OrphanNotificationRx" scoped="" ref="0x2afd8cd34720"/></from>
      <to><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cd34d70"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="305:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Frame" scoped="" ref="0x2afd8cd2e690"/></from>
      <to><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></to>
    </wire>
    <wire loc="306:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cd2cdf0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></to>
    </wire>
    <wire loc="307:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cd28a50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></to>
    </wire>
    <wire loc="308:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cd33d90"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="309:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cd24550"/></from>
      <to><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></to>
    </wire>
    <wire loc="313:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DispatchReset" scoped="" ref="0x2afd8c63a6a0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8c9075c0"/></to>
    </wire>
    <wire loc="319:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DispatchReset" scoped="" ref="0x2afd8c63a6a0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8c9075c0"/></to>
    </wire>
    <wire loc="314:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="DispatchQueueReset" scoped="" ref="0x2afd8c63ada0"/></from>
      <to><interface-ref name="Reset" scoped="" ref="0x2afd8c9f2210"/></to>
    </wire>
    <wire loc="315:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afd8c9ef1c0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2afd8cdccbf0"/></to>
    </wire>
    <wire loc="316:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameTxCsma" scoped="" ref="0x2afd8c9ebaf0"/></from>
      <to><interface-ref name="FrameTx" scoped="" ref="0x2afd8c907c70"/></to>
    </wire>
    <wire loc="320:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IndirectTxWaitTimer" scoped="" ref="0x2afd8c9002a0"/></from>
      <to><interface-ref name="Timer4" scoped="" ref="0x2afd8c5b1bc0"/></to>
    </wire>
    <wire loc="321:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8c8fb750"/></from>
      <to><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce2ca10"/></to>
    </wire>
    <wire loc="58:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce2ca10"/></from>
      <to><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="SetMacSuperframeOrder" scoped="" ref="0x2afd8c8f6b40"/></from>
      <to><interface-ref name="SetMacSuperframeOrder" scoped="" ref="0x2afd8c64d020"/></to>
    </wire>
    <wire loc="323:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IsRxEnableActive" scoped="" ref="0x2afd8c8f8690"/></from>
      <to><interface-ref name="IsRxEnableActive" scoped="" ref="0x2afd8cc9fb30"/></to>
    </wire>
    <wire loc="324:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8c8fa8d0"/></from>
      <to><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce2ba80"/></to>
    </wire>
    <wire loc="59:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce2ba80"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c8f93b0"/></from>
      <to><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c640820"/></to>
    </wire>
    <wire loc="326:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c8f93b0"/></from>
      <to><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8cd0ae50"/></to>
    </wire>
    <wire loc="327:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c8f93b0"/></from>
      <to><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8cad81a0"/></to>
    </wire>
    <wire loc="328:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="GetIndirectTxFrame" scoped="" ref="0x2afd8c8f4020"/></from>
      <to><interface-ref name="GetIndirectTxFrame" scoped="" ref="0x2afd8c9dfa10"/></to>
    </wire>
    <wire loc="329:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RxEnableStateChange" scoped="" ref="0x2afd8c8f32d0"/></from>
      <to><interface-ref name="RxEnableStateChange" scoped="" ref="0x2afd8cc9ee10"/></to>
    </wire>
    <wire loc="330:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PIBUpdateMacRxOnWhenIdle" scoped="" ref="0x2afd8c8f0160"/></from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c6411d0"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="331:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c8efb60"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></to>
    </wire>
    <wire loc="332:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c8eec70"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce2c270"/></to>
    </wire>
    <wire loc="57:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce2c270"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="333:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8c8ed450"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce2e6f0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce2e6f0"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="334:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8c8ec020"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce2fdc0"/></to>
    </wire>
    <wire loc="55:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce2fdc0"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c8ec970"/></from>
      <to><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></to>
    </wire>
    <wire loc="336:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c931120"/></from>
      <to><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></to>
    </wire>
    <wire loc="337:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c92e4d0"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c63da70"/></to>
    </wire>
    <wire loc="338:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c92ec60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></to>
    </wire>
    <wire loc="344:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8cd080d0"/></from>
      <to><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce1fc20"/></to>
    </wire>
    <wire loc="58:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce1fc20"/></from>
      <to><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="345:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PromiscuousRx" scoped="" ref="0x2afd8cd07150"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce22a30"/></to>
    </wire>
    <wire loc="53:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce22a30"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8cd07c30"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce22140"/></to>
    </wire>
    <wire loc="55:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce22140"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="347:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8cd06810"/></from>
      <to><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c582920"/></to>
    </wire>
    <wire loc="352:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8cce0180"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c63da70"/></to>
    </wire>
    <wire loc="353:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="WasRxEnabled" scoped="" ref="0x2afd8cce3790"/></from>
      <to><interface-ref name="WasRxEnabled" scoped="" ref="0x2afd8c904580"/></to>
    </wire>
    <wire loc="354:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RxEnableTimer" scoped="" ref="0x2afd8cc9cc10"/></from>
      <to><interface-ref name="Timer5" scoped="" ref="0x2afd8c5aa060"/></to>
    </wire>
    <wire loc="361:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2afd8c639bb0"/></from>
      <to><interface-ref name="PhySplitControl" scoped="" ref="0x2afd8c58b700"/></to>
    </wire>
    <wire loc="362:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afd8c638760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afd8c5a1bb0"/></to>
    </wire>
    <wire loc="363:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PromiscuousModeGet" scoped="" ref="0x2afd8c63b580"/></from>
      <to><interface-ref name="PromiscuousModeGet" scoped="" ref="0x2afd8cd0b4e0"/></to>
    </wire>
    <wire loc="364:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8c6757f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8c5a55f0"/></to>
    </wire>
    <wire loc="365:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8c670d20"/></from>
      <to><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce167c0"/></to>
    </wire>
    <wire loc="58:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce167c0"/></from>
      <to><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="366:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8c676cf0"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce19cc0"/></to>
    </wire>
    <wire loc="55:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce19cc0"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="370:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PhyTx" scoped="" ref="0x2afd8c8104d0"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8c597020"/></to>
    </wire>
    <wire loc="371:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PhyUnslottedCsmaCa" scoped="" ref="0x2afd8c857700"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c588600"/></to>
    </wire>
    <wire loc="372:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PhyRx" scoped="" ref="0x2afd8c8118b0"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8c5946f0"/></to>
    </wire>
    <wire loc="373:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="PhyRadioOff" scoped="" ref="0x2afd8c856020"/></from>
      <to><interface-ref name="RadioOff" scoped="" ref="0x2afd8c58c800"/></to>
    </wire>
    <wire loc="374:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c856b90"/></from>
      <to><interface-ref name="PromiscuousModeGet" scoped="" ref="0x2afd8cd0b4e0"/></to>
    </wire>
    <wire loc="375:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c854430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></to>
    </wire>
    <wire loc="94:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <from><interface-ref name="resetSpinTask" scoped="" ref="0x2afd8c667530"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <from><interface-ref name="radioControlStopTask" scoped="" ref="0x2afd8c66c6b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c8cb850"/></to>
    </wire>
    <wire loc="62:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/></from>
      <to><interface-ref name="MacTx" scoped="" ref="0x2afd8c84cbc0"/></to>
    </wire>
    <wire loc="63:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c84bac0"/></to>
    </wire>
    <wire loc="80:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8c8cc6c0"/></to>
    </wire>
    <wire loc="61:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/></from>
      <to><interface-ref name="MacRx" scoped="" ref="0x2afd8c84f9d0"/></to>
    </wire>
    <wire loc="65:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/></from>
      <to><interface-ref name="MacRadioOff" scoped="" ref="0x2afd8c848750"/></to>
    </wire>
    <wire loc="64:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c84a950"/></to>
    </wire>
    <wire loc="66:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="PhyRx" scoped="" ref="0x2afd8c846340"/></from>
      <to><interface-ref name="PhyRx" scoped="" ref="0x2afd8c8118b0"/></to>
    </wire>
    <wire loc="67:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="PhyTx" scoped="" ref="0x2afd8c845020"/></from>
      <to><interface-ref name="PhyTx" scoped="" ref="0x2afd8c8104d0"/></to>
    </wire>
    <wire loc="68:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="PhySlottedCsmaCa" scoped="" ref="0x2afd8c845900"/></from>
      <to><interface-ref name="PhySlottedCsmaCa" scoped="" ref="0x2afd8c810db0"/></to>
    </wire>
    <wire loc="69:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="PhyUnslottedCsmaCa" scoped="" ref="0x2afd8c843260"/></from>
      <to><interface-ref name="PhyUnslottedCsmaCa" scoped="" ref="0x2afd8c857700"/></to>
    </wire>
    <wire loc="70:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="PhyRadioOff" scoped="" ref="0x2afd8c843ad0"/></from>
      <to><interface-ref name="PhyRadioOff" scoped="" ref="0x2afd8c856020"/></to>
    </wire>
    <wire loc="71:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c842680"/></from>
      <to><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c856b90"/></to>
    </wire>
    <wire loc="72:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8c8417b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8c854430"/></to>
    </wire>
    <wire loc="82:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8c844980"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8c8ca020"/></to>
    </wire>
    <wire loc="83:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8c8ca910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8c850b30"/></to>
    </wire>
    <wire loc="85:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afd8c8c8120"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2afd8c88c830"/></to>
    </wire>
    <wire loc="70:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2afd8c8c8c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <from><interface-ref name="wasRxEnabledTask" scoped="" ref="0x2afd8c91fa10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <from><interface-ref name="startIndirectTxTimerTask" scoped="" ref="0x2afd8c91ea60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <from><interface-ref name="signalTxDoneTask" scoped="" ref="0x2afd8c920a70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <from><interface-ref name="txTask" scoped="" ref="0x2afd8c9e9910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <from><interface-ref name="tryCoordCapTxTask" scoped="" ref="0x2afd8ca182b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <from><interface-ref name="continueScanRequestTask" scoped="" ref="0x2afd8cb388c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <from><interface-ref name="startTimerTask" scoped="" ref="0x2afd8cb04360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <from><interface-ref name="nextIterationTask" scoped="" ref="0x2afd8cb032b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x2afd8cbac7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <from><interface-ref name="signalStartConfirmTask" scoped="" ref="0x2afd8cb6a500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <from><interface-ref name="signalStartDoneTask" scoped="" ref="0x2afd8ccf9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <from><interface-ref name="continueStopTask" scoped="" ref="0x2afd8cd4a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8cdf6480"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8cdf3440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8cdf6be0"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce2d270"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce2d9d0"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce21590"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce21cf0"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce1ec10"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce1f480"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce170e0"/></from>
      <to><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce17840"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce18610"/></from>
      <to><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce15760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <from><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce16020"/></from>
      <to><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce8cde0"/></from>
      <to><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8cf02c50"/></to>
    </wire>
    <wire loc="73:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8cefcd30"/></from>
      <to><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/></to>
    </wire>
    <wire loc="76:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2afd8cefa960"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2afd8ce83300"/></to>
    </wire>
    <wire loc="77:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="ReliableWait" scoped="" ref="0x2afd8cf2b930"/></from>
      <to><interface-ref name="ReliableWait" scoped="" ref="0x2afd8ce71940"/></to>
    </wire>
    <wire loc="78:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="TimeCalc" scoped="" ref="0x2afd8cf2a910"/></from>
      <to><interface-ref name="TimeCalc" scoped="" ref="0x2afd8ce77910"/></to>
    </wire>
    <wire loc="81:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2afd8cf39a80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2afd8ce76100"/></to>
    </wire>
    <wire loc="84:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afd8cef7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d021900"/></to>
    </wire>
    <wire loc="73:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d021900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d075d90"/></to>
    </wire>
    <wire loc="85:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2afd8cee4960"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2afd8d01c600"/></to>
    </wire>
    <wire loc="75:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2afd8d01c600"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2afd8d070a60"/></to>
    </wire>
    <wire loc="86:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afd8cf3a2c0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d01e610"/></to>
    </wire>
    <wire loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d01e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d072ad0"/></to>
    </wire>
    <wire loc="87:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="StartupAlarm" scoped="" ref="0x2afd8d018d30"/></from>
      <to><interface-ref name="Alarm2" scoped="" ref="0x2afd8ce7ee20"/></to>
    </wire>
    <wire loc="88:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d013020"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ce79080"/></to>
    </wire>
    <wire loc="89:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d076530"/></from>
      <to><interface-ref name="CaptureTime" scoped="" ref="0x2afd8ced6a60"/></to>
    </wire>
    <wire loc="91:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="TxControl" scoped="" ref="0x2afd8ceef830"/></from>
      <to><interface-ref name="TxControl" scoped="" ref="0x2afd8d01aba0"/></to>
    </wire>
    <wire loc="114:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="TxControl" scoped="" ref="0x2afd8d01aba0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2afd8d6af020"/></to>
    </wire>
    <wire loc="92:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8cf2c530"/></from>
      <to><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8d019460"/></to>
    </wire>
    <wire loc="115:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8d019460"/></from>
      <to><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8d6af820"/></to>
    </wire>
    <wire loc="93:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="AckAlarm" scoped="" ref="0x2afd8d012380"/></from>
      <to><interface-ref name="Alarm1" scoped="" ref="0x2afd8ce827d0"/></to>
    </wire>
    <wire loc="96:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="RxControl" scoped="" ref="0x2afd8ceec4b0"/></from>
      <to><interface-ref name="CC2420AsyncSplitControl" scoped="" ref="0x2afd8d746620"/></to>
    </wire>
    <wire loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420AsyncSplitControl" scoped="" ref="0x2afd8d746620"/></from>
      <to><interface-ref name="AsyncSplitControl" scoped="" ref="0x2afd8d73c490"/></to>
    </wire>
    <wire loc="97:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8cf363a0"/></from>
      <to><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8d7439b0"/></to>
    </wire>
    <wire loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8d7439b0"/></from>
      <to><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8d73b820"/></to>
    </wire>
    <wire loc="98:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d742080"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ce79080"/></to>
    </wire>
    <wire loc="99:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d7410c0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d01e610"/></to>
    </wire>
    <wire loc="120:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <from><interface-ref name="configSyncTask" scoped="" ref="0x2afd8cf1d360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <from><interface-ref name="energyDetectionTask" scoped="" ref="0x2afd8cf20370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2afd8cf1f2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <from><interface-ref name="rxControlStopDoneTask" scoped="" ref="0x2afd8cf1e420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d0a70c0"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d013020"/></to>
    </wire>
    <wire loc="80:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="StartupAlarm" scoped="" ref="0x2afd8d06e350"/></from>
      <to><interface-ref name="StartupAlarm" scoped="" ref="0x2afd8d018d30"/></to>
    </wire>
    <wire loc="83:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afd8d06a580"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afd8d0fb020"/></to>
    </wire>
    <wire loc="72:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afd8d0fb020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0ed020"/></to>
    </wire>
    <wire loc="84:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2afd8d069830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2afd8d0f89c0"/></to>
    </wire>
    <wire loc="75:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2afd8d0f89c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d14a1d0"/></to>
    </wire>
    <wire loc="85:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2afd8d068b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2afd8d0f5020"/></to>
    </wire>
    <wire loc="77:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2afd8d0f5020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d140b70"/></to>
    </wire>
    <wire loc="86:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afd8d065190"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2afd8d0fa380"/></to>
    </wire>
    <wire loc="73:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afd8d0fa380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0e9b70"/></to>
    </wire>
    <wire loc="89:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2afd8d0615b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2afd8d12a210"/></to>
    </wire>
    <wire loc="64:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2afd8d12a210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2afd8d236a30"/></to>
    </wire>
    <wire loc="92:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afd8d04d3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d6e8e20"/></to>
    </wire>
    <wire loc="126:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d6e8e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d2ca960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afd8d053100"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2afd8d6e47b0"/></to>
    </wire>
    <wire loc="132:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afd8d6e47b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d051e70"/></from>
      <to><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d6e1be0"/></to>
    </wire>
    <wire loc="140:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d6e1be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d053810"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d6e3ae0"/></to>
    </wire>
    <wire loc="135:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d6e3ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d051740"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d6e5ad0"/></to>
    </wire>
    <wire loc="130:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d6e5ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d051020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d6e2160"/></to>
    </wire>
    <wire loc="136:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d6e2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d05e020"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d6da870"/></to>
    </wire>
    <wire loc="154:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d6da870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d05e8d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d6d7880"/></to>
    </wire>
    <wire loc="158:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d6d7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d0593c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d6d60a0"/></to>
    </wire>
    <wire loc="159:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d6d60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d059c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d6dee50"/></to>
    </wire>
    <wire loc="147:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d6dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d0575f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d6dd670"/></to>
    </wire>
    <wire loc="148:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d6dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d04f020"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d6dce50"/></to>
    </wire>
    <wire loc="151:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d6dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d05b870"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d6cace0"/></to>
    </wire>
    <wire loc="183:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d6cace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d056020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d6dbe50"/></to>
    </wire>
    <wire loc="153:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d6dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d0507d0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d6e27b0"/></to>
    </wire>
    <wire loc="137:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d6e27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afd8d0568c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2afd8d6dde50"/></to>
    </wire>
    <wire loc="149:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afd8d6dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d055230"/></from>
      <to><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d6ca500"/></to>
    </wire>
    <wire loc="180:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d6ca500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afd8d0529c0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2afd8d6e5480"/></to>
    </wire>
    <wire loc="129:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afd8d6e5480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="BackoffAlarm" scoped="" ref="0x2afd8d6ad1d0"/></from>
      <to><interface-ref name="AckAlarm" scoped="" ref="0x2afd8d012380"/></to>
    </wire>
    <wire loc="117:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d71ddf0"/></from>
      <to><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d076530"/></to>
    </wire>
    <wire loc="120:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afd8d6a8120"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2afd8d0ffd10"/></to>
    </wire>
    <wire loc="71:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2afd8d0ffd10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0f3440"/></to>
    </wire>
    <wire loc="121:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afd8d729370"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afd8d0fb020"/></to>
    </wire>
    <wire loc="122:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2afd8d728690"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2afd8d0f7cd0"/></to>
    </wire>
    <wire loc="76:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2afd8d0f7cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d146d60"/></to>
    </wire>
    <wire loc="123:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2afd8d6a9570"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2afd8d1265a0"/></to>
    </wire>
    <wire loc="63:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2afd8d1265a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2afd8d17f020"/></to>
    </wire>
    <wire loc="124:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2afd8d726cf0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2afd8d0f96b0"/></to>
    </wire>
    <wire loc="74:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2afd8d0f96b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0e4710"/></to>
    </wire>
    <wire loc="125:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afd8d7279c0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2afd8d0fa380"/></to>
    </wire>
    <wire loc="127:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d724020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d6e7a90"/></to>
    </wire>
    <wire loc="125:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d6e7a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c7680"/></to>
    </wire>
    <wire loc="128:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afd8d721ad0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2afd8d6e5480"/></to>
    </wire>
    <wire loc="129:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afd8d720220"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2afd8d6e4e00"/></to>
    </wire>
    <wire loc="133:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afd8d6e4e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d720950"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d6e3490"/></to>
    </wire>
    <wire loc="134:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d6e3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d71f0c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d6e2e00"/></to>
    </wire>
    <wire loc="138:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d6e2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d721240"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d6dce50"/></to>
    </wire>
    <wire loc="133:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d724a40"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d6c39b0"/></to>
    </wire>
    <wire loc="196:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d6c39b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d723870"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d6c8500"/></to>
    </wire>
    <wire loc="186:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d6c8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d71d5e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d6dd670"/></to>
    </wire>
    <wire loc="136:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afd8d71f7d0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2afd8d6e47b0"/></to>
    </wire>
    <wire loc="137:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d71e020"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d6e3ae0"/></to>
    </wire>
    <wire loc="138:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d71e750"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d6e27b0"/></to>
    </wire>
    <wire loc="139:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d71ee80"/></from>
      <to><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d6e1be0"/></to>
    </wire>
    <wire loc="142:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d71b080"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d743020"/></to>
    </wire>
    <wire loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d743020"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d73ce50"/></to>
    </wire>
    <wire loc="63:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0f2610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afd8bfcd810"/></to>
    </wire>
    <wire loc="64:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0ec2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2afd8c0139a0"/></to>
    </wire>
    <wire loc="65:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0e8de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2afd8bfcf810"/></to>
    </wire>
    <wire loc="66:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0e3930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afd8bfd3870"/></to>
    </wire>
    <wire loc="67:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d149480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2afd8c00b9a0"/></to>
    </wire>
    <wire loc="68:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d143020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2afd8c0159a0"/></to>
    </wire>
    <wire loc="69:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d13fde0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2afd8c00d9a0"/></to>
    </wire>
    <wire loc="65:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afd8d12ae30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2afd8d297a70"/></to>
    </wire>
    <wire loc="53:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8d17fae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2afd8be498c0"/></to>
    </wire>
    <wire loc="54:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2afd8d17eda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2afd8be58020"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d17dc20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2afd8c0159a0"/></to>
    </wire>
    <wire loc="60:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8d235610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afd8d16ec40"/></to>
    </wire>
    <wire loc="70:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2afd8d16ec40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2afd8d15aa30"/></to>
    </wire>
    <wire loc="61:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8d296610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afd8d170e70"/></to>
    </wire>
    <wire loc="66:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2afd8d170e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2afd8d1609c0"/></to>
    </wire>
    <wire loc="82:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2afd8d163bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2afd8d150bc0"/></to>
    </wire>
    <wire loc="73:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2afd8d16bbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2afd8d157a30"/></to>
    </wire>
    <wire loc="77:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2afd8d168bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2afd8d155a30"/></to>
    </wire>
    <wire loc="68:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2afd8d174d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2afd8d15ca30"/></to>
    </wire>
    <wire loc="80:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2afd8d165bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2afd8d152a30"/></to>
    </wire>
    <wire loc="71:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2afd8d16dbc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2afd8d159a30"/></to>
    </wire>
    <wire loc="83:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2afd8d162bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2afd8d1bbbc0"/></to>
    </wire>
    <wire loc="78:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2afd8d167bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2afd8d154a30"/></to>
    </wire>
    <wire loc="69:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2afd8d16fc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2afd8d15ba30"/></to>
    </wire>
    <wire loc="81:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2afd8d164c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2afd8d151bc0"/></to>
    </wire>
    <wire loc="72:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2afd8d16cbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2afd8d158a30"/></to>
    </wire>
    <wire loc="76:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2afd8d16abc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2afd8d156a30"/></to>
    </wire>
    <wire loc="67:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2afd8d175dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2afd8d15da30"/></to>
    </wire>
    <wire loc="79:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2afd8d166bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2afd8d153a30"/></to>
    </wire>
    <wire loc="131:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afd8d6e4160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afd8d6d8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afd8d6d00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afd8d6d70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afd8d6c4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afd8d6c7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afd8d6cd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afd8d6d2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afd8d6d40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c7680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c1930"/></to>
    </wire>
    <wire loc="139:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afd8d6e1490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afd8d6cbc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afd8d6c8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afd8d6cd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afd8d6dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afd8d6ce0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afd8d6d0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afd8d6ce880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afd8d6c6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afd8d6c7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afd8d6d4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afd8d6cf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afd8d6c9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afd8d6d6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d6c4ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afd8d6de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afd8d6db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afd8d6d10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afd8d6d1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afd8d6d80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afd8d6df2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afd8d6de020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afd8d6c9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afd8d6c6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afd8d6d20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afd8d6cf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afd8d6d50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afd8d6df940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afd8d6d5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afd8d6cb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afd8d2bdbb0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2ba020"/></to>
    </wire>
    <wire loc="54:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2badb0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d2ca960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d2be810"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2b9ba0"/></to>
    </wire>
    <wire loc="59:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2afd8d2a8b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afd8d32e770"/></to>
    </wire>
    <wire loc="74:../../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afd8d32e770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afd8d3281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afd8d2b8400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d37fc40"/></to>
    </wire>
    <wire loc="52:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d37fc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8e2accc0"/></to>
    </wire>
    <wire loc="63:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afd8d2b6080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afd8d37e8f0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afd8d37e8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afd8e2a9130"/></to>
    </wire>
    <wire loc="64:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d2ac680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d68a020"/></to>
    </wire>
    <wire loc="54:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d68a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afd8e2a72b0"/></to>
    </wire>
    <wire loc="67:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8d2b4a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="88:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2afd8d2a4bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2afd8d3281d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2afd8d324b70"/></to>
    </wire>
    <wire loc="110:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afd8e2a72b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d38f3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afd8e2a9130"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afd8d391c20"/></to>
    </wire>
    <wire loc="105:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8e2accc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d3921d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e2aa970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e29f2c0"/></to>
    </wire>
    <wire loc="64:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e29f2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d4ee2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2afd8d391c20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2afd8d403440"/></to>
    </wire>
    <wire loc="108:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8e2a9740"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8d390320"/></to>
    </wire>
    <wire loc="92:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8d390320"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8d403a50"/></to>
    </wire>
    <wire loc="111:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8d38c510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8e2a7a50"/></to>
    </wire>
    <wire loc="115:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e292760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d391430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afd8d38e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8e2a0640"/></to>
    </wire>
    <wire loc="63:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8e2a0640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d4f0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afd8d3886a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8e29ac10"/></to>
    </wire>
    <wire loc="67:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8e29ac10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afd8d4f24d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d391430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d404c40"/></to>
    </wire>
    <wire loc="93:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d38f3f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d402700"/></to>
    </wire>
    <wire loc="88:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d3921d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d405e80"/></to>
    </wire>
    <wire loc="90:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8d401e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8d38c510"/></to>
    </wire>
    <wire loc="94:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2afd8d401060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2afd8d38e280"/></to>
    </wire>
    <wire loc="95:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2afd8d3fcde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2afd8d3886a0"/></to>
    </wire>
    <wire loc="98:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2afd8d400490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8d46b860"/></to>
    </wire>
    <wire loc="85:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8d46b860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2afd8d45f020"/></to>
    </wire>
    <wire loc="101:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8d3fb5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="102:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2afd8d3f9c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afd8d4618a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d45a750"/></to>
    </wire>
    <wire loc="86:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8d4643b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afd8d45bdc0"/></to>
    </wire>
    <wire loc="90:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2afd8d4a4700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2afd8c034cc0"/></to>
    </wire>
    <wire loc="91:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2afd8d4a2670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2afd8c030cc0"/></to>
    </wire>
    <wire loc="92:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2afd8d4a0670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2afd8c02ecc0"/></to>
    </wire>
    <wire loc="93:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2afd8d49e670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2afd8c04fcc0"/></to>
    </wire>
    <wire loc="94:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2afd8d49c670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2afd8c02acc0"/></to>
    </wire>
    <wire loc="14:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2afd8d4a95b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2afd8d5c4940"/></to>
    </wire>
    <wire loc="68:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afd8e299440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d4f13f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afd8e299a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afd8d5ced70"/></to>
    </wire>
    <wire loc="11:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afd8d5ced70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2afd8d5c4940"/></to>
    </wire>
    <wire loc="71:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8e29e2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8d46b860"/></to>
    </wire>
    <wire loc="66:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e29fa60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d4eead0"/></to>
    </wire>
    <wire loc="58:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d4eead0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d5d6400"/></to>
    </wire>
    <wire loc="65:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d4ed8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e292760"/></to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d4ee2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d5d7020"/></to>
    </wire>
    <wire loc="106:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d5d7020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e392850"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2afd8d4f24d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2afd8d4ebd60"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d4f0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d5d8210"/></to>
    </wire>
    <wire loc="105:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d5d8210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8e393970"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d4f13f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d555710"/></to>
    </wire>
    <wire loc="108:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d5d6400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e390c30"/></to>
    </wire>
    <wire loc="57:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d5d6cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d4ed8a0"/></to>
    </wire>
    <wire loc="59:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d554bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d5d6400"/></to>
    </wire>
    <wire loc="62:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2afd8d555d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8d4643b0"/></to>
    </wire>
    <wire loc="63:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2afd8d5545e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afd8d4618a0"/></to>
    </wire>
    <wire loc="107:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8d5d77a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e390020"/></to>
    </wire>
    <wire loc="109:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e38f590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d5d6cd0"/></to>
    </wire>
    <wire loc="111:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afd8e38fd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2afd8e395750"/></to>
    </wire>
    <wire loc="75:../../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2afd8e38c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2afd8d5bb700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2afd8d45f020"/></to>
    </wire>
    <wire loc="18:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2afd8d5b6250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2afd8c034cc0"/></to>
    </wire>
    <wire loc="19:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2afd8d5b41f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2afd8c02ecc0"/></to>
    </wire>
    <wire loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d731a10"/></from>
      <to><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d742080"/></to>
    </wire>
    <wire loc="61:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d730b00"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d7410c0"/></to>
    </wire>
    <wire loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2afd8d73a020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2afd8d0fb020"/></to>
    </wire>
    <wire loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2afd8d739380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2afd8d0fa380"/></to>
    </wire>
    <wire loc="67:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2afd8d7386b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2afd8d0f96b0"/></to>
    </wire>
    <wire loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afd8d736a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afd8d12ae30"/></to>
    </wire>
    <wire loc="69:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2afd8d7356e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d7d1750"/></to>
    </wire>
    <wire loc="126:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8d7d1750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8d2ca960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d734530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d835ad0"/></to>
    </wire>
    <wire loc="195:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d835ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d733ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d7cb120"/></to>
    </wire>
    <wire loc="137:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d7cb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afd8d7333a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2afd8d7cbdc0"/></to>
    </wire>
    <wire loc="139:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2afd8d7cbdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d732a50"/></from>
      <to><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d7ca5e0"/></to>
    </wire>
    <wire loc="140:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d7ca5e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afd8d732220"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2afd8d7ce120"/></to>
    </wire>
    <wire loc="132:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2afd8d7ce120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d7311f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d7c6020"/></to>
    </wire>
    <wire loc="148:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d7c6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2afd8d7a5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <from><interface-ref name="stopContinueTask" scoped="" ref="0x2afd8d7a6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d7c4800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2afd8d7cfaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d7c7800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2afd8d7c22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2afd8d7bbad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2afd8d7c2ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2afd8d8352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2afd8d7b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d7cedc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2afd8d7b62f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d7b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2afd8d7c6800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d7c5800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2afd8d7bc2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2afd8d7bead0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d7c02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d7d0440"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c7680"/></to>
    </wire>
    <wire loc="138:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d7cb770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afd8d7b5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afd8d7b1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d7ccaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2afd8d7b7ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2afd8d7c5020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d7cf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2afd8d7b8ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2afd8d7b92f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2afd8d7b72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2afd8d836ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2afd8d7b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2afd8d7bd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2afd8d7b9ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2afd8d7b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2afd8d7bf2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2afd8d7d0db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2afd8d7c7020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2afd8d7c4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2afd8d7bcad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d7c0ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2afd8d7bb2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d7c32f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2afd8d7c3ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2afd8d7cac30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2afd8d7c9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2afd8d7b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d7b4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d7b42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2afd8d8362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2afd8d7bdad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2afd8d7b82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2afd8d7ce770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d7cc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2afd8d7bfad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2afd8d7c92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2afd8d7be2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2afd8d7b6ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d8347a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e3d1780"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e3c0b70"/></to>
    </wire>
    <wire loc="16:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e3c8b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e3d0020"/></to>
    </wire>
    <wire loc="53:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e3d0020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e3b9890"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e3c0b70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e3a3a30"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e3b20a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e3bf4f0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e3bf4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e3a2340"/></to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8e3b5c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8d877080"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8d877080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8d872cd0"/></to>
    </wire>
    <wire loc="54:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4574c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e3a8570"/></to>
    </wire>
    <wire loc="49:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e3a8570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e456a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e3a7c10"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e3a7c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e455da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e3a5020"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e3a5020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2afd8d86e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afd8c3b7020"/></to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d89fd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d901020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d901020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d9452b0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8d8fc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e409b50"/></to>
    </wire>
    <wire loc="20:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d940760"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d8fc870"/></to>
    </wire>
    <wire loc="53:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d8fc870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e402890"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e409b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e4a4660"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4b30a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4084f0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e4084f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4a3020"/></to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8e3ffc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8d877080"/></to>
    </wire>
    <wire loc="54:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4a0190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4aa340"/></to>
    </wire>
    <wire loc="49:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4aa340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e49e770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4a8a80"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4a8a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e49da80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4a7da0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4a7da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e503720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e4f1b70"/></to>
    </wire>
    <wire loc="16:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4f9b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e502020"/></to>
    </wire>
    <wire loc="53:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e502020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4ea890"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8e4f1b70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8e4d4660"/></to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4e30a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4f04f0"/></to>
    </wire>
    <wire loc="52:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8e4f04f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8e4d3020"/></to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2afd8e4e6c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2afd8d877080"/></to>
    </wire>
    <wire loc="54:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4cf190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4d9380"/></to>
    </wire>
    <wire loc="49:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4d9380"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4ce770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4d8a80"/></to>
    </wire>
    <wire loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4d8a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4cda80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4d7da0"/></to>
    </wire>
    <wire loc="51:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4d7da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d920e20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d928880"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d928880"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d8a3280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d89fd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d901020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500P.nc">
      <from><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/></from>
      <to><interface-ref name="Timer62500hz" scoped="" ref="0x2afd8d96cac0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
      <from><interface-ref name="Timer62500hz" scoped="" ref="0x2afd8d96cac0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d952150"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2afd8d9d9640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8d95f940"/></to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d95ae10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d964020"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2afd8d964020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d8a3280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d89fd50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2afd8d901020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2afd8d955060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2afd8d9d4a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2afd8d9a5b70"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2afd8d9a2ac0"/></to>
    </wire>
    <wire loc="54:../../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2afd8d9acd20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2afd8d9a2200"/></to>
    </wire>
    <wire loc="57:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x2afd8db60900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x2afd8e5b9920"/></to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x2afd8db61240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x2afd8e5b80f0"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x2afd8db63aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x2afd8e5bbaf0"/></to>
    </wire>
    <wire loc="64:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2afd8e5b77e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8da35020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x2afd8e5b5160"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8da342c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x2afd8e5b6490"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8da35020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x2afd8e5b3610"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8da342c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8da342c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8dadc580"/></to>
    </wire>
    <wire loc="52:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8da35020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8daccb20"/></to>
    </wire>
    <wire loc="77:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8daccb20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8db24ca0"/></to>
    </wire>
    <wire loc="53:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2afd8dadbac0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x2afd8dac99c0"/></to>
    </wire>
    <wire loc="60:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2afd8dac99c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dac5b70"/></to>
    </wire>
    <wire loc="54:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x2afd8dadac50"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x2afd8dac8cd0"/></to>
    </wire>
    <wire loc="61:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2afd8dac8cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dabf690"/></to>
    </wire>
    <wire loc="55:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x2afd8dad9de0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x2afd8dac6020"/></to>
    </wire>
    <wire loc="74:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x2afd8dac6020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2afd8db29b60"/></to>
    </wire>
    <wire loc="58:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8dad79e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8db75e40"/></to>
    </wire>
    <wire loc="52:../../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8db75e40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c339610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2afd8dad3d50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></to>
    </wire>
    <wire loc="102:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x2afd8dad0c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x2afd8dad0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2afd8db24ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2afd8e5e4970"/></to>
    </wire>
    <wire loc="56:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dac4de0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2afd8bfcb810"/></to>
    </wire>
    <wire loc="57:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dabe930"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2afd8bfc9810"/></to>
    </wire>
    <wire loc="58:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dab9480"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2afd8bfed810"/></to>
    </wire>
    <wire loc="64:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x2afd8db3fa80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8daba1b0"/></to>
    </wire>
    <wire loc="65:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2afd8db3ece0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dac5b70"/></to>
    </wire>
    <wire loc="66:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2afd8db3c020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dabf690"/></to>
    </wire>
    <wire loc="69:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8db44770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2afd8db30c10"/></to>
    </wire>
    <wire loc="52:../../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2afd8db30c10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c339610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8db287a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2afd8d16dbc0"/></to>
    </wire>
    <wire loc="80:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afd8db1da10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afd8db48a90"/></to>
    </wire>
    <wire loc="81:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db828b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db22e80"/></to>
    </wire>
    <wire loc="108:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db22e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e5e2c30"/></to>
    </wire>
    <wire loc="82:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db83b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db22270"/></to>
    </wire>
    <wire loc="107:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db22270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e5e2020"/></to>
    </wire>
    <wire loc="50:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2afd8db3bba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8db23a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e5e3850"/></to>
    </wire>
    <wire loc="109:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e5e0590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8db21770"/></to>
    </wire>
    <wire loc="111:../../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2afd8e5e0d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2afd8e5e67c0"/></to>
    </wire>
    <wire loc="75:../../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2afd8e5dd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2afd8e66b0f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2afd8db1da10"/></to>
    </wire>
    <wire loc="81:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afd8e66bb70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afd8db83590"/></to>
    </wire>
    <wire loc="83:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e66a270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db83b60"/></to>
    </wire>
    <wire loc="84:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e66ae80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db828b0"/></to>
    </wire>
    <wire loc="78:../../../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2afd8e669680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2afd8e669e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../../../tos/system/MainC.nc">
      <documentation loc="45:../../../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="EndDeviceC" loc="4:EndDeviceC.nc">
      <module/>
    </component>
    <component qname="EndDeviceAppC.TimerMilliC" loc="44(EndDeviceAppC.TimerMilliC):../../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC" loc="36:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP" loc="42:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <configuration/>
    </component>
    <component qname="DataP" loc="37:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <module/>
    </component>
    <component qname="PibP" loc="44:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <documentation loc="35:../../../../../tos/lib/mac/tkn154/PibP.nc">
        <short> &#10; This component maintains the PIB (PAN Information Base) attributes and&#10; provides interfaces for accessing fields in a MAC frame.</short>
        <long> &#10; This component maintains the PIB (PAN Information Base) attributes and&#10; provides interfaces for accessing fields in a MAC frame. &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioControlP" loc="36:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <configuration/>
    </component>
    <component qname="RadioControlImplP" loc="38:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <module/>
    </component>
    <component qname="RadioControlP.Queue" loc="42(RadioControlP.Queue):../../../../../tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioControlP.Arbiter" loc="50(RadioControlP.Arbiter):../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <documentation loc="30:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (added TransferableResource interface)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleTransferArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DispatchUnslottedCsmaP" loc="49:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <documentation loc="39:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
        <short> &#10; This module is responsible for the transmission/reception of DATA and&#10; COMMAND frames in a nonbeacon-enabled PAN.</short>
        <long> &#10; This module is responsible for the transmission/reception of DATA and&#10; COMMAND frames in a nonbeacon-enabled PAN. Its main tasks are initialization&#10; of the parameters of the unslotted CSMA-CA algorithm (NB, BE, etc.),&#10; initiating retransmissions and managing requests for enabling the receiver&#10; for a finite period of time. It does not implement the actual CSMA-CA&#10; algorithm, because due to its timing requirements the CSMA-CA algorithm is&#10; not part of the MAC implementation but of the chip-specific radio driver.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.DispatchQueueP" loc="36(TKN154NonBeaconEnabledP.DispatchQueueP):../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <instance number="0">
        <component-ref qname="DispatchQueueP"/>
      </instance>
      <module/>
    </component>
    <component qname="IndirectTxP" loc="37:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <module/>
    </component>
    <component qname="PollP" loc="39:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <module/>
    </component>
    <component qname="ScanP" loc="41:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/ScanP.nc">
        <short> &#10; This module is responsible for channel scanning.</short>
        <long> &#10; This module is responsible for channel scanning.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BeaconRequestRxP" loc="39:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <module/>
    </component>
    <component qname="AssociateP" loc="39:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <module/>
    </component>
    <component qname="DisassociateP" loc="39:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <module/>
    </component>
    <component qname="RxEnableP" loc="38:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <module/>
    </component>
    <component qname="PromiscuousModeP" loc="38:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <module/>
    </component>
    <component qname="CoordRealignmentP" loc="43:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <module/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.TxFramePoolP" loc="41(TKN154NonBeaconEnabledP.TxFramePoolP):../../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.TxFramePoolP.PoolP" loc="53(TKN154NonBeaconEnabledP.TxFramePoolP.PoolP):../../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2afd8cd9c270"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.TxControlPoolP" loc="41(TKN154NonBeaconEnabledP.TxControlPoolP):../../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.TxControlPoolP.PoolP" loc="53(TKN154NonBeaconEnabledP.TxControlPoolP.PoolP):../../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2afd8cd9c270"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.DispatchQueueC" loc="42(TKN154NonBeaconEnabledP.DispatchQueueC):../../../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.ScanRadioClient" loc="37(TKN154NonBeaconEnabledP.ScanRadioClient):../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <instance number="0">
        <component-ref qname="RadioClientC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.DispatchRadioClient" loc="37(TKN154NonBeaconEnabledP.DispatchRadioClient):../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <instance number="1">
        <component-ref qname="RadioClientC"/>
        <arguments>
          <value cst="I:12">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient" loc="37(TKN154NonBeaconEnabledP.PromiscuousModeRadioClient):../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <instance number="2">
        <component-ref qname="RadioClientC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TKN154NonBeaconEnabledP.PibRadioClient" loc="37(TKN154NonBeaconEnabledP.PibRadioClient):../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <instance number="3">
        <component-ref qname="RadioClientC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TKN154C" loc="37:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <configuration/>
    </component>
    <component qname="CC2420TKN154P" loc="42:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <module/>
    </component>
    <component qname="CC2420ControlTransmitC" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <documentation loc="36:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
        <short>&#10; This configuration combines CC2420ControlC and CC2420TransmitC&#10; and uses only one instance of CC2420SpiC.</short>
        <long>&#10; This configuration combines CC2420ControlC and CC2420TransmitC&#10; and uses only one instance of CC2420SpiC.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Jan-Hinrich Hauer&#10; @version $Revision: 1.4 $ $Date: 2009-03-04 18:31:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @version $Revision: 1.5 $ $Date: 2009-05-05 16:56:49 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlTransmitC.Spi" loc="39(CC2420ControlTransmitC.Spi):../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitP" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420ReceiveC" loc="40:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2009-03-04 18:31:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2009-05-05 16:56:49 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1" loc="2(Ieee802154NonBeaconEnabledC.PHYAlarm1):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62500hz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C" loc="41(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C):../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC" loc="41(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC):../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Timer):../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm):../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.Transform" loc="51(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.Transform):../../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm62500hz32P" loc="35(Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm62500hz32P):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <instance number="0">
        <component-ref qname="Alarm62500hz32P"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.PHYAlarm2" loc="44(Ieee802154NonBeaconEnabledC.PHYAlarm2):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
        <short>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; </short>
        <long>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm62500hz32VirtualizedC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Alarm32khzTo62500hzTransformC" loc="35:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khzTo62500hzTransformC.nc">
      <module/>
    </component>
    <component qname="Alarm32khz32VirtualizedP" loc="2:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <configuration/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.Alarm32khz32C" loc="41(Alarm32khz32VirtualizedP.Alarm32khz32C):../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC" loc="41(Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC):../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Timer):../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm):../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.Alarm32khz32C.Transform" loc="51(Alarm32khz32VirtualizedP.Alarm32khz32C.Transform):../../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Alarm32khz32VirtualizedP.VirtualizeAlarmC" loc="46(Alarm32khz32VirtualizedP.VirtualizeAlarmC):../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm" loc="2(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62500hz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C" loc="41(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C):../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC" loc="41(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC):../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.Transform" loc="51(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.Transform):../../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm62500hz32P" loc="35(Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm62500hz32P):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <instance number="1">
        <component-ref qname="Alarm62500hz32P"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTime62500hzC" loc="2:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62500hzC.Alarm62500hz32VirtualizedC" loc="44(LocalTime62500hzC.Alarm62500hz32VirtualizedC):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
        <short>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; </short>
        <long>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm62500hz32VirtualizedC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalTime62500hzP" loc="2:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzP.nc">
      <module/>
    </component>
    <component qname="TKN154TimingP" loc="44:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <documentation loc="36:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
        <short> &#10; In slotted CSMA-CA frames must be sent on backoff boundaries (slot width:&#10; 320 us).</short>
        <long> &#10; In slotted CSMA-CA frames must be sent on backoff boundaries (slot width:&#10; 320 us). The TelosB platform lacks a clock with sufficient precision and&#10; accuracy, i.e. for slotted CSMA-CA the timing is *not* standard compliant&#10; (this code is experimental)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.MACTimer1" loc="45(Ieee802154NonBeaconEnabledC.MACTimer1):../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Timer62500C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer62500P" loc="44:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500P.nc">
      <configuration/>
    </component>
    <component qname="HilTimer62500hzC" loc="43:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimer62500hzC.Alarm" loc="44(HilTimer62500hzC.Alarm):../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
        <short>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; </short>
        <long>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm62500hz32VirtualizedC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimer62500hzC.AlarmToTimerC" loc="46(HilTimer62500hzC.AlarmToTimerC):../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimer62500hzC.VirtualizeTimerC" loc="46(HilTimer62500hzC.VirtualizeTimerC):../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.MACTimer2" loc="45(Ieee802154NonBeaconEnabledC.MACTimer2):../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Timer62500C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.MACTimer3" loc="45(Ieee802154NonBeaconEnabledC.MACTimer3):../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Timer62500C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.MACTimer4" loc="45(Ieee802154NonBeaconEnabledC.MACTimer4):../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Timer62500C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ieee802154NonBeaconEnabledC.MACTimer5" loc="45(Ieee802154NonBeaconEnabledC.MACTimer5):../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Timer62500C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:../../../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EndDeviceAppC.TempSensor" loc="45(EndDeviceAppC.TempSensor):../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP" loc="45(EndDeviceAppC.TempSensor.SensirionSht11ReaderP):../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2afd8be6f970" loc="40:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2afd8be6fd10" loc="41:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2afd8be6e110" loc="42:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2afd8be6e490" loc="43:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2afd8be6e810" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2afd8be6eb80" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2afd8be6c020" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2afd8be6c3b0" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2afd8be6c780" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2afd8be96e70" loc="40:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2afd8beb5270" loc="41:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2afd8c075190" loc="40:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2afd8c075540" loc="41:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2afd8c0758f0" loc="42:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2afd8c075ca0" loc="43:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2afd8c073060" loc="44:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2afd8c3859d0" loc="43:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2afd8c3859d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2afd8c3b1120" loc="42:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2afd8c3b1120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2afd8c3d6a60" loc="55:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2afd8c3d6a60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2afd8c3d3290" loc="56:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2afd8c3d3290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2afd8c3d3680" loc="57:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2afd8c3d3680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2afd8c3d3e60" loc="58:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2afd8c3d3e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2afd8c3d2260" loc="59:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2afd8c3d2a60" loc="60:../../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2afd8c3d2a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2afd8c3e9ac0" loc="52:../../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2afd8c3e9ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2afd8c41d2d0" loc="53:../../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2afd8c41d2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2afd8c41d6c0" loc="54:../../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2afd8c41d6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2afd8c41c020" loc="55:../../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2afd8c41c020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2afd8c41c3f0" loc="56:../../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c44e4f0" loc="46:../../../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c44e4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c456d80" loc="46:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c456d80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2afd8c48b110" loc="46:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c4ae1f0" loc="46:../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c4ae1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2afd8c88edd0" loc="42:../../../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleTransferArbiterP" loc="50:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc" abstract="">
      <documentation loc="30:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (added TransferableResource interface)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DispatchQueueP" loc="36:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2afd8cd9c270" loc="41:../../../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2afd8cd9c270"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2afd8cd9c5e0" loc="41:../../../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2afd8cd954e0" loc="53:../../../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2afd8cd954e0"/></type-var>
        </typedef>
        <constant name="size" ref="0x2afd8cd95820" loc="53:../../../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2afd8cdcdd10" loc="42:../../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2afd8cdcdd10"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2afd8cdca0d0" loc="42:../../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioClientC" loc="37:../../../../../tos/lib/mac/tkn154/RadioClientC.nc" abstract="">
      <parameters>
        <constant name="clientID" ref="0x2afd8ce04de0" loc="37:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
          <component-ref qname="RadioClientC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2afd8d54f5b0" loc="89:../../../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2afd8d542140" loc="42:../../../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2afd8d52dbd0" loc="52:../../../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62500hz32C" loc="2:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62500hz32P" loc="35:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62500hz32VirtualizedC" loc="44:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc" abstract="">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
        <short>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; </short>
        <long>&#10; Alarm62500hzC is the alarm for async 62500hz alarms (virtualized)&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:../../../../../tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8d8f67c0" loc="46:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8d8f67c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afd8d8f3020" loc="46:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8d8f3020"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2afd8d8f3350" loc="46:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer62500C" loc="45:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc" abstract="">
      <documentation loc="33:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
        <short>&#10; The virtualized 62500 Hz timer abstraction.</short>
        <long>&#10; The virtualized 62500 Hz timer abstraction. Instantiating this &#10; component gives an 62500 Hz granularity timer.&#10;&#10; @author Philip Levis&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de> (62500hz)&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2afd8bda7bf0" loc="58:../../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bda7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2afd8bda8720" loc="57:../../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afd8bda8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afd8bda8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8bdaac40" loc="42:../../../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bdaac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2afd8bdbfc90" loc="6:../../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2afd8bdbfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdbe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8bdc2e70" loc="4:../../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bdc2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdbf220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2afd8bdbf5b0" loc="5:../../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2afd8bdbf5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdbf930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2afd8bdbe400" loc="7:../../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2afd8bdbe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdbe780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8bdb81a0" loc="2:../../../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bdb81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdb8520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2afd8bdc03a0" loc="39:../../../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2afd8bdc03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdc0720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2afd8bdf1850" loc="40:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afd8bdf1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afd8bdd97f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afd8bdf1d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afd8bdd9020"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afd8bdd91b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afd8bdf1bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afd8bdd9340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afd8bdd94d0"/>
        <function-ref name="initClocks" scoped="" ref="0x2afd8bdd9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8bdda2a0" loc="39:../../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bdda2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bdda620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2afd8be00a70" loc="46:../../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afd8be00a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afd8bdff980"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afd8bdff020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afd8bdff1b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afd8bdff340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afd8be00df0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afd8bdff4d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afd8bdff660"/>
        <function-ref name="initClocks" scoped="" ref="0x2afd8bdff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2afd8bdffcc0" loc="47:../../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2afd8bdffcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2afd8bdfe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8be003c0" loc="45:../../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8be003c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8be00740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2afd8be3ca50" loc="42:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2afd8be3ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be3cdd0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be3b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be3b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be3b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be3b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be3b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be3b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be3b980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be3bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2afd8be4a410" loc="51:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2afd8be4a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be4a790"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be4a920"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be4aab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be4ac40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be4add0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be49020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be491b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be49340"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2afd8be33bb0" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2afd8be33bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be32020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be321b0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be32340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be324d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be32660"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2afd8be56020" loc="68:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2afd8be56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be563a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be56530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be566c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be56850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be569e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be56b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2afd8be38020" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2afd8be38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be383a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be38530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be386c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be38850"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2afd8be5d570" loc="61:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2afd8be5d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5d8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5da80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5dc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5dda0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2afd8be53020" loc="71:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2afd8be53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be533a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be53530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be536c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be53850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be539e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be53b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2afd8be44a50" loc="55:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2afd8be44a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be44dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be43020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be431b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be43340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be434d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be43660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be437f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be43980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be43b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2afd8be23020" loc="40:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2afd8be23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be233a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be23530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be236c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be23850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be239e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be23b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be23d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be22020"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2afd8be58020" loc="66:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2afd8be58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be583a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be58530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be586c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be58850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be589e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be58b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2afd8be5f890" loc="59:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2afd8be5f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5fc10"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5fda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5e1b0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2afd8be498c0" loc="52:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2afd8be498c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be49d40"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be48020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be481b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be48340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be484d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be48660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be487f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be48980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be48b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2afd8be32bb0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2afd8be32bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be4c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be4c1b0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be4c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be4c4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be4c660"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2afd8be55020" loc="69:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2afd8be55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be553a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be55530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be556c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be55850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be559e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be55b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2afd8be47020" loc="53:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2afd8be47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be473a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be47530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be476c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be47850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be479e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be47b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be47d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be46020"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2afd8be38da0" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2afd8be38da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be34180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be34310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be344a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be34630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2afd8be247b0" loc="39:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2afd8be247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8be24b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8be24cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be24e50"/>
        <function-ref name="get" scoped="" ref="0x2afd8be2d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be2d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be2d340"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8be2d4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be2d660"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8be2d7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8be2d980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8be2db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2afd8be5c3e0" loc="62:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2afd8be5c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5c760"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5cc10"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2afd8be225a0" loc="41:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2afd8be225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be22920"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be22ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be22c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be22dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be3c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be3c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be3c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be3c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2afd8be42020" loc="56:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2afd8be42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be423a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be42530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be426c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be42850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be429e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be42b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be42d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be61020"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2afd8be4db60" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2afd8be4db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be33020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be331b0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be33340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be334d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be33660"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2afd8be57020" loc="67:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2afd8be57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be573a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be57530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be576c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be57850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be579e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be57b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2afd8be39140" loc="43:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2afd8be39140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be394c0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be39650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be397e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be39970"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be39b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2afd8be5e700" loc="60:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2afd8be5e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5ea80"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5ec10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5eda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5d020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2afd8be54020" loc="70:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2afd8be54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be543a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be54530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be546c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be54850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be549e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be54b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2afd8be465a0" loc="54:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2afd8be465a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be46920"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be46ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be46c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be46dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be44020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be441b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be44340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be444d0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2afd8be4cb70" loc="50:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2afd8be4cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8be4b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8be4b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be4b340"/>
        <function-ref name="get" scoped="" ref="0x2afd8be4b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be4b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be4b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8be4b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be4bb10"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8be4bca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8be4be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8be4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2afd8be5b1f0" loc="63:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2afd8be5b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5b570"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5ba20"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2afd8be59020" loc="65:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2afd8be59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be593a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8be59530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8be596c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be59850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be599e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8be59b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2afd8be5a020" loc="64:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2afd8be5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be5a5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5a730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5a8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5aa50"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2afd8be60a20" loc="58:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2afd8be60a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8be60da0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8be5f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8be5f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8be5f340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8be5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2afd8be615a0" loc="57:../../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2afd8be615a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be61920"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8be61ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be61c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8be61dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8be60020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be601b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8be60340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8be604d0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8be60660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2afd8bea0aa0" loc="53:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2afd8bea0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bea0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2afd8bea0450" loc="52:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2afd8bea0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bea07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2afd8be9f120" loc="54:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2afd8be9f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8be9f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2afd8bea1d80" loc="51:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bea1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bea0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8bea2540" loc="50:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bea2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bea28c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bea2a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bea2be0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bea2d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bea1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bea11b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bea1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bea14d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bea1660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bea17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bea1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2afd8be98940" loc="53:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2afd8be98940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8be98cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2afd8be982f0" loc="52:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2afd8be982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8be98670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2afd8be97020" loc="54:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2afd8be97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8be973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2afd8be99bf0" loc="51:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8be99bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8be98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8be9a3e0" loc="50:../../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8be9a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8be9a760"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8be9a8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8be9aa80"/>
        <function-ref name="get" scoped="" ref="0x2afd8be9ac10"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8be9ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8be99020"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8be991b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8be99340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8be994d0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8be99660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8be997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bef6a90" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bef6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bef6e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bef5020"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bef51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bef5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bef54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bef5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8be949d0" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8be949d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8be94d50"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bef7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bef71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bef7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bef74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bef7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bef77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bef7980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bef7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bef3020" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bef3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bef33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bef7de0" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bef7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bef6180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bef6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bef64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bef6630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bef67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bef5930" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bef5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bef5cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bef5e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bef4020"/>
        <function-ref name="get" scoped="" ref="0x2afd8bef41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bef4340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bef44d0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bef4660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bef47f0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bef4980"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bef4b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bef4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8beee160" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8beee160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8beee4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8beee670"/>
        <function-ref name="captured" scoped="" ref="0x2afd8beee800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8beee990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8beeeb20"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8beeecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bef0020" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bef0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bef03a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bef0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bef06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bef0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bef09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bef0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bef0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8beef020"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8beef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8beeb7a0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8beeb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8beebb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8beef480" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8beef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8beef800"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8beef990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8beefb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8beefcb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8beefe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8beed020" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8beed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8beed3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8beed530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8beed6c0"/>
        <function-ref name="get" scoped="" ref="0x2afd8beed850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8beed9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8beedb70"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8beedd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8beeb020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8beeb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8beeb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8beeb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf097a0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf09b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf09cb0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf09e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf08020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf081b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf08340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf0b6d0" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf0b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf0ba50"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf0bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf0bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf0a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf0a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf0a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf0a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf0a660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf0a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf07c50" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf07c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf0aac0" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf0aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf0ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf09020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf091b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf09340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf08610" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf08610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf08990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf08b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf08cb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf08e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf07020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf071b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf07340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf074d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf07660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf077f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf07980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf02cb0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf02cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf010a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf01230"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf013c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf01550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf016e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf01870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf04b30" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf04b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf03020"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf031b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf03340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf034d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf03660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf037f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf03980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf03b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf03ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8beff2f0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8beff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8beff670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf02020" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf023a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf02530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf026c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf02850"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf029e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf01b40" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf01b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf00020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf001b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf00340"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf004d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf00660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf007f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf00980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf00b10"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf00ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf00e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8beff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf1d2f0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf1d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf1d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf1d800"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf1d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf1db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf1dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf1de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8befb220" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8befb220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8befb5a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8befb730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8befb8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8befba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8befbbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8befbd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8befa020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8befa1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8befa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf1b7a0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf1b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf1bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8befa610" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8befa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8befa990"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8befab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8befacb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8befae40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf1c160" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf1c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf1c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf1c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf1c800"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf1c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf1cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf1ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf1ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf1b020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf1b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf1b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf1b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf167a0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf16b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf16cb0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf16e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf15020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf151b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf186d0" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf18a50"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf18be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf18d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf17020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf171b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf17340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf174d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf17660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf177f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf14c50" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf14c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf17ac0" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf17ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf17e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf16020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf161b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf16340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf15610" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf15610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf15990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf15b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf15cb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf15e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf14020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf141b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf14340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf144d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf14660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf147f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf14980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf0ecb0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf0ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf0d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf0d230"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf0d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf0d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf0d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf0d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf10b30" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf10b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf0f020"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf0f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf0f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf0f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf0f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf0f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf0f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf0fb10"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf0fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf2f2f0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf2f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf2f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf0e020" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf0e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf0e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf0e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf0e850"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf0db40" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf0db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf0c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf0c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf0c340"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf0c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf0c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf0c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf0c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf0cb10"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf0cca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf0ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf2a2f0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf2a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf2a800"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf2a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf2ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf2acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf2ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf2c220" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf2c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf2c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf2c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf2c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf2ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf2cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf2cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf2b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf2b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf2b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf287a0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf28b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf2b610" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf2b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf2b990"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf2bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf2bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf2be40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf29160" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf29160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf294e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf29670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf29800"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf29990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf29b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf29cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf29e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf28020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf281b0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf28340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf227a0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf22b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf22cb0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf22e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf21020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf211b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf246d0" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf24a50"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf24be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf24d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf23020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf23340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf234d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf23660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf20c50" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf20c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf23ac0" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf23ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf23e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf22020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf221b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf22340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf21610" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf21610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf21990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf21b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf21cb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf21e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf20020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf201b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf20340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf204d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf20660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf207f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8bf3fcb0" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8bf3fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf3e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8bf3e230"/>
        <function-ref name="captured" scoped="" ref="0x2afd8bf3e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf3e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf3e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8bf3e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2afd8bf41b30" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2afd8bf41b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8bf40020"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8bf401b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf40340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8bf404d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8bf40660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf407f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8bf40980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8bf40b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8bf40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2afd8bf3c2f0" loc="48:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2afd8bf3c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf3c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2afd8bf3f020" loc="45:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2afd8bf3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8bf3f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8bf3f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8bf3f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8bf3f850"/>
        <function-ref name="fired" scoped="" ref="0x2afd8bf3f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8bf3eb40" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8bf3eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8bf3d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8bf3d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8bf3d340"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf3d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8bf3d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8bf3d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8bf3d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8bf3db10"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8bf3dca0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8bf3de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8bf3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2afd8bf35240" loc="7:../../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2afd8bf35240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf355c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2afd8bf3aa90" loc="4:../../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2afd8bf3aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf3ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2afd8bf36260" loc="5:../../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2afd8bf36260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf365e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2afd8bf369f0" loc="6:../../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2afd8bf369f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8bf36d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2afd8bac6080" loc="55:../../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2afd8bac6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2afd8bac6400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2afd8b98b2d0" loc="51:../../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2afd8b98b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2afd8b98b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2afd8bb707d0" loc="52:../../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2afd8bb707d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2afd8bb70b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2afd8bddbb50" loc="39:../../../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2afd8bddbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2afd8bf74b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2afd8bf741b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2afd8bf74340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2afd8bf744d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2afd8bf74020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2afd8bf74660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2afd8bf747f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2afd8bf74980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2afd8bf8cdc0" loc="60:../../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2afd8bf8cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bf8b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2afd8bf8d590" loc="57:../../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afd8bf8d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afd8bf8d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2afd8bf8c6c0" loc="59:../../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2afd8bf8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bf8ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2afd8bf8dc00" loc="58:../../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afd8bf8dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bf8c020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afd8bf8c1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afd8bf8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2afd8b9221d0" loc="48:../../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2afd8b9221d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8b922550"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8b9226e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2afd8b92b3a0" loc="47:../../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afd8b92b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8b92b720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afd8b92b8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afd8b92ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2afd8bd81040" loc="56:../../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2afd8bd81040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8bd813c0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8bd81550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2afd8bd7e5d0" loc="57:../../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2afd8bd7e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2afd8bd7e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2afd8bd83140" loc="55:../../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2afd8bd83140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bd834c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2afd8bd83650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2afd8bd837e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2afd8bf9b0d0" loc="46:../../../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8bf9b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8bf9b450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8bf9b5e0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8bf9b770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8bf9b900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8bf9ba90"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf9bc20"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8bf9bdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8bf804d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8bf80020"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8bf801b0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8bf80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2afd8bf96060" loc="50:../../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2afd8bf96060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bf963e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bf96570"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bf96700"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bf96890"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf96a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bf96bb0"/>
        <function-ref name="set" scoped="" ref="0x2afd8bf96d40"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bf95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8bf99470" loc="46:../../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bf99470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bf997f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2afd8bf95340" loc="51:../../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2afd8bf95340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bf956c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bf95850"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bf959e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bf95b70"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf95d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bf90020"/>
        <function-ref name="set" scoped="" ref="0x2afd8bf901b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bf90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2afd8bf99a70" loc="47:../../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8bf99a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8bf99df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8bf98020"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8bf981b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8bf98340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8bf984d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bf98660"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8bf987f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8bf98e30"/>
        <function-ref name="set" scoped="" ref="0x2afd8bf98980"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8bf98b10"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8bf98ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2afd8bf90660" loc="52:../../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2afd8bf90660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bf909e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bf90b70"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bf90d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfb5020"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfb51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfb5340"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfb54d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfb5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2afd8bf9aaf0" loc="41:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2afd8bf9aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bf9ae70"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfbf030"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfbf1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfbf350"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfbf4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfbf670"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfbf800"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfbf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2afd8bfbfcf0" loc="42:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2afd8bfbfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfbe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfbe230"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfbe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfbe550"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfbe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfbe870"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfbea00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfbeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2afd8bfbc2e0" loc="44:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8bfbc2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8bfbc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2afd8bfbd020" loc="43:../../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2afd8bfbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfbd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfbd530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfbd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfbd850"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfbd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfbdb70"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfbdd00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afd8bfcd810" loc="53:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afd8bfcd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfcdb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfcdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfcc020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfcc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfcc340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfcc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfcc660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfcc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfcc980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfccb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfccca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfcce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfcb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfcb2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfcb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afd8bfde810" loc="66:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afd8bfde810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfdeb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfded20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfdd020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfdd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfdd340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfdd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfdd660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfdd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfdd980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfddb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfddca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfdde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfdc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfdc2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfdc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2afd8c032ca0" loc="145:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2afd8c032ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0310a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c031230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0313c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c031550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0316e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c031870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c031a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c031b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c031d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c030020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c030340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c030760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2afd8c05dcb0" loc="165:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2afd8c05dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c05c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c05c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c05c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c05c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c05c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c05c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c05ca00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c05cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c05cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c05b020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c05b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c05b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c05b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c05b760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c05b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2afd8c030cc0" loc="146:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2afd8c030cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c02f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c02f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c02f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c02f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c02f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c02f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c02fa00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c02fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c02fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c02e020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c02e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c02e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c02e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c02e760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c02e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2afd8c000810" loc="71:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2afd8c000810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c000b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c000d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfff020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfff340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfff660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfff980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfffb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bffe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bffe2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bffe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2afd8c0139a0" loc="84:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2afd8c0139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c013d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c012020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0121b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c012340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c012660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0127f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c012980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c012b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c012ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c012e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c011020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0111b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c011440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0115d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2afd8c0269a0" loc="97:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2afd8c0269a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c026d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c025020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0251b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c025340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c025660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0257f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c025980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c025b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c025ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c025e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c024020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c024440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2afd8c0169a0" loc="108:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2afd8c0169a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c016d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c03d020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c03d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c03d340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c03d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c03d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c03d7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c03d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c03db10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c03dca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c03de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c03c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c03c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c03c440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c03c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2afd8c02acc0" loc="149:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2afd8c02acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0500a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c050230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0503c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c050550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0506e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c050870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c050a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c050b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c050d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c04f020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c04f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c04f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c04f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c04f760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c04f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2afd8c041cb0" loc="159:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2afd8c041cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0400a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c040230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0403c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c040550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0406e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c040870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c040a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c040b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c040d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c03f020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c03f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c03f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c03f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c03f760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c03f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2afd8c055cc0" loc="171:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2afd8c055cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0540a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c054230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0543c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c054550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0546e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c054870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c054a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c054b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c054d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c053020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c053340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c053760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afd8bfed810" loc="56:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afd8bfed810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfedb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfedd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfec020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfec340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfec660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfec7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfec980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfecb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfecca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfece30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfeb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfeb2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfeb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2afd8c04fcc0" loc="150:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2afd8c04fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c04e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c04e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c04e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c04e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c04e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c04e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c04ea00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c04eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c04ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c04d020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c04d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c04d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c04d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c04d760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c04d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afd8bfe8810" loc="61:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afd8bfe8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfe8b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfe8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfe7020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfe71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfe7340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfe74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfe7660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfe77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfe7980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfe7b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfe7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfe7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfe6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfe62b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfe6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2afd8bffa810" loc="74:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2afd8bffa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bffab90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bffad20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bff9020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bff91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bff9340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bff94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bff9660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bff97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bff9980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bff9b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bff9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bff9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bff8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bff82b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bff8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2afd8c00d9a0" loc="87:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2afd8c00d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c00dd20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c00c020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c00c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c00c340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c00c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c00c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c00c7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c00c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c00cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c00cca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c00ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c00b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c00b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c00b440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c00b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2afd8c0209a0" loc="100:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2afd8c0209a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c020d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c01f020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c01f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c01f340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c01f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c01f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c01f7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c01f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c01fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c01fca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c01fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c01e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c01e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c01e440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c01e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2afd8c0389a0" loc="111:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2afd8c0389a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c038d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c037020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0371b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c037340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0374d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c037660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0377f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c037980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c037b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c037ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c037e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c036020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0361b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c036440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0365d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afd8bfd1810" loc="51:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afd8bfd1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfd1b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfd1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfd0020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfd01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfd0340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfd04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfd0660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfd07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfd0980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfd0b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfd0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfd0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfcf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfcf2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfcf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afd8bfe2810" loc="64:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afd8bfe2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfe2c90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfe2e20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfe1020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfe11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfe1340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfe14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfe1660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfe17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfe1980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfe1b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfe1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfe1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfe0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfe02b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfe0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2afd8bff4810" loc="77:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2afd8bff4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bff4b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bff4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bff3020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bff31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bff3340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bff34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bff3660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bff37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bff3980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bff3b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bff3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bff3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bff2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bff22b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bff2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2afd8c034cc0" loc="144:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2afd8c034cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0330a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c033230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0333c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c033550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0336e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c033870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c033a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c033b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c033d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c032020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c032340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c032760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2afd8c063cb0" loc="162:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2afd8c063cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0620a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c062230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0623c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c062550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c062870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c062a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c062b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c062d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c061020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c061340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c061760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2afd8c057cb0" loc="169:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2afd8c057cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0560a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c056230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0563c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c056550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0566e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c056870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c056a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c056b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c056d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c055020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c055340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c055760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2afd8c047cc0" loc="155:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2afd8c047cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0460a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c046230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0463c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c046550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0466e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c046870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c046a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c046b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c046d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c045020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c045340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c045760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2afd8bff0810" loc="82:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2afd8bff0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bff0d90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfef020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfef340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfef7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfefb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfefca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfefe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c015020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c015440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2afd8c0029a0" loc="95:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2afd8c0029a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c002d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c029020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0291b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c029340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c029660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0297f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c029980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c029b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c029ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c029e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c028020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0281b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c028440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0285d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2afd8c01a9a0" loc="106:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2afd8c01a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c01ad20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c019020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0191b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c019340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c019660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0197f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c019980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c019b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c019ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c019e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c018020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c018440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2afd8c061cb0" loc="163:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2afd8c061cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0600a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c060230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0603c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c060550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0606e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c060870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c060a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c060b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c060d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c05f020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c05f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c05f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c05f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c05f760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c05f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2afd8c04dcb0" loc="152:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2afd8c04dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c04c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c04c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c04c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c04c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c04c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c04c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c04ca00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c04cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c04cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c04b020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c04b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c04b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c04b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c04b760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c04b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afd8bfcb810" loc="54:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afd8bfcb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfcbb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfcbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfca020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfca340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfca660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfca980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfcab10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfcaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfcae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfc9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfc92b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfc9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afd8bfdc810" loc="67:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afd8bfdc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfdcb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfdcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c001020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c001340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c001660"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c001980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c001b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8c001ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c001e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c000020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0002b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c000440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2afd8c01e9a0" loc="104:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2afd8c01e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c01ed20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c01d020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c01d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c01d340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c01d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c01d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c01d7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c01d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c01db10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c01dca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c01de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c01c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c01c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c01c440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c01c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2afd8bffe810" loc="72:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2afd8bffe810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bffeb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bffed20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bffd020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bffd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bffd340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bffd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bffd660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bffd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bffd980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bffdb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bffdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bffde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bffc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bffc2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bffc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2afd8c0119a0" loc="85:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2afd8c0119a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c011d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c010020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0101b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c010340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c010660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0107f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c010980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c010b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c010ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c010e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c00f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c00f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c00f440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c00f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2afd8c0249a0" loc="98:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2afd8c0249a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c024d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c023020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0231b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c023340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c023660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0237f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c023980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c023b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c023ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c023e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c022020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0221b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c022440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0225d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2afd8c03c9a0" loc="109:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2afd8c03c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c03cd20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c03b020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c03b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c03b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c03b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c03b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c03b7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c03b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c03bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c03bca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c03be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c03a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c03a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c03a440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c03a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2afd8c049cc0" loc="154:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2afd8c049cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0480a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c048230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0483c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c048550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c048870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c048a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c048b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c048d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c047020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c047340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c047760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afd8bfd3870" loc="49:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afd8bfd3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfd3bf0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfd3d80"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfb8020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfb81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfb8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfb84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfb8660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfb87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfb8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfb8b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfb8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfb8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfb7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfb72b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfb7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afd8bfe6810" loc="62:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afd8bfe6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfe6b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfe6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfe5020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfe51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfe5340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfe54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfe5660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfe57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfe5980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfe5b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfe5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfe5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfe4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfe42b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfe4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2afd8bff8810" loc="75:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2afd8bff8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bff8b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bff8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bff7020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bff71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bff7340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bff74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bff7660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bff77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bff7980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bff7b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bff7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bff7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bff6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bff62b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bff6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2afd8c00b9a0" loc="88:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2afd8c00b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c00bd20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c00a020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c00a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c00a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c00a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c00a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c00a7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c00a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c00ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c00aca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c00ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c009020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c009440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2afd8c045cc0" loc="156:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2afd8c045cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0440a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c044230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0443c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c044550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c044870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c044a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c044b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c044d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c043020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c043340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c043760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2afd8c03fcb0" loc="160:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2afd8c03fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c03e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c03e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c03e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c03e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c03e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c03e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c03ea00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c03eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c03ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c065020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c065340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c065760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2afd8c05bcb0" loc="166:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2afd8c05bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c05a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c05a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c05a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c05a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c05a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c05a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c05aa00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c05ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c05ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c059020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c059340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c059760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2afd8c0069a0" loc="93:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2afd8c0069a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c006d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c005020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0051b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c005340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c005660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0057f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c005980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c005b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c005ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c005e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c004020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c004440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0045d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2afd8c043cc0" loc="157:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2afd8c043cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0420a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c042230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0423c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c042550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c042870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c042a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c042b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c042d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c041020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c041340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c041760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afd8bfcf810" loc="52:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afd8bfcf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfcfb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfcfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfce020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfce340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfce660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfce7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfce980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfceb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfceca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfcee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfcd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfcd2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfcd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afd8bfe0810" loc="65:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afd8bfe0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfe0b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfe0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfdf020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfdf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfdf340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfdf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfdf660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfdf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfdf980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfdfb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfdfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfdfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfde020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfde2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfde440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2afd8bff2810" loc="78:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2afd8bff2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bff2b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bff2d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bff1020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bff11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bff1340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bff14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bff1660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bff17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bff1980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bff1b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bff1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bff1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bff0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bff02b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bff0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2afd8c04bcc0" loc="153:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2afd8c04bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c04a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c04a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c04a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c04a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c04a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c04a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c04aa00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c04ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c04ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c049020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c049340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c049760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2afd8c05fcb0" loc="164:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2afd8c05fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c05e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c05e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c05e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c05e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c05e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c05e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c05ea00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c05eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c05ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c05d020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c05d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c05d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c05d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c05d760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c05d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2afd8c0159a0" loc="83:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2afd8c0159a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c015d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c014020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0141b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c014340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c014660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0147f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c014980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c014b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c014ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c014e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c013020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c013440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2afd8c0289a0" loc="96:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2afd8c0289a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c028d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c027020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0271b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c027340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0274d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c027660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0277f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c027980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c027b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c027ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c027e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c026020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c026440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2afd8c0189a0" loc="107:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2afd8c0189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c018d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c017020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0171b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c017340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c017660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0177f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c017980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c017b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c017ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c017e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c016020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0161b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c016440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afd8bfc9810" loc="55:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afd8bfc9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfc9b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfc9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfee020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfee340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfee660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfee980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfeeb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfeeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfeee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfed020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfed2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfed440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2afd8c01c9a0" loc="105:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2afd8c01c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c01cd20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c01b020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c01b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c01b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c01b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c01b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c01b7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c01b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c01bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c01bca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c01be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c01a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c01a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c01a440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c01a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afd8bfeb810" loc="60:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afd8bfeb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfebb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfebd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfe9020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfe91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfe9340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfe94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfe9660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfe97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfe9980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfe9b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfe9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfe9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfe8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfe82b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfe8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2afd8bffc810" loc="73:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2afd8bffc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bffcb90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bffcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bffb020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bffb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bffb340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bffb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bffb660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bffb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bffb980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bffbb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bffbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bffbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bffa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bffa2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bffa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2afd8c00f9a0" loc="86:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2afd8c00f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c00fd20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c00e020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c00e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c00e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c00e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c00e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c00e7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c00e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c00eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c00eca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c00ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c00d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c00d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c00d440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c00d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2afd8c0229a0" loc="99:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2afd8c0229a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c022d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c021020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0211b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c021340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0214d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c021660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0217f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c021980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c021b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c021ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c021e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c020020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0201b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c020440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0205d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2afd8c03a9a0" loc="110:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2afd8c03a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c03ad20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c039020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0391b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c039340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c039660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0397f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c039980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c039b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c039ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c039e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c038020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0381b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c038440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0385d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afd8bfb7810" loc="50:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afd8bfb7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfb7b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfb7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfd2020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfd21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfd2340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfd24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfd2660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfd27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfd2980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfd2b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfd2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfd2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfd1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfd12b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfd1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afd8bfe4810" loc="63:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afd8bfe4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bfe4b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bfe4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bfe3020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bfe31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bfe3340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bfe34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bfe3660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bfe37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bfe3980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bfe3b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bfe3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bfe3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bfe2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bfe22b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bfe2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2afd8bff6810" loc="76:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2afd8bff6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8bff6b90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8bff6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8bff5020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8bff51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8bff5340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8bff54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8bff5660"/>
        <function-ref name="get" scoped="" ref="0x2afd8bff57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8bff5980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8bff5b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8bff5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8bff5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8bff4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8bff42b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8bff4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2afd8c0099a0" loc="89:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2afd8c0099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c009d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c007020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0071b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c007340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0074d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c007660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0077f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c007980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c007b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c007ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c007e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c006020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0061b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c006440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0065d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2afd8c02cca0" loc="148:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2afd8c02cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c02b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c02b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c02b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c02b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c02b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c02b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c02ba00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c02bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c02bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c02a020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c02a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c02a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c02a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c02a760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c02a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2afd8c065cb0" loc="161:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2afd8c065cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0640a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c064230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0643c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c064550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0646e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c064870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c064a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c064b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c064d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c063020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c063340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c063760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2afd8c02ecc0" loc="147:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2afd8c02ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c02d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c02d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c02d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c02d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c02d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c02d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c02da00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c02db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c02dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c02c020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c02c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c02c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c02c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c02c760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c02c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2afd8c0049a0" loc="94:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2afd8c0049a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c004d20"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c003020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0031b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c003340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0034d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c003660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0037f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c003980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c003b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c003ca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c003e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c002020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0021b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c002440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0025d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2afd8c059cb0" loc="168:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2afd8c059cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0580a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c058230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0583c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c058550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0586e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c058870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c058a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c058b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c058d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c057020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c057340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c057760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2afd8c053cc0" loc="172:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2afd8c053cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0520a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c052230"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0523c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c052550"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0526e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c052870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c052a00"/>
        <function-ref name="get" scoped="" ref="0x2afd8c052b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c052d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c079020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c079340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c079760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2afd8c0369f0" loc="143:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2afd8c0369f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0351c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c035350"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0354e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c035670"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c035800"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c035990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c035b20"/>
        <function-ref name="get" scoped="" ref="0x2afd8c035cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c035e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c034020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c034340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c034760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c076d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c076d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0a10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0a1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0a1400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0a1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0a1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0a18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0a1a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0a1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0a1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0a0020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0a0760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c09d740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c09d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c09dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c09dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c09dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c09c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c09c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c09c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c09c4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c09c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c09c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c09c980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c09cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c09cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c09ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c09b120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c09b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c098100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c098100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c098480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c098610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0987a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c098930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c098ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c098c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c098de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c097020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c097340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c097660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c097a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c097c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c094d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c094d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0930e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c093270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c093400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c093590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c093720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0938b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c093a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c093bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c093d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c092020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c092340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c092760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c08f740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c08f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c08fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c08fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c08fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0b8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0b81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0b8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0b84d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0b8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0b87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0b8980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0b8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0b8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0b8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0b7120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0b4100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0b4480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0b4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0b47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0b4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0b4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0b4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0b4de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0b31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0b3340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0b34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0b3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0b37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0b3a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0b0d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0b0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0af0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0af270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0af400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0af590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0af720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0af8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0afa40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0afbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0afd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0ae020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0ae760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0ab740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0ab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0abac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0abc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0abde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0aa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0aa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0aa4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0aa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0aa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0aa980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0aab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0aaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0aae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0a9120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0a5100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0a5480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0a5610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0a57a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0a5930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0a5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0a5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0a5de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0a4340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0a4a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0cbd10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0cbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0ca0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0ca270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0ca400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0ca590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0ca720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0ca8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0caa40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0cabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0cad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0c9020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0c9760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0c6740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0c6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0c6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0c6de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0c5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0c54d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0c5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0c57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0c5980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0c5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0c5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0c5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0c4120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0c1100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0c1480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0c1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0c17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0c1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0c1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0c1de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0c0340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0c0a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0bdd80" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0bdd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0bc180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0bc310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0bc4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0bc630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0bc7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0bc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0bcae0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0bcc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0bce00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0bb020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0bb760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0e2740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0e2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0e2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0e2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0e14d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0e1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0e17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0e1980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0e1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0e1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0e1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0e0120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0dd100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0dd480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0dd610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0dd930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0ddac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0ddc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0ddde0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0dc340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0dca80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0d9d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0d70e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0d7270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0d7400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0d7590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0d7720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0d78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0d7a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0d7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0d7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0d6020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0d6760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0d3740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0d3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0d3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0d3de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0d24d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0d2980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0d1120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0ce100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0ce480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0ce610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0ce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0ce930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0ceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0cec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0cede0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0f7340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0f7a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0f4d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0f3400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0f3590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0f3720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0f38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0f3a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0f3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0f3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0f2020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0f2760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0ef740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0efac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0efde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0ee4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0ee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0ee980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0eeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0eeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0eee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0ed120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0ea100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0ea480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0ea610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0ea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0ea930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0eaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0eac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0eade0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0e9340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0e9a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0e6d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0e6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0e50e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0e5270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0e5400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0e5590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0e5720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0e58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0e5a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0e5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0e5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0e4020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0e4760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c10c740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c10c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c10cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c10cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c10cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c10b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c10b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c10b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c10b4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c10b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c10b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c10b980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c10bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c10bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c10be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c10a120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c10a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c107100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c107100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c107480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c107610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1077a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c107930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c107ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c107c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c107de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c105020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c105340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c105660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c105a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c105c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c102e60" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c102e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c101210"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1013a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c101530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1016c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c101850"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1019e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c101b70"/>
        <function-ref name="get" scoped="" ref="0x2afd8c101d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c100020"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c1001b0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c100340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c1004d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c100660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c1008f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c100a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0fd9f0" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0fd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0fdd70"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0fc020"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0fc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c0fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c0fc7f0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c0fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c0fcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c0fcca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c0fce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c0fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c0fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c0fb440"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c0fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c0f8460" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c0f8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c0f87e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c0f8970"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c0f8b00"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c0f8c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c0f8e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c123020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1231b0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c123340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1234d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c123660"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1237f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c123980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c123b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c123da0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c122020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c120e00" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c120e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c11f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c11f350"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c11f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c11f670"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c11f800"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c11f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c11fb20"/>
        <function-ref name="get" scoped="" ref="0x2afd8c11fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c11fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c11e020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c11e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c11e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c11e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c11e760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c11e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c11b740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c11b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c11bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c11bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c11bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c11a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c11a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c11a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c11a4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c11a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c11a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c11a980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c11ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c11aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c11ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c119120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c116100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c116100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c116480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c116610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1167a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c116930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c116ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c116c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c116de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c115020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c115340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c115660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c115a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c115c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c112d10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c112d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1110e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c111270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c111400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c111590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c111720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1118b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c111a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c111bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c111d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c110020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c110340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c110760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c138740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c138740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c138ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c138c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c138de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c137020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c137340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1374d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c137660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c137980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c137b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c137ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c137e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c136120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c133100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c133100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c133480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c133610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1337a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c133930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c133ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c133c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c133de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c132020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c132340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c132660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c132a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c132c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c12fd10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c12fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c12e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c12e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c12e400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c12e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c12e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c12e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c12ea40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c12ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c12ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c12d020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c12d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c12d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c12d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c12d760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c12d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c12a740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c12a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c12aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c12ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c12ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c129020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c129340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1294d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c129660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c129980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c129b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c129ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c129e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c128120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c125100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c125100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c125480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c125610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1257a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c125930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c125ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c125c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c125de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c124020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c124340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c124660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c124a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c124c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c14dd10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c14dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c14c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c14c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c14c400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c14c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c14c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c14c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c14ca40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c14cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c14cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c14b020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c14b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c14b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c14b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c14b760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c14b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c148740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c148740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c148ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c148c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c148de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c147020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c147340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1474d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c147660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1477f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c147980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c147b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c147ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c147e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c146120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c143100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c143100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c143480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c143610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1437a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c143930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c143ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c143c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c143de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c141020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c141340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c141660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c141a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c141c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c13ed10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c13ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c13d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c13d270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c13d400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c13d590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c13d720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c13d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c13da40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c13dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c13dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c13c020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c13c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c13c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c13c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c13c760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c13c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c165740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c165740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c165ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c165c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c165de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c164020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c164340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1644d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c164660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c164980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c164b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c164ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c164e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c163120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c160100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c160100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c160480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c160610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1607a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c160930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c160ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c160c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c160de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c15f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c15f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c15f340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c15f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c15f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c15f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c15fa80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c15fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c15cd10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c15cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c15b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c15b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c15b400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c15b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c15b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c15b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c15ba40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c15bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c15bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c15a020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c15a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c15a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c15a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c15a760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c15a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c157740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c157740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c157ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c157c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c157de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c156020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1561b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c156340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1564d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c156660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1567f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c156980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c156b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c156ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c156e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c155120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c152100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c152100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c152480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c152610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1527a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c152930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c152ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c152c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c152de0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c151020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c151340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c151660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c151a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c151c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c17ad10" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c17ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1790e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c179270"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c179400"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c179590"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c179720"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c179a40"/>
        <function-ref name="get" scoped="" ref="0x2afd8c179bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c179d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c178020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c178340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c178760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c175740" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c175740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c175ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c175c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c175de0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c173020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c173340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1734d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c173660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c173980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c173b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c173ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c173e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c172120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2afd8c16f100" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2afd8c16f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c16f480"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c16f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c16f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c16f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c16fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c16fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c16fde0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c16e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c16e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c16e340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c16e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c16e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c16e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c16ea80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c16ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8c1d42f0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1d4670"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1d4800"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1d4990"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1d4b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1d4cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1d4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c201020"/>
        <function-ref name="get" scoped="" ref="0x2afd8c2011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c201340"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c2014d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c201660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c2017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c201980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c201c10"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c201da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8c1e5020" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1e53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1e5530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1e56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1e5850"/>
        <function-ref name="get" scoped="" ref="0x2afd8c1e59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1e5b70"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1e5d00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8c1fede0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1fede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1fd180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1fd310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1fd4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1fd630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1fd7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1fd950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1fdae0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c1fdc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1fde00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c1fc020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c1fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c1fc760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8c1ffb90" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1ffb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1fe4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c1fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1fe7f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1fe980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1feb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8c1f9930" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8c1f9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1f9cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1f9e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8c1f8020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1f8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8c1f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1f8660"/>
        <function-ref name="get" scoped="" ref="0x2afd8c1f87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8c1f8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8c1f8b10"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1f8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8c1f8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8c1f7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8c1f72b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8c1fa710" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8c1fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8c1faa90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8c1fac20"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8c1fadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8c1f9020"/>
        <function-ref name="get" scoped="" ref="0x2afd8c1f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8c1f9340"/>
        <function-ref name="set" scoped="" ref="0x2afd8c1f94d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8c1f9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0x2afd8c23b810" loc="9:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendTimer" scoped="" ref="0x2afd8c23b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c239cf0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c23a300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c2390d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c23ac00"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c238660"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c2381e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c23a780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c248480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c2396e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c248950"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c248e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8c3108e0" loc="23:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8c3108e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c310c60"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c310df0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c286020"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c2861b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c286340"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c2864d0"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c286660"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c2867f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c286980"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c286b10"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c286ca0"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c286e30"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c2f2020"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c2f22b0"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c2f2440"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c2f25d0"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c2f2760"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c2f28f0"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c2f2a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2afd8c21a020" loc="7:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2afd8c21a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2afd8c21a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8c28c630" loc="16:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c28c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c28c9b0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c28cb40"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c28ccd0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c28ce60"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c277020"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c2771b0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c277340"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c2774d0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c277660"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c2777f0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c277980"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c277b10"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c277ca0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c276020"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c2761b0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c276340"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c2764d0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c276660"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c2767f0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c276980"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c276b10"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c276ca0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c276e30"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c28a020"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c28a1b0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c28a540"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c28a6d0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c28a860"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c28a9f0"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c28ab80"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c28ad10"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c289020"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c2891b0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c289340"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c2894d0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c289660"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c2897f0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c289980"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c289b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2afd8c304180" loc="24:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afd8c304180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c304500"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afd8c304690"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c304820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afd8c3049b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afd8c304b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_ASSOCIATE" ref="0x2afd8c27d130" loc="17:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c27d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c27d4b0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c27d640"/>
        <function-ref name="request" scoped="" ref="0x2afd8c27d7d0"/>
        <function-ref name="response" scoped="" ref="0x2afd8c27d960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c21a620" loc="8:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c21a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c21a9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c21ab30"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c21acc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c21ae50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c249020"/>
        <function-ref name="get" scoped="" ref="0x2afd8c2491b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c249340"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c249980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c2494d0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c249660"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c2497f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MCPS_DATA" ref="0x2afd8c287020" loc="22:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c287020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_DATA"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c2873a0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c287530"/>
        <function-ref name="request" scoped="" ref="0x2afd8c2876c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8c279210" loc="15:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c279210"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c279590"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c279720"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c2798b0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c279a40"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c279bd0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c279d60"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c235020"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c2351b0"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c235340"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c2354d0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c235660"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c2357f0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c235980"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c235c10"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c235da0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c232020"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c2321b0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c232340"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c2324d0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c232660"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c2327f0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c232980"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c232b10"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c232ca0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c232e30"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c278220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x2afd8c3015c0" loc="29:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x2afd8c3015c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8c30d200"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8c30d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_RESET" ref="0x2afd8c233b50" loc="14:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c233b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RESET"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c236020"/>
        <function-ref name="request" scoped="" ref="0x2afd8c2361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8c342640" loc="45:../../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="EndDeviceAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8c342640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c4d4c40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c4d61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c4d4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c4d6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c4d3590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c4d3110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c4d6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c4d7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c4d4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c4d7860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c4d7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2afd8c339610" loc="49:../../../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c339610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c336c40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c3371e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c336020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c337ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c334590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c334110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c337660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c338390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c336630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c338860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c338d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2afd8c3301d0" loc="46:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2afd8c3301d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c32c630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c32ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c32d9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c32d550"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c32b020"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c32cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c32d0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c330dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c32c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c32e2e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c32e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afd8c35ba80" loc="47:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8c35ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c35d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8c331400" loc="45:../../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8c331400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c331780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8c455020" loc="44:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8c455020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c453870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c454840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8c453220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c454d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8c453d30"/>
        <function-ref name="start" scoped="" ref="0x2afd8c455e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c454380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8c41e760" loc="43:../../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8c41e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c41eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e09a4f0" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e09a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e098db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e099da0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e098760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e0982a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e0962a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e0993d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e0998e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e09cc40" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e09cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e09a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afd8e082da0" loc="41:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e082da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e081180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e081310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e0814a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e081630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e0817c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afd8e084340" loc="39:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e084340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e0846c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e084850"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e0849e0"/>
        <function-ref name="get" scoped="" ref="0x2afd8e084b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e084d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e083020"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e0831b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e083340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e0834d0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e083660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e0837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afd8e083a80" loc="40:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e083a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e083e00"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e082020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e0821b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e082340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e0824d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e082660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e0827f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e082980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e082b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afd8c36dba0" loc="52:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8c36dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8c36b020"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8c36b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8c36b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8c36b4d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c36b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afd8c3704d0" loc="50:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c370850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8c3709e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8c370b70"/>
        <function-ref name="get" scoped="" ref="0x2afd8c370d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8c36f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c36f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8c36f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c36f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c36f660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8c36f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8c36f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afd8c36e280" loc="51:../../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8c36e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8c36e600"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8c36e790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8c36e920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8c36eab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8c36ec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8c36edd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8c36d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8c36d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8c36d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afd8e078a80" loc="49:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e078a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e078e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e077020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e0771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e077340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e0774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afd8e07a190" loc="47:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e07a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e07a510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e07a6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e07a830"/>
        <function-ref name="get" scoped="" ref="0x2afd8e07a9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e07ab50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e07ace0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e07ae70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e079030"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e0791c0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e079350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e0794e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e07e020" loc="46:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e07e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e07b870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e07c840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e07b220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e07cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e07bd30"/>
        <function-ref name="start" scoped="" ref="0x2afd8e07ee30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e07c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e07f660" loc="45:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e07f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e07f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afd8e079770" loc="48:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e079770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e079af0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e079c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e079e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e078020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e0781b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e078340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e0784d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e078660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e0787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afd8c3bf020" loc="43:../../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8c3bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c3bfe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3bb800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3bb340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3bbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2afd8c3b7020" loc="43:../../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2afd8c3b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c3b7e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3b6800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3b6340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3b6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afd8c3da2c0" loc="45:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8c3da2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c3da640"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8c3da7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8c3da960"/>
        <function-ref name="get" scoped="" ref="0x2afd8c3daaf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8c3dac80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3dae10"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8c3d8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3d81b0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3d8340"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8c3d84d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8c3d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afd8c3b20a0" loc="44:../../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8c3b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c3db020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3db9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3db4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3dbe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2afd8c3ed540" loc="63:../../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2afd8c3ed540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c3ec3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3ecd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3ec890"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3eb260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afd8c3f00f0" loc="62:../../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8c3f00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c3ef020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c3ef9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c3ef4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c3efe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e094890" loc="61:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e094890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e0910d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e0920d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e092a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e092590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e091590"/>
        <function-ref name="start" scoped="" ref="0x2afd8e0936e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e093bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e08d0a0" loc="73:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e08d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e08bb30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e08c9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e08b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e08b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e08a020"/>
        <function-ref name="start" scoped="" ref="0x2afd8e08c020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e08c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afd8e091c00" loc="68:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8e091c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e090a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e08f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e08f020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e08f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2afd8c458490" loc="74:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2afd8c458490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c458810"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c4589a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2afd8c45c1d0" loc="49:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8c45c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c459b30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c45a9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8c4594e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c459020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8c458020"/>
        <function-ref name="start" scoped="" ref="0x2afd8c45a020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c45a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8c462cf0" loc="48:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8c462cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c45d220"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c45f7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c45e590"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c45e110"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c45db20"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c45d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c45fc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c461940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c45eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c461e10"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c45f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2afd8c4b5e80" loc="71:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2afd8c4b5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c4b3220"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c4b33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2afd8c4bac30" loc="49:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2afd8c4bac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c4b5110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c4b76a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c4b64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c4b6020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c4b5a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c4b5590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c4b7b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c4b8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c4b6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c4b8d30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c4b7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8c4c0690" loc="48:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8c4c0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c4bbcf0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c4bd260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c4bb090"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c4bdba0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c4ba680"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c4ba1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c4bd700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c4be390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c4bb6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c4be880"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c4bed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afd8c4b1cf0" loc="48:../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8c4b1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c4e0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afd8c4df020" loc="49:../../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8c4df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c4dfe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8c4de800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8c4de340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8c4decc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RX_ENABLE" ref="0x2afd8c4e7840" loc="53:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8c4e7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RX_ENABLE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4e7bc0"/>
        <function-ref name="request" scoped="" ref="0x2afd8c4e7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalExtendedAddress" ref="0x2afd8c535190" loc="61:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8c535190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c535d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afd8c52e2b0" loc="63:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afd8c52e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c52e630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afd8c52e7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c52e950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afd8c52eae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afd8c52ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_GET" ref="0x2afd8c5012d0" loc="49:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c5012d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c501650"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c5017e0"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c501970"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c501b00"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c501c90"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c501e20"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c4fe020"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c4fe1b0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c4fe340"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c4fe4d0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c4fe660"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c4fe7f0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c4fe980"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c4fec10"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c4feda0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c4f7020"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c4f71b0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c4f7340"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c4f74d0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c4f7660"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c4f77f0"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c4f7980"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c4f7b10"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c4f7ca0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c4f7e30"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c4f6220"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c4f63b0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c4f6540"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c4f66d0"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c4f6860"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c4f69f0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c4f6b80"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c4f6d10"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c4f5020"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c4f51b0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c4f5340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c4f54d0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c4f5660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c4f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_DISASSOCIATE" ref="0x2afd8c4f8940" loc="48:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8c4f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4f8cc0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c4f8e50"/>
        <function-ref name="request" scoped="" ref="0x2afd8c501020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_START" ref="0x2afd8c511ad0" loc="56:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_START" scoped="" ref="0x2afd8c511ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_START"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c511e50"/>
        <function-ref name="request" scoped="" ref="0x2afd8c517020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154TxBeaconPayload" ref="0x2afd8c536990" loc="59:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8c536990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
      </instance>
      <interface-functions>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8c536d10"/>
        <function-ref name="modifyBeaconPayloadDone" scoped="" ref="0x2afd8c503020"/>
        <function-ref name="setBeaconPayload" scoped="" ref="0x2afd8c5031b0"/>
        <function-ref name="aboutToTransmit" scoped="" ref="0x2afd8c503340"/>
        <function-ref name="setBeaconPayloadDone" scoped="" ref="0x2afd8c5034d0"/>
        <function-ref name="beaconTransmitted" scoped="" ref="0x2afd8c503660"/>
        <function-ref name="modifyBeaconPayload" scoped="" ref="0x2afd8c5037f0"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8c503980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PromiscuousMode" ref="0x2afd8c53e020" loc="60:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8c53e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8c53e3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8c53e530"/>
        <function-ref name="start" scoped="" ref="0x2afd8c53e6c0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c53e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Frame" ref="0x2afd8c5172f0" loc="57:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c5172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c517670"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c517800"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c517990"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c517b20"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c517cb0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c517e40"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c516020"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c5161b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c516340"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c5164d0"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c516660"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c5167f0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c516980"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c516c10"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c516da0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c510020"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c5101b0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c510340"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c5104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timestamp" ref="0x2afd8c558860" loc="62:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timestamp" scoped="" ref="0x2afd8c558860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timestamp"/>
      </instance>
      <interface-functions>
        <function-ref name="modifyMACPayload" scoped="" ref="0x2afd8c558be0"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8c558d70"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8c52e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ASSOCIATE" ref="0x2afd8c4cb920" loc="45:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c4cb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4cbca0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c4cbe30"/>
        <function-ref name="request" scoped="" ref="0x2afd8c4cd020"/>
        <function-ref name="response" scoped="" ref="0x2afd8c4cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_POLL" ref="0x2afd8c4ea0d0" loc="51:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8c4ea0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_POLL"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4ea450"/>
        <function-ref name="request" scoped="" ref="0x2afd8c4ea5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_DATA" ref="0x2afd8c4d1670" loc="41:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c4d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_DATA"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4d19f0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c4d1b80"/>
        <function-ref name="request" scoped="" ref="0x2afd8c4d1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_COMM_STATUS" ref="0x2afd8c4ffaf0" loc="47:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c4ffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_COMM_STATUS"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c4ffe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ORPHAN" ref="0x2afd8c4efd50" loc="50:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8c4efd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ORPHAN"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c4f4100"/>
        <function-ref name="response" scoped="" ref="0x2afd8c4f4290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_BEACON_NOTIFY" ref="0x2afd8c4c97d0" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8c4c97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_BEACON_NOTIFY"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c4c9b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SCAN" ref="0x2afd8c51a780" loc="54:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8c51a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SCAN"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c51ab00"/>
        <function-ref name="request" scoped="" ref="0x2afd8c51ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SET" ref="0x2afd8c4e9020" loc="55:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c4e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c4e94a0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c4e9630"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c4e97c0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c4e9950"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c4e9ae0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c4e9c70"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c4e9e00"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c4e6020"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c4e61b0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c4e6340"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c4e64d0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c4e6660"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c4e67f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c4e6a80"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c4e6c10"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c4e6da0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c519020"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c5191b0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c519340"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c5194d0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c519660"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c5197f0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c519980"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c519b10"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c519ca0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c518220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154BeaconFrame" ref="0x2afd8c504390" loc="58:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154BeaconFrame" scoped="" ref="0x2afd8c504390"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
      </instance>
      <interface-functions>
        <function-ref name="parsePANDescriptor" scoped="" ref="0x2afd8c50f1b0"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8c5048a0"/>
        <function-ref name="isLocalAddrPending" scoped="" ref="0x2afd8c504a30"/>
        <function-ref name="getPendAddrSpec" scoped="" ref="0x2afd8c504bc0"/>
        <function-ref name="getBSN" scoped="" ref="0x2afd8c504d50"/>
        <function-ref name="getPendAddr" scoped="" ref="0x2afd8c50f020"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8c504710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RESET" ref="0x2afd8c4ea8a0" loc="52:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c4ea8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RESET"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c4eac20"/>
        <function-ref name="request" scoped="" ref="0x2afd8c4eadb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_PURGE" ref="0x2afd8c4cb2a0" loc="42:../../../../../tos/platforms/telosb/mac/tkn154/Ieee802154NonBeaconEnabledC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c4cb2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_PURGE"/>
      </instance>
      <interface-functions>
        <function-ref name="request" scoped="" ref="0x2afd8c4cb620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RX_ENABLE" ref="0x2afd8c541dc0" loc="63:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8c541dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RX_ENABLE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c540180"/>
        <function-ref name="request" scoped="" ref="0x2afd8c540310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTx" ref="0x2afd8c597020" loc="82:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8c597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c5975a0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c597730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer3" ref="0x2afd8c5b6650" loc="91:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer3" scoped="" ref="0x2afd8c5b6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c5b2c40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c5b31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c5b2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c5b3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c5b1590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c5b1110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c5b3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c5b4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c5b2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c5b4860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c5b4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeCalc" ref="0x2afd8c569020" loc="74:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8c5693a0"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8c569530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afd8c54ad70" loc="49:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afd8c54ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c549180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afd8c549310"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c5494a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afd8c549630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afd8c5497c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_GET" ref="0x2afd8c547cf0" loc="59:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c547cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c5460a0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c546230"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c5463c0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c546550"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c5466e0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c546870"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c546a00"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c546b90"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c546d20"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c545020"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c5451b0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c545340"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c5454d0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c545760"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c5458f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c545a80"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c545c10"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c545da0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c544020"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c5441b0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c544340"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c5444d0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c544660"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c5447f0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c544980"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c544d10"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c543020"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c5431b0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c543340"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c5434d0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c543660"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c5437f0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c543980"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c543b10"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c543ca0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c543e30"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c542020"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c5421b0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c542340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioRx" ref="0x2afd8c5946f0" loc="81:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8c5946f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c594a70"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c594c00"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c594d90"/>
        <function-ref name="received" scoped="" ref="0x2afd8c565020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_DISASSOCIATE" ref="0x2afd8c5473a0" loc="58:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8c5473a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c547720"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c5478b0"/>
        <function-ref name="request" scoped="" ref="0x2afd8c547a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2afd8c5a55f0" loc="95:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8c5a55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c5a4250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afd8c5a1bb0" loc="96:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8c5a1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8c5a3020"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8c5a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_START" ref="0x2afd8c5772e0" loc="66:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_START" scoped="" ref="0x2afd8c5772e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_START"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c577660"/>
        <function-ref name="request" scoped="" ref="0x2afd8c5777f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhySplitControl" ref="0x2afd8c58b700" loc="86:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhySplitControl" scoped="" ref="0x2afd8c58b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8c58ba80"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8c58bc10"/>
        <function-ref name="start" scoped="" ref="0x2afd8c58bda0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154TxBeaconPayload" ref="0x2afd8c56eb30" loc="71:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8c56eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
      </instance>
      <interface-functions>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8c56d020"/>
        <function-ref name="modifyBeaconPayloadDone" scoped="" ref="0x2afd8c56d1b0"/>
        <function-ref name="setBeaconPayload" scoped="" ref="0x2afd8c56d340"/>
        <function-ref name="aboutToTransmit" scoped="" ref="0x2afd8c56d4d0"/>
        <function-ref name="setBeaconPayloadDone" scoped="" ref="0x2afd8c56d660"/>
        <function-ref name="beaconTransmitted" scoped="" ref="0x2afd8c56d7f0"/>
        <function-ref name="modifyBeaconPayload" scoped="" ref="0x2afd8c56d980"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8c56db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PromiscuousMode" ref="0x2afd8c56c020" loc="72:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8c56c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8c56c3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8c56c530"/>
        <function-ref name="start" scoped="" ref="0x2afd8c56c6c0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c56c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2afd8c584be0" loc="89:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x2afd8c584be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c57e110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c5806a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c57f4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c57f020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c57ea10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c57e590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c580b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c583860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c57fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c583d30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c580220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Frame" ref="0x2afd8c575590" loc="69:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c575590"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c575910"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c575aa0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c575c30"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c575dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c570020"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c5701b0"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c570340"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c5704d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c570660"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c5707f0"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c570980"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c570b10"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c570ca0"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c56f020"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c56f1b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c56f340"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c56f4d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c56f660"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c56f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer4" ref="0x2afd8c5b1bc0" loc="92:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer4" scoped="" ref="0x2afd8c5b1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c5ac110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c5ae630"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c5ad4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c5ad020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c5aca10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c5ac590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c5aeab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c5af7e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c5adab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c5afcb0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c5ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetLocalExtendedAddress" ref="0x2afd8c56cd70" loc="73:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c56cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c56b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ASSOCIATE" ref="0x2afd8c549b00" loc="55:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8c549b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c549e80"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c548030"/>
        <function-ref name="request" scoped="" ref="0x2afd8c5481c0"/>
        <function-ref name="response" scoped="" ref="0x2afd8c548350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_POLL" ref="0x2afd8c542dc0" loc="61:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8c542dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_POLL"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c541180"/>
        <function-ref name="request" scoped="" ref="0x2afd8c541310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioOff" ref="0x2afd8c58c800" loc="83:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8c58c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c58cb80"/>
        <function-ref name="off" scoped="" ref="0x2afd8c58cd10"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c592020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnslottedCsmaCa" ref="0x2afd8c588600" loc="84:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c588600"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c588980"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c588b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c5a3430" loc="97:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c5a3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c5a37b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c5a3940"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c5a3ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c5a3c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c5a3df0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c5a2020"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c5a21b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c5a27f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c5a2340"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c5a24d0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c5a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_DATA" ref="0x2afd8c54dd70" loc="47:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c54dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_DATA"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c54a180"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c54a310"/>
        <function-ref name="request" scoped="" ref="0x2afd8c54a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_COMM_STATUS" ref="0x2afd8c548ce0" loc="57:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8c548ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_COMM_STATUS"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c5470a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SET" ref="0x2afd8c540e80" loc="65:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c540e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c57a220"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c57a3b0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c57a540"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c57a6d0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c57a860"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c57a9f0"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c57ab80"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c57ad10"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c579020"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c5791b0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c579340"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c5794d0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c579660"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c5798f0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c579a80"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c579c10"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c579da0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c578020"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c5781b0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c578340"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c5784d0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c578660"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c5787f0"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c578980"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c578b10"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ORPHAN" ref="0x2afd8c542600" loc="60:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8c542600"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ORPHAN"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c542980"/>
        <function-ref name="response" scoped="" ref="0x2afd8c542b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_BEACON_NOTIFY" ref="0x2afd8c548660" loc="56:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8c548660"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_BEACON_NOTIFY"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8c5489e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154BeaconFrame" ref="0x2afd8c56fb00" loc="70:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154BeaconFrame" scoped="" ref="0x2afd8c56fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
      </instance>
      <interface-functions>
        <function-ref name="parsePANDescriptor" scoped="" ref="0x2afd8c56e800"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8c56e030"/>
        <function-ref name="isLocalAddrPending" scoped="" ref="0x2afd8c56e1c0"/>
        <function-ref name="getPendAddrSpec" scoped="" ref="0x2afd8c56e350"/>
        <function-ref name="getBSN" scoped="" ref="0x2afd8c56e4e0"/>
        <function-ref name="getPendAddr" scoped="" ref="0x2afd8c56e670"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8c56fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PIBUpdate" ref="0x2afd8c572b60" loc="68:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c572b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c576c10"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c576790"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c5750d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SCAN" ref="0x2afd8c5405c0" loc="64:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8c5405c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SCAN"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c540a40"/>
        <function-ref name="request" scoped="" ref="0x2afd8c540bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyDetection" ref="0x2afd8c585e10" loc="85:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8c585e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="EnergyDetection"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2afd8c58b1c0"/>
        <function-ref name="start" scoped="" ref="0x2afd8c58b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPromiscuousMode" ref="0x2afd8c582920" loc="87:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c582920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8c584560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameUtility" ref="0x2afd8c5982c0" loc="75:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c5982c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8c598640"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8c5987d0"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8c598960"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8c598af0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8c598c80"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8c598e10"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8c568020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2afd8c57c060" loc="90:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x2afd8c57c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c5b7630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c57bac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c5b8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c5b84a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c5b6020"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c5b7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c5b8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c57cc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c5b7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c57b170"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c57b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_PURGE" ref="0x2afd8c54a760" loc="48:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c54a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_PURGE"/>
      </instance>
      <interface-functions>
        <function-ref name="request" scoped="" ref="0x2afd8c54aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RESET" ref="0x2afd8c5415d0" loc="62:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c5415d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RESET"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c541950"/>
        <function-ref name="request" scoped="" ref="0x2afd8c541ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer5" ref="0x2afd8c5aa060" loc="93:../../../../../tos/lib/mac/tkn154/TKN154NonBeaconEnabledP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer5" scoped="" ref="0x2afd8c5aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c5a7630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c5a9ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c5a8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c5a84a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c5a5020"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c5a7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c5a8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c5aac50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c5a7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c5a9170"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c5a9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DeviceCapTx" ref="0x2afd8c5d3930" loc="46:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceCapTx" scoped="" ref="0x2afd8c5d3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c5d3cb0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c5d3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DeviceCfpRx" ref="0x2afd8c5c77f0" loc="55:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceCfpRx" scoped="" ref="0x2afd8c5c77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c5c7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8c5ba9b0" loc="64:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8c5ba9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c5bad30"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c5b9020"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c5b91b0"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c5b9340"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c5b94d0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c5b9660"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c5b97f0"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c5b9980"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c5b9b10"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c5b9ca0"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c5b9e30"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c5f6020"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c5f61b0"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c5f6440"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c5f65d0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c5f6760"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c5f68f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c5f6a80"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c5f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8c5ccca0" loc="50:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8c5ccca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c5d1d50"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8c5d11e0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8c5d28c0"/>
        <function-ref name="put" scoped="" ref="0x2afd8c5d1660"/>
        <function-ref name="size" scoped="" ref="0x2afd8c5d2d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PurgeGtsDevice" ref="0x2afd8c5c4d80" loc="59:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PurgeGtsDevice" scoped="" ref="0x2afd8c5c4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c5c3180"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c5c3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8c5c3e30" loc="61:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c5c3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c5c11e0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c5c1370"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c5c1500"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c5c1690"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c5c1820"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c5c19b0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c5c1b40"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c5c1cd0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c5c1e60"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c5c0020"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c5c01b0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c5c0340"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c5c04d0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c5c0760"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c5c08f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c5c0a80"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c5c0c10"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c5c0da0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c5bf020"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c5bf1b0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c5bf340"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c5bf4d0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c5bf660"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c5bf7f0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c5bf980"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c5bfd10"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c5be020"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c5be1b0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c5be340"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c5be4d0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c5be660"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c5be7f0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c5be980"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c5beb10"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c5beca0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c5bee30"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c5bd020"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c5bd1b0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c5bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2afd8c5bbc10" loc="63:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afd8c5bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c5ba020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afd8c5ba1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c5ba340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afd8c5ba4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afd8c5ba660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordCapRx" ref="0x2afd8c5d79f0" loc="45:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordCapRx" scoped="" ref="0x2afd8c5d79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c5d7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordCfpRx" ref="0x2afd8c5c7020" loc="54:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordCfpRx" scoped="" ref="0x2afd8c5c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c5c74a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PurgeGtsCoord" ref="0x2afd8c5c3670" loc="60:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PurgeGtsCoord" scoped="" ref="0x2afd8c5c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c5c39f0"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c5c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8c5a0310" loc="41:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8c5a0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c5a0690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DeviceCfpTx" ref="0x2afd8c5cb580" loc="51:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceCfpTx" scoped="" ref="0x2afd8c5cb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c5cb900"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c5cba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DeviceCapRx" ref="0x2afd8c5d5370" loc="49:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceCapRx" scoped="" ref="0x2afd8c5d5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c5d56f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndirectTx" ref="0x2afd8c5c8660" loc="53:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IndirectTx" scoped="" ref="0x2afd8c5c8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c5c89e0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c5c8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c5bd5c0" loc="62:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c5bd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c5bd940"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c5bdad0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c5bdc60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c5bddf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c5bb020"/>
        <function-ref name="get" scoped="" ref="0x2afd8c5bb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c5bb340"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c5bb980"/>
        <function-ref name="set" scoped="" ref="0x2afd8c5bb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c5bb660"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c5bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_DATA" ref="0x2afd8c5a0940" loc="42:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_DATA" scoped="" ref="0x2afd8c5a0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_DATA"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c5a0cc0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8c5a0e50"/>
        <function-ref name="request" scoped="" ref="0x2afd8c59d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordCapTx" ref="0x2afd8c59a1c0" loc="47:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordCapTx" scoped="" ref="0x2afd8c59a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c59a540"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c59a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordCfpTx" ref="0x2afd8c5cbde0" loc="52:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordCfpTx" scoped="" ref="0x2afd8c5cbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c5c8180"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c5c8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PurgeDirect" ref="0x2afd8c5c2b90" loc="57:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PurgeDirect" scoped="" ref="0x2afd8c5c2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c5c4020"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c5c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BroadcastTx" ref="0x2afd8c59aa20" loc="48:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BroadcastTx" scoped="" ref="0x2afd8c59aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c59ada0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c5d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PurgeIndirect" ref="0x2afd8c5c4510" loc="58:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PurgeIndirect" scoped="" ref="0x2afd8c5c4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c5c4890"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c5c4a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8c5c7e40" loc="56:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c5c7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8c5c61e0"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8c5c6370"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8c5c6500"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8c5c6690"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8c5c6820"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8c5c69b0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8c5c6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCPS_PURGE" ref="0x2afd8c59d2e0" loc="43:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCPS_PURGE" scoped="" ref="0x2afd8c59d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MCPS_PURGE"/>
      </instance>
      <interface-functions>
        <function-ref name="request" scoped="" ref="0x2afd8c59d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalExtendedAddress" ref="0x2afd8c5f5190" loc="65:../../../../../tos/lib/mac/tkn154/DataP.nc">
      <component-ref qname="DataP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8c5f5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c5f5d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacReset" ref="0x2afd8c6394a0" loc="68:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MacReset" scoped="" ref="0x2afd8c6394a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c639820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Frame" ref="0x2afd8c6489b0" loc="55:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8c6489b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c648d30"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c647020"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c6471b0"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c647340"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c6474d0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c647660"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c6477f0"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c647980"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c647b10"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c647ca0"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c647e30"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c646020"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c6461b0"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c646440"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c6465d0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c646760"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c6468f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c646a80"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c646c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetMacSuperframeOrder" ref="0x2afd8c64d020" loc="51:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetMacSuperframeOrder" scoped="" ref="0x2afd8c64d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macSuperframeOrder_t" ref="0x2afd8c21f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8c64dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeCalc" ref="0x2afd8c63da70" loc="61:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c63da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8c63ddf0"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8c63b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2afd8c63eda0" loc="60:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2afd8c63eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8c63d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2afd8c63d310"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c63d4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2afd8c63d630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2afd8c63d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalInit" ref="0x2afd8c6561d0" loc="47:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalInit" scoped="" ref="0x2afd8c6561d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c656550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_GET" ref="0x2afd8c655020" loc="49:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c655020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c6553a0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c655530"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c6556c0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c655850"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c6559e0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c655b70"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c655d00"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c654020"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c6541b0"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c654340"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c6544d0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c654660"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c6547f0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c654a80"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c654c10"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c654da0"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c653020"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c6531b0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c653340"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c6534d0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c653660"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c6537f0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c653980"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c653b10"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c653ca0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c652220"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c6523b0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c652540"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c6526d0"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c652860"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c6529f0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c652b80"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c652d10"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c651020"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c6511b0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c651340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c6514d0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c651660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c6517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconFrame" ref="0x2afd8c645020" loc="56:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconFrame" scoped="" ref="0x2afd8c645020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
      </instance>
      <interface-functions>
        <function-ref name="parsePANDescriptor" scoped="" ref="0x2afd8c645d00"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8c645530"/>
        <function-ref name="isLocalAddrPending" scoped="" ref="0x2afd8c6456c0"/>
        <function-ref name="getPendAddrSpec" scoped="" ref="0x2afd8c645850"/>
        <function-ref name="getBSN" scoped="" ref="0x2afd8c6459e0"/>
        <function-ref name="getPendAddr" scoped="" ref="0x2afd8c645b70"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8c6453a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2afd8c6757f0" loc="73:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8c6757f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c66f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afd8c638760" loc="70:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8c638760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8c638ae0"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8c638c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2afd8c639bb0" loc="69:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x2afd8c639bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8c638020"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8c6381b0"/>
        <function-ref name="start" scoped="" ref="0x2afd8c638340"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c6384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchReset" ref="0x2afd8c63a6a0" loc="66:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DispatchReset" scoped="" ref="0x2afd8c63a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c63aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetMacPanCoordinator" ref="0x2afd8c64a7c0" loc="53:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetMacPanCoordinator" scoped="" ref="0x2afd8c64a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macPanCoordinator_t" ref="0x2afd8c21d320"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8c649400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PromiscuousModeGet" ref="0x2afd8c63b580" loc="65:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousModeGet" scoped="" ref="0x2afd8c63b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c63a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resetSpinTask" ref="0x2afd8c667530" loc="94:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="resetSpinTask" scoped="" ref="0x2afd8c667530"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c6678b0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c667a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioToken" ref="0x2afd8c670d20" loc="71:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8c670d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8c676a40"/>
        <function-ref name="release" scoped="" ref="0x2afd8c676270"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8c676400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8c676590"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8c6760e0"/>
        <function-ref name="request" scoped="" ref="0x2afd8c676720"/>
        <function-ref name="granted" scoped="" ref="0x2afd8c6768b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetLocalExtendedAddress" ref="0x2afd8c644240" loc="57:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLocalExtendedAddress" scoped="" ref="0x2afd8c644240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c644e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetMacBeaconTxTime" ref="0x2afd8c64c3e0" loc="52:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetMacBeaconTxTime" scoped="" ref="0x2afd8c64c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="ieee154_macBeaconTxTime_t" ref="0x2afd8c227980"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8c64a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioOff" ref="0x2afd8c676cf0" loc="72:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8c676cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c6750a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8c675230"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c6753c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IsRadioTokenRequested" ref="0x2afd8c640820" loc="58:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c640820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="token_requested_t" ref="0x2afd8c2ce400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c6424c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SET" ref="0x2afd8c651aa0" loc="50:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c651aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c651e20"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c650020"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c6501b0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c650340"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c6504d0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c650660"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c6507f0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c650980"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c650b10"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c650ca0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c650e30"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c64f020"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c64f1b0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c64f440"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c64f5d0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c64f760"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c64f8f0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c64fa80"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c64fc10"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c64fda0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c64e020"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c64e1b0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c64e340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c64e4d0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c64e660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c64e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchQueueReset" ref="0x2afd8c63ada0" loc="67:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DispatchQueueReset" scoped="" ref="0x2afd8c63ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c639180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioControlStopTask" ref="0x2afd8c66c6b0" loc="88:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioControlStopTask" scoped="" ref="0x2afd8c66c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c66cc30"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c66cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PIBUpdate" ref="0x2afd8c6411d0" loc="59:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8c6411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c63e4a0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c63e020"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c63e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameUtility" ref="0x2afd8c6498c0" loc="54:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c6498c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8c649c40"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8c649dd0"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8c648020"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8c6481b0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8c648340"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8c6484d0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8c648660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RESET" ref="0x2afd8c656810" loc="48:../../../../../tos/lib/mac/tkn154/PibP.nc">
      <component-ref qname="PibP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RESET" scoped="" ref="0x2afd8c656810"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RESET"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8c656b90"/>
        <function-ref name="request" scoped="" ref="0x2afd8c656d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8c811020" loc="46:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c811020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8c8113a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8c811530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8c81d2c0" loc="41:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8c81d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c81d640"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c81d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8c850b30" loc="54:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8c850b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8c854020"/>
        <function-ref name="configure" scoped="" ref="0x2afd8c8541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8c81b390" loc="42:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c81b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c81b710"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c81b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TransferableResource" ref="0x2afd8c813020" loc="45:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TransferableResource" scoped="" ref="0x2afd8c813020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8c813d00"/>
        <function-ref name="release" scoped="" ref="0x2afd8c813530"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8c8136c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8c813850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8c8133a0"/>
        <function-ref name="request" scoped="" ref="0x2afd8c8139e0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8c813b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8c81e1d0" loc="40:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8c81e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c81e550"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c81e6e0"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c81e870"/>
        <function-ref name="received" scoped="" ref="0x2afd8c81ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyTx" ref="0x2afd8c8104d0" loc="49:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyTx" scoped="" ref="0x2afd8c8104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c810850"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c8109e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyUnslottedCsmaCa" ref="0x2afd8c857700" loc="51:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyUnslottedCsmaCa" scoped="" ref="0x2afd8c857700"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c857a80"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c857c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8c814020" loc="44:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8c814020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c8143a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8c814530"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c8146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8c81a210" loc="43:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c81a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c81a590"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c81a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyRadioOff" ref="0x2afd8c856020" loc="52:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyRadioOff" scoped="" ref="0x2afd8c856020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c8563a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8c856530"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c8566c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c854430" loc="55:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c854430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c8547b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c854940"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c854ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c854c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c854df0"/>
        <function-ref name="get" scoped="" ref="0x2afd8c853020"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c8531b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c8537f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c853340"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c8534d0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c853660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPromiscuousMode" ref="0x2afd8c856b90" loc="53:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c856b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c8558a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyRx" ref="0x2afd8c8118b0" loc="48:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyRx" scoped="" ref="0x2afd8c8118b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c811c30"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c811dc0"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c810020"/>
        <function-ref name="received" scoped="" ref="0x2afd8c8101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhySlottedCsmaCa" ref="0x2afd8c810db0" loc="50:../../../../../tos/lib/mac/tkn154/RadioControlP.nc">
      <component-ref qname="RadioControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhySlottedCsmaCa" scoped="" ref="0x2afd8c810db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c857180"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c857310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacTx" ref="0x2afd8c84cbc0" loc="43:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MacTx" scoped="" ref="0x2afd8c84cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c84b020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c84b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8c84bac0" loc="44:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8c84bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c84be40"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c84a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacRx" ref="0x2afd8c84f9d0" loc="42:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MacRx" scoped="" ref="0x2afd8c84f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c84fd50"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c84c020"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c84c1b0"/>
        <function-ref name="received" scoped="" ref="0x2afd8c84c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyTx" ref="0x2afd8c845020" loc="50:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyTx" scoped="" ref="0x2afd8c845020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c8453a0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c845530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyUnslottedCsmaCa" ref="0x2afd8c843260" loc="52:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyUnslottedCsmaCa" scoped="" ref="0x2afd8c843260"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c8435e0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c843770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8c84a950" loc="45:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c84a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c84acd0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c84ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyRadioOff" ref="0x2afd8c843ad0" loc="53:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyRadioOff" scoped="" ref="0x2afd8c843ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c843e50"/>
        <function-ref name="off" scoped="" ref="0x2afd8c842020"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c8421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c8417b0" loc="55:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c8417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c841c30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c841dc0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c83f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c83f1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c83f340"/>
        <function-ref name="get" scoped="" ref="0x2afd8c83f4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c83f660"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c83fca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8c83f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c83f980"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c83fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacRadioOff" ref="0x2afd8c848750" loc="46:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MacRadioOff" scoped="" ref="0x2afd8c848750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c848ad0"/>
        <function-ref name="off" scoped="" ref="0x2afd8c848c60"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c848df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPromiscuousMode" ref="0x2afd8c842680" loc="54:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8c842680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c841390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afd8c844980" loc="48:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8c844980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8c844d00"/>
        <function-ref name="userId" scoped="" ref="0x2afd8c846020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhyRx" ref="0x2afd8c846340" loc="49:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhyRx" scoped="" ref="0x2afd8c846340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c8466c0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c846850"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c8469e0"/>
        <function-ref name="received" scoped="" ref="0x2afd8c846b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhySlottedCsmaCa" ref="0x2afd8c845900" loc="51:../../../../../tos/lib/mac/tkn154/RadioControlImplP.nc">
      <component-ref qname="RadioControlImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PhySlottedCsmaCa" scoped="" ref="0x2afd8c845900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c845c80"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c845e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8c88c220" loc="44:../../../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="RadioControlP.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8c88c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c88c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2afd8c88c830" loc="45:../../../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="RadioControlP.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2afd8c88c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8c88cbb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8c88cd40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8c8ba020"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8c8ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8c8cb850" loc="53:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8c8cb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8c8cbbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8c8cbd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8c8ca910" loc="57:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8c8ca910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8c8cacb0"/>
        <function-ref name="configure" scoped="" ref="0x2afd8c8cae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afd8c8c8120" loc="58:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afd8c8c8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8c8c84a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8c8c8630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8c8c87c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8c8c8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8c8cc6c0" loc="52:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8c8cc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="granted" scoped="" ref="0x2afd8c8cb4d0"/>
        <function-ref name="release" scoped="" ref="0x2afd8c8ccbf0"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8c8ccd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8c8cb020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8c8cb1b0"/>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8c8cca60"/>
        <function-ref name="request" scoped="" ref="0x2afd8c8cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8c8ca020" loc="54:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8c8ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8c8ca3a0"/>
        <function-ref name="userId" scoped="" ref="0x2afd8c8ca530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2afd8c8c8c20" loc="70:../../../../../tos/lib/mac/tkn154/SimpleTransferArbiterP.nc">
      <component-ref qname="RadioControlP.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2afd8c8c8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c8c7020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c8c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetMacSuperframeOrder" ref="0x2afd8c8f6b40" loc="66:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetMacSuperframeOrder" scoped="" ref="0x2afd8c8f6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macSuperframeOrder_t" ref="0x2afd8c21f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8c8f5750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameTx" ref="0x2afd8c907c70" loc="54:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameTx" scoped="" ref="0x2afd8c907c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c906020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c9061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8c92e4d0" loc="76:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8c92e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8c92e850"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8c92e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameExtracted" ref="0x2afd8c902d30" loc="56:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameExtracted" scoped="" ref="0x2afd8c902d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameExtracted"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c9040e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioRx" ref="0x2afd8c8ed450" loc="72:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8c8ed450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8c8ed7d0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8c8ed960"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8c8edaf0"/>
        <function-ref name="received" scoped="" ref="0x2afd8c8edc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTokenRequested" ref="0x2afd8c8fa8d0" loc="63:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8c8fa8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8c8fac50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8c8fade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndirectTxWaitTimer" ref="0x2afd8c9002a0" loc="61:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IndirectTxWaitTimer" scoped="" ref="0x2afd8c9002a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c8fc870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c8ffe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c8fdc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c8fd780"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8c8fb1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c8fccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c8fd300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c8ff020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c8fc260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c8ff4f0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c8ff9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8c8ec970" loc="74:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c8ec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c8eccf0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c8ece80"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c935030"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c9351c0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c935350"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c9354e0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c935670"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c935800"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c935990"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c935b20"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c935cb0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c935e40"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c934020"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c9342b0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c934440"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c9345d0"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c934760"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c9348f0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c934a80"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c934c10"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c934da0"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c933020"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c9331b0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c933340"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c9334d0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c933860"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c9339f0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c933b80"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c933d10"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c932020"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c9321b0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c932340"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c9324d0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c932660"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c9327f0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c932980"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c932b10"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c932ca0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c932e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WasRxEnabled" ref="0x2afd8c904580" loc="57:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WasRxEnabled" scoped="" ref="0x2afd8c904580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c903630"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c9031b0"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c903ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameRx" ref="0x2afd8c906a60" loc="55:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameRx" scoped="" ref="0x2afd8c906a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c906de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetIndirectTxFrame" ref="0x2afd8c8f4020" loc="67:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetIndirectTxFrame" scoped="" ref="0x2afd8c8f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c8f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioToken" ref="0x2afd8c8fb750" loc="62:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8c8fb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8c8fa4d0"/>
        <function-ref name="release" scoped="" ref="0x2afd8c8fbc60"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8c8fbdf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8c8fa020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8c8fbad0"/>
        <function-ref name="request" scoped="" ref="0x2afd8c8fa1b0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8c8fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxEnableStateChange" ref="0x2afd8c8f32d0" loc="68:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxEnableStateChange" scoped="" ref="0x2afd8c8f32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c8f14a0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c8f1020"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c8f1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wasRxEnabledTask" ref="0x2afd8c91fa10" loc="121:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="wasRxEnabledTask" scoped="" ref="0x2afd8c91fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c91fd90"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c91e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioOff" ref="0x2afd8c8ec020" loc="73:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8c8ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8c8ec3a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8c8ec530"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8c8ec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnslottedCsmaCa" ref="0x2afd8c8eec70" loc="71:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8c8eec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c8ed020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c8ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8c92ec60" loc="77:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8c92ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8c92d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8c92d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8c92d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8c92d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8c92d660"/>
        <function-ref name="get" scoped="" ref="0x2afd8c92d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8c92d980"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8c92c020"/>
        <function-ref name="set" scoped="" ref="0x2afd8c92db10"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8c92dca0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8c92de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startIndirectTxTimerTask" ref="0x2afd8c91ea60" loc="122:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startIndirectTxTimerTask" scoped="" ref="0x2afd8c91ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c91d020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c91d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IsRadioTokenRequested" ref="0x2afd8c8f93b0" loc="64:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8c8f93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="token_requested_t" ref="0x2afd8c2ce400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c8f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8c931120" loc="75:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8c931120"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c9314a0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c931630"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c9317c0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c931950"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c931ae0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c931c70"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c931e00"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c930020"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c9301b0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c930340"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c9304d0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c930660"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c9307f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c930a80"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c930c10"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c930da0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c92f020"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c92f1b0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c92f340"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c92f4d0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c92f660"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c92f7f0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c92f980"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c92fb10"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c92fca0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c92e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0x2afd8c9075c0" loc="53:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reset" scoped="" ref="0x2afd8c9075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c907940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalTxDoneTask" ref="0x2afd8c920a70" loc="120:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalTxDoneTask" scoped="" ref="0x2afd8c920a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c920df0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c91f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8c8efb60" loc="70:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8c8efb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8c8ee020"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8c8ee1b0"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8c8ee340"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8c8ee4d0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8c8ee660"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8c8ee7f0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8c8ee980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PIBUpdateMacRxOnWhenIdle" ref="0x2afd8c8f0160" loc="69:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PIBUpdateMacRxOnWhenIdle" scoped="" ref="0x2afd8c8f0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c8ef220"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c8f0d50"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c8ef6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IsRxEnableActive" ref="0x2afd8c8f8690" loc="65:../../../../../tos/lib/mac/tkn154/DispatchUnslottedCsmaP.nc">
      <component-ref qname="DispatchUnslottedCsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRxEnableActive" scoped="" ref="0x2afd8c8f8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c8f63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameTx" ref="0x2afd8c9f2910" loc="40:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9f2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c9f2cb0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c9f2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameExtracted" ref="0x2afd8c9f0250" loc="41:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameExtracted" scoped="" ref="0x2afd8c9f0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c9f05f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Purge" ref="0x2afd8c9f0840" loc="42:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Purge" scoped="" ref="0x2afd8c9f0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c9f0bc0"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c9f0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afd8c9ef1c0" loc="44:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afd8c9ef1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2afd8c9ec020"/>
        <function-ref name="enqueue" scoped="" ref="0x2afd8c9ecd80"/>
        <function-ref name="element" scoped="" ref="0x2afd8c9eb440"/>
        <function-ref name="full" scoped="" ref="0x2afd8c9ee260"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8c9eeb60"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8c9ec6d0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8c9efdb0"/>
        <function-ref name="size" scoped="" ref="0x2afd8c9ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubFrameExtracted" ref="0x2afd8c9e92c0" loc="46:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubFrameExtracted" scoped="" ref="0x2afd8c9e92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c9e9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="txTask" ref="0x2afd8c9e9910" loc="51:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="txTask" scoped="" ref="0x2afd8c9e9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8c9e9c90"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8c9e9e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameTxCsma" ref="0x2afd8c9ebaf0" loc="45:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameTxCsma" scoped="" ref="0x2afd8c9ebaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c9ebe70"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c9e9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0x2afd8c9f2210" loc="39:../../../../../tos/lib/mac/tkn154/DispatchQueueP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reset" scoped="" ref="0x2afd8c9f2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c9f2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndirectTxTimeout" ref="0x2afd8c9d52f0" loc="54:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IndirectTxTimeout" scoped="" ref="0x2afd8c9d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8c9d1870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8c9d4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8c9d2c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8c9d2780"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8ca1f1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8c9d1cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8c9d2300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8c9d4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8c9d1260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8c9d44f0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8c9d49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameTx" ref="0x2afd8c9e4410" loc="42:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameTx" scoped="" ref="0x2afd8c9e4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c9e4790"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c9e4920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8ca1f630" loc="55:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8ca1f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8ca1f9b0"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8ca1fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Purge" ref="0x2afd8c9deaa0" loc="46:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Purge" scoped="" ref="0x2afd8c9deaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Purge"/>
      </instance>
      <interface-functions>
        <function-ref name="purgeDone" scoped="" ref="0x2afd8c9dee20"/>
        <function-ref name="purge" scoped="" ref="0x2afd8c9dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8c9dc350" loc="52:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8c9dc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8c9dc6d0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8c9dc860"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8c9dc9f0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8c9dcb80"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8c9dcd10"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8c9db020"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8c9db1b0"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8c9db340"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8c9db4d0"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8c9db660"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8c9db7f0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8c9db980"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8c9dbb10"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8c9dbda0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8c9da020"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8c9da1b0"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8c9da340"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8c9da4d0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8c9da660"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8c9da7f0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8c9da980"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8c9dab10"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8c9daca0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8c9dae30"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8c9d9020"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8c9d93b0"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8c9d9540"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8c9d96d0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8c9d9860"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8c9d99f0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8c9d9b80"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8c9d9d10"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8c9d8020"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8c9d81b0"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8c9d8340"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8c9d84d0"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8c9d8660"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8c9d87f0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8c9d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Frame" ref="0x2afd8c9d8c50" loc="53:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154Frame" scoped="" ref="0x2afd8c9d8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8c9d7020"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8c9d71b0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8c9d7340"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8c9d74d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8c9d7660"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8c9d77f0"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8c9d7980"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8c9d7b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8c9d7ca0"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8c9d7e30"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8c9d6020"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8c9d61b0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8c9d6340"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8c9d65d0"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8c9d6760"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8c9d68f0"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8c9d6a80"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8c9d6c10"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8c9d6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetIndirectTxFrame" ref="0x2afd8c9dfa10" loc="45:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetIndirectTxFrame" scoped="" ref="0x2afd8c9dfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8c9de670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tryCoordCapTxTask" ref="0x2afd8ca182b0" loc="76:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="tryCoordCapTxTask" scoped="" ref="0x2afd8ca182b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8ca18630"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8ca187c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PendingAddrSpecUpdated" ref="0x2afd8c9e0d10" loc="44:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PendingAddrSpecUpdated" scoped="" ref="0x2afd8c9e0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8c9e3dc0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8c9e3940"/>
        <function-ref name="notify" scoped="" ref="0x2afd8c9df2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8ca1fdc0" loc="56:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8ca1fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8ca1e310"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8ca1e4a0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8ca1e630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8ca1e7c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8ca1e950"/>
        <function-ref name="get" scoped="" ref="0x2afd8ca1eae0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8ca1ec70"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8ca1d340"/>
        <function-ref name="set" scoped="" ref="0x2afd8ca1ee00"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8ca1d020"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8ca1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordCapTx" ref="0x2afd8c9dd410" loc="50:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordCapTx" scoped="" ref="0x2afd8c9dd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8c9dd790"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8c9dd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0x2afd8c9e7800" loc="41:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reset" scoped="" ref="0x2afd8c9e7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8c9e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataRequestRx" ref="0x2afd8c9ddc90" loc="51:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataRequestRx" scoped="" ref="0x2afd8c9ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8c9dc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PendingAddrWrite" ref="0x2afd8c9e0490" loc="43:../../../../../tos/lib/mac/tkn154/IndirectTxP.nc">
      <component-ref qname="IndirectTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PendingAddrWrite" scoped="" ref="0x2afd8c9e0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="WriteBeaconField"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8c9e0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataRx" ref="0x2afd8ca88340" loc="45:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataRx" scoped="" ref="0x2afd8ca88340"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8ca886c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataExtracted" ref="0x2afd8ca86560" loc="51:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataExtracted" scoped="" ref="0x2afd8ca86560"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameExtracted"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8ca868e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8ca83e80" loc="53:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8ca83e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8ca7f090"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8ca804a0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8ca82a90"/>
        <function-ref name="put" scoped="" ref="0x2afd8ca80920"/>
        <function-ref name="size" scoped="" ref="0x2afd8ca80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8ca7b300" loc="55:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8ca7b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8ca7b680"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8ca7b810"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8ca7b9a0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8ca7bb30"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8ca7bcc0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8ca7be50"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8ca7a020"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8ca7a1b0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8ca7a340"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8ca7a4d0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8ca7a660"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8ca7a7f0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8ca7a980"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8ca7ac10"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8ca7ada0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8ca79020"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8ca791b0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8ca79340"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8ca794d0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8ca79660"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8ca797f0"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8ca79980"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8ca79b10"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8ca79ca0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8ca79e30"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8ca78220"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8ca783b0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8ca78540"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8ca786d0"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8ca78860"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8ca789f0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8ca78b80"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8ca78d10"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8ca77020"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8ca771b0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8ca77340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8ca774d0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8ca77660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8ca777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataRequest" ref="0x2afd8ca87340" loc="46:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataRequest" scoped="" ref="0x2afd8ca87340"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataRequest"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="poll" scoped="" ref="0x2afd8ca876c0"/>
        <function-ref name="pollDone" scoped="" ref="0x2afd8ca87850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8ca8c3f0" loc="43:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8ca8c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8ca8c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_POLL" ref="0x2afd8ca8ca20" loc="44:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_POLL" scoped="" ref="0x2afd8ca8ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_POLL"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8ca8cda0"/>
        <function-ref name="request" scoped="" ref="0x2afd8ca88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControlPool" ref="0x2afd8ca7fa50" loc="54:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControlPool" scoped="" ref="0x2afd8ca7fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8ca7cb90"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8ca7c020"/>
        <function-ref name="empty" scoped="" ref="0x2afd8ca7e670"/>
        <function-ref name="put" scoped="" ref="0x2afd8ca7c4a0"/>
        <function-ref name="size" scoped="" ref="0x2afd8ca7eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalExtendedAddress" ref="0x2afd8ca77cf0" loc="56:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8ca77cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8ca76940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PollTx" ref="0x2afd8ca87c10" loc="50:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PollTx" scoped="" ref="0x2afd8ca87c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ca86020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ca861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8ca86bb0" loc="52:../../../../../tos/lib/mac/tkn154/PollP.nc">
      <component-ref qname="PollP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ca86bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8ca83020"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8ca831b0"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8ca83340"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8ca834d0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8ca83660"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8ca837f0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8ca83980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTx" ref="0x2afd8cace910" loc="57:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8cace910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cacec90"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cacee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8cacd1c0" loc="58:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8cacd1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8cacd540"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8cacd6d0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8cacd860"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8cacd9f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8cacdb80"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8cacdd10"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8cacc020"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8cacc1b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8cacc340"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8cacc4d0"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8cacc660"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8cacc7f0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8cacc980"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8caccc10"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8caccda0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8cacb020"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8cacb1b0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8cacb340"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8cacb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="continueScanRequestTask" ref="0x2afd8cb388c0" loc="191:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="continueScanRequestTask" scoped="" ref="0x2afd8cb388c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cb38c40"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cb38dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8cac3130" loc="61:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cac3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cac1260"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cac2660"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cac3d20"/>
        <function-ref name="put" scoped="" ref="0x2afd8cac2ae0"/>
        <function-ref name="size" scoped="" ref="0x2afd8cac21e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8cad7310" loc="52:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cad7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cad7690"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cad7820"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8cad79b0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cad7b40"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cad7cd0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cad7e60"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cad6020"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cad61b0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cad6340"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cad64d0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cad6660"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cad67f0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cad6980"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8cad6c10"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cad6da0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cad5020"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8cad51b0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cad5340"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8cad54d0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cad5660"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cad57f0"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8cad5980"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8cad5b10"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cad5ca0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8cad5e30"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cad4220"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8cad43b0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8cad4540"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cad46d0"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8cad4860"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cad49f0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8cad4b80"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cad4d10"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cad3020"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8cad31b0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cad3340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cad34d0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8cad3660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cad37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioRx" ref="0x2afd8cacfe20" loc="56:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8cacfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8cace1c0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8cace350"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8cace4e0"/>
        <function-ref name="received" scoped="" ref="0x2afd8cace670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconFrame" ref="0x2afd8cacb890" loc="59:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconFrame" scoped="" ref="0x2afd8cacb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
      </instance>
      <interface-functions>
        <function-ref name="parsePANDescriptor" scoped="" ref="0x2afd8caca660"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8cacbda0"/>
        <function-ref name="isLocalAddrPending" scoped="" ref="0x2afd8caca020"/>
        <function-ref name="getPendAddrSpec" scoped="" ref="0x2afd8caca1b0"/>
        <function-ref name="getBSN" scoped="" ref="0x2afd8caca340"/>
        <function-ref name="getPendAddr" scoped="" ref="0x2afd8caca4d0"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8cacbc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimerTask" ref="0x2afd8cb04360" loc="91:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTimerTask" scoped="" ref="0x2afd8cb04360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cb046e0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cb04870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8cadc860" loc="45:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8cadc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cadcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioToken" ref="0x2afd8cb0f600" loc="63:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8cb0f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8cb0d340"/>
        <function-ref name="release" scoped="" ref="0x2afd8cb0fb10"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8cb0fca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8cb0fe30"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8cb0f980"/>
        <function-ref name="request" scoped="" ref="0x2afd8cb0d020"/>
        <function-ref name="granted" scoped="" ref="0x2afd8cb0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ScanTimer" ref="0x2afd8cacab10" loc="60:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ScanTimer" scoped="" ref="0x2afd8cacab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cac5110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8cac76a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8cac64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8cac6020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8cac5a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8cac5590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8cac7b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8cac8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8cac6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8cac8d30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8cac7220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioOff" ref="0x2afd8cacf4e0" loc="55:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8cacf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8cacf860"/>
        <function-ref name="off" scoped="" ref="0x2afd8cacf9f0"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8cacfb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControlPool" ref="0x2afd8cac1c20" loc="62:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cac1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cb10d50"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cb101e0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cb11860"/>
        <function-ref name="put" scoped="" ref="0x2afd8cb10660"/>
        <function-ref name="size" scoped="" ref="0x2afd8cb11ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8cb0c5c0" loc="65:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8cb0c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8cb0c940"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8cb0cad0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8cb0cc60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8cb0cdf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8cb0b020"/>
        <function-ref name="get" scoped="" ref="0x2afd8cb0b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8cb0b340"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8cb0b980"/>
        <function-ref name="set" scoped="" ref="0x2afd8cb0b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8cb0b660"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8cb0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IsRadioTokenRequested" ref="0x2afd8cad81a0" loc="48:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8cad81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="token_requested_t" ref="0x2afd8c2ce400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cad8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8cad3aa0" loc="53:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cad3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cad3e20"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cad2020"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cad21b0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cad2340"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cad24d0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cad2660"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cad27f0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cad2980"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cad2b10"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cad2ca0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cad2e30"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cad1020"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cad11b0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cad1440"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cad15d0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cad1760"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cad18f0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cad1a80"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cad1c10"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cad1da0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cad0020"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cad01b0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cad0340"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cad04d0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cad0660"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cad09f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyDetection" ref="0x2afd8cad0ce0" loc="54:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8cad0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EnergyDetection"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2afd8cacf0a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8cacf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_BEACON_NOTIFY" ref="0x2afd8cad9840" loc="47:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_BEACON_NOTIFY" scoped="" ref="0x2afd8cad9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_BEACON_NOTIFY"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8cad9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_SCAN" ref="0x2afd8cad9020" loc="46:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SCAN" scoped="" ref="0x2afd8cad9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SCAN"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8cad93a0"/>
        <function-ref name="request" scoped="" ref="0x2afd8cad9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="nextIterationTask" ref="0x2afd8cb032b0" loc="92:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="nextIterationTask" scoped="" ref="0x2afd8cb032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cb03630"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cb037c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8cb0d610" loc="64:../../../../../tos/lib/mac/tkn154/ScanP.nc">
      <component-ref qname="ScanP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cb0d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8cb0d990"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8cb0db20"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8cb0dcb0"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8cb0de40"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8cb0c020"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8cb0c1b0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8cb0c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8cb71690" loc="54:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8cb71690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8cb71a10"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8cb71ba0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8cb71d30"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8cb70020"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8cb701b0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8cb70340"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8cb704d0"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8cb70660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8cb707f0"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8cb70980"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8cb70b10"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8cb70ca0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8cb70e30"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8cb6f120"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8cb6f2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8cb6f440"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8cb6f5d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8cb6f760"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8cb6f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconRequestRx" ref="0x2afd8cb7b950" loc="49:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconRequestRx" scoped="" ref="0x2afd8cb7b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cb7bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_START" ref="0x2afd8cb7b020" loc="45:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_START" scoped="" ref="0x2afd8cb7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_START"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8cb7b3a0"/>
        <function-ref name="request" scoped="" ref="0x2afd8cb7b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154TxBeaconPayload" ref="0x2afd8cb7fe50" loc="44:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEE154TxBeaconPayload" scoped="" ref="0x2afd8cb7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
      </instance>
      <interface-functions>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2afd8cb7c210"/>
        <function-ref name="modifyBeaconPayloadDone" scoped="" ref="0x2afd8cb7c3a0"/>
        <function-ref name="setBeaconPayload" scoped="" ref="0x2afd8cb7c530"/>
        <function-ref name="aboutToTransmit" scoped="" ref="0x2afd8cb7c6c0"/>
        <function-ref name="setBeaconPayloadDone" scoped="" ref="0x2afd8cb7c850"/>
        <function-ref name="beaconTransmitted" scoped="" ref="0x2afd8cb7c9e0"/>
        <function-ref name="modifyBeaconPayload" scoped="" ref="0x2afd8cb7cb70"/>
        <function-ref name="getBeaconPayloadLength" scoped="" ref="0x2afd8cb7cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconRequestResponseTx" ref="0x2afd8cb7a150" loc="50:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconRequestResponseTx" scoped="" ref="0x2afd8cb7a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cb7a4d0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cb7a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8cb7a910" loc="51:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cb7a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cb7ac90"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cb7ae20"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8cb79020"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cb791b0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cb79340"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cb794d0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cb79660"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cb797f0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cb79980"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cb79b10"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cb79ca0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cb79e30"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cb78020"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8cb782b0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cb78440"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cb785d0"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8cb78760"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cb788f0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8cb78a80"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cb78c10"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cb78da0"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8cb77020"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8cb771b0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cb77340"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8cb774d0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cb77860"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8cb779f0"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8cb77b80"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cb77d10"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8cb76020"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cb761b0"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8cb76340"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cb764d0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cb76660"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8cb767f0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cb76980"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cb76b10"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8cb76ca0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cb76e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetMacPanCoordinator" ref="0x2afd8cb6e020" loc="55:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetMacPanCoordinator" scoped="" ref="0x2afd8cb6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macPanCoordinator_t" ref="0x2afd8c21d320"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8cb6ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x2afd8cbac7c0" loc="137:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendBeaconTask" scoped="" ref="0x2afd8cbac7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cbacb40"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cbaccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0x2afd8cb7f7a0" loc="43:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reset" scoped="" ref="0x2afd8cb7f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cb7fb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8cb75120" loc="52:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cb75120"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cb754a0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cb75630"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cb757c0"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cb75950"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cb75ae0"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cb75c70"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cb75e00"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cb74020"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cb741b0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cb74340"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cb744d0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cb74660"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cb747f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cb74a80"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cb74c10"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cb74da0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cb73020"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cb731b0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cb73340"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cb734d0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cb73660"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cb737f0"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cb73980"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cb73b10"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cb73ca0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cb72220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8cb724f0" loc="53:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cb724f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8cb72870"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8cb72a00"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8cb72b90"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8cb72d20"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8cb71020"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8cb711b0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8cb71340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStartConfirmTask" ref="0x2afd8cb6a500" loc="69:../../../../../tos/lib/mac/tkn154/BeaconRequestRxP.nc">
      <component-ref qname="BeaconRequestRxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStartConfirmTask" scoped="" ref="0x2afd8cb6a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cb6a880"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cb6aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8cc0a820" loc="61:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8cc0a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8cc0aba0"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8cc0ad30"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8cc09020"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8cc091b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8cc09340"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8cc094d0"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8cc09660"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8cc097f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8cc09980"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8cc09b10"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8cc09ca0"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8cc09e30"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8cc08020"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8cc082b0"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8cc08440"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8cc085d0"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8cc08760"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8cc088f0"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8cc08a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8cbc46c0" loc="56:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cbc46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cbc2860"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cbc3c90"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cbc3390"/>
        <function-ref name="put" scoped="" ref="0x2afd8cbc2170"/>
        <function-ref name="size" scoped="" ref="0x2afd8cbc3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8cbbea70" loc="58:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cbbea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cbbedf0"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cbbc020"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8cbbc1b0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cbbc340"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cbbc4d0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cbbc660"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cbbc7f0"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cbbc980"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cbbcb10"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cbbcca0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cbbce30"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cc11020"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cc111b0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8cc11440"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cc115d0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cc11760"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8cc118f0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cc11a80"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8cc11c10"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cc11da0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cc10020"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8cc101b0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8cc10340"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cc104d0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8cc10660"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cc109f0"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8cc10b80"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8cc10d10"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cc0f020"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8cc0f1b0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cc0f340"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8cc0f4d0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cc0f660"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cc0f7f0"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8cc0f980"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cc0fb10"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cc0fca0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8cc0fe30"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cc0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AssociationResponseExtracted" ref="0x2afd8cbcb5f0" loc="51:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AssociationResponseExtracted" scoped="" ref="0x2afd8cbcb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameExtracted"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cbcb970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataRequest" ref="0x2afd8cbca530" loc="54:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataRequest" scoped="" ref="0x2afd8cbca530"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataRequest"/>
      </instance>
      <interface-functions>
        <function-ref name="poll" scoped="" ref="0x2afd8cbca8b0"/>
        <function-ref name="pollDone" scoped="" ref="0x2afd8cbcaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8cbd1920" loc="43:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8cbd1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cbd1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AssociationRequestRx" ref="0x2afd8cbcd470" loc="49:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AssociationRequestRx" scoped="" ref="0x2afd8cbcd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cbcd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ASSOCIATE" ref="0x2afd8cbce020" loc="44:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ASSOCIATE" scoped="" ref="0x2afd8cbce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8cbce3a0"/>
        <function-ref name="indication" scoped="" ref="0x2afd8cbce530"/>
        <function-ref name="request" scoped="" ref="0x2afd8cbce6c0"/>
        <function-ref name="response" scoped="" ref="0x2afd8cbce850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControlPool" ref="0x2afd8cbc0270" loc="57:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cbc0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cbbe330"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cbbf790"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cbc0e60"/>
        <function-ref name="put" scoped="" ref="0x2afd8cbbfc10"/>
        <function-ref name="size" scoped="" ref="0x2afd8cbbf310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AssociationResponseTx" ref="0x2afd8cbcbd30" loc="52:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AssociationResponseTx" scoped="" ref="0x2afd8cbcbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cbca0e0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cbca270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_COMM_STATUS" ref="0x2afd8cbceb50" loc="45:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8cbceb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_COMM_STATUS"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8cbcd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8cc0e2d0" loc="59:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cc0e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cc0e750"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cc0e8e0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cc0ea70"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cc0ec00"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cc0ed90"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cc0d020"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cc0d1b0"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cc0d340"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cc0d4d0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cc0d660"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cc0d7f0"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cc0d980"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cc0db10"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cc0dda0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cc0c020"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cc0c1b0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cc0c340"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cc0c4d0"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cc0c660"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cc0c7f0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cc0c980"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cc0cb10"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cc0cca0"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cc0ce30"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cc0b020"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cc0b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalExtendedAddress" ref="0x2afd8cc07020" loc="62:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cc07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cc07c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseTimeout" ref="0x2afd8cbc9020" loc="55:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResponseTimeout" scoped="" ref="0x2afd8cbc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cbc6630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8cbc8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8cbc7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8cbc74a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8cbc4020"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8cbc6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8cbc7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8cbc9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8cbc6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8cbc8110"/>
        <function-ref name="stop" scoped="" ref="0x2afd8cbc85e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8cc0b680" loc="60:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cc0b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8cc0ba00"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8cc0bb90"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8cc0bd20"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8cc0a020"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8cc0a1b0"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8cc0a340"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8cc0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AssociationRequestTx" ref="0x2afd8cbcdba0" loc="50:../../../../../tos/lib/mac/tkn154/AssociateP.nc">
      <component-ref qname="AssociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AssociationRequestTx" scoped="" ref="0x2afd8cbcdba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cbcb020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cbcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationToCoord" ref="0x2afd8cc4e3e0" loc="49:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationToCoord" scoped="" ref="0x2afd8cc4e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cc4e760"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cc4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8cc94690" loc="60:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8cc94690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8cc94a10"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8cc94ba0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8cc94d30"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8cc93020"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8cc931b0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8cc93340"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8cc934d0"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8cc93660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8cc937f0"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8cc93980"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8cc93b10"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8cc93ca0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8cc93e30"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8cc92120"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8cc922b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8cc92440"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8cc925d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8cc92760"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8cc928f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationDirectTx" ref="0x2afd8cc4fa90" loc="48:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationDirectTx" scoped="" ref="0x2afd8cc4fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cc4fe10"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cc4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8cc4c5a0" loc="55:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cc4c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cc4a710"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cc4bb00"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cc4b200"/>
        <function-ref name="put" scoped="" ref="0x2afd8cc4a020"/>
        <function-ref name="size" scoped="" ref="0x2afd8cc4b680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8cc459a0" loc="57:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cc459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cc45d20"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cc44020"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8cc441b0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cc44340"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cc444d0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cc44660"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cc447f0"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cc44980"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cc44b10"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cc44ca0"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cc44e30"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cc43020"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cc431b0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8cc43440"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cc435d0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cc43760"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8cc438f0"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cc43a80"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8cc43c10"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cc43da0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cc42020"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8cc421b0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8cc42340"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cc424d0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8cc42660"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cc429f0"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8cc42b80"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8cc42d10"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cc41020"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8cc411b0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cc41340"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8cc414d0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cc41660"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cc417f0"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8cc41980"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cc41b10"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cc41ca0"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8cc41e30"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cc40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_DISASSOCIATE" ref="0x2afd8cc506a0" loc="44:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_DISASSOCIATE" scoped="" ref="0x2afd8cc506a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8cc50a20"/>
        <function-ref name="indication" scoped="" ref="0x2afd8cc50bb0"/>
        <function-ref name="request" scoped="" ref="0x2afd8cc50d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationDirectRxFromCoord" ref="0x2afd8cc4ed10" loc="51:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationDirectRxFromCoord" scoped="" ref="0x2afd8cc4ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cc4d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8cc50020" loc="43:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8cc50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cc503a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationIndirectTx" ref="0x2afd8cc4f1c0" loc="47:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationIndirectTx" scoped="" ref="0x2afd8cc4f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cc4f540"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cc4f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControlPool" ref="0x2afd8cc48150" loc="56:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cc48150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cc45260"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cc47660"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cc48d40"/>
        <function-ref name="put" scoped="" ref="0x2afd8cc47ae0"/>
        <function-ref name="size" scoped="" ref="0x2afd8cc471e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_SET" ref="0x2afd8cc402d0" loc="58:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_SET" scoped="" ref="0x2afd8cc402d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_SET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cc40650"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cc407e0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cc40970"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cc40b00"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cc40c90"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cc40e20"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cc3f020"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cc3f1b0"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cc3f340"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cc3f4d0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cc3f660"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cc3f7f0"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cc3f980"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cc3fc10"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cc3fda0"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cc3e020"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cc3e1b0"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cc3e340"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cc3e4d0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cc3e660"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cc3e7f0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cc3e980"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cc3eb10"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cc3eca0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cc3ee30"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cc95220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalExtendedAddress" ref="0x2afd8cc92df0" loc="61:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cc92df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cc91a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationExtractedFromCoord" ref="0x2afd8cc4d550" loc="52:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationExtractedFromCoord" scoped="" ref="0x2afd8cc4d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameExtracted"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cc4d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisassociationRxFromDevice" ref="0x2afd8cc4dcc0" loc="53:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisassociationRxFromDevice" scoped="" ref="0x2afd8cc4dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cc4c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8cc954f0" loc="59:../../../../../tos/lib/mac/tkn154/DisassociateP.nc">
      <component-ref qname="DisassociateP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cc954f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8cc95970"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8cc95b00"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8cc95c90"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8cc95e20"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8cc94020"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8cc941b0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8cc94340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_RX_ENABLE" ref="0x2afd8cc9f150" loc="43:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_RX_ENABLE" scoped="" ref="0x2afd8cc9f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_RX_ENABLE"/>
      </instance>
      <interface-functions>
        <function-ref name="confirm" scoped="" ref="0x2afd8cc9f4d0"/>
        <function-ref name="request" scoped="" ref="0x2afd8cc9f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IsMacPanCoordinator" ref="0x2afd8cc96180" loc="50:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsMacPanCoordinator" scoped="" ref="0x2afd8cc96180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macPanCoordinator_t" ref="0x2afd8c21d320"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cc96d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IsSendingBeacons" ref="0x2afd8cce44f0" loc="54:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsSendingBeacons" scoped="" ref="0x2afd8cce44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cce3150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OutgoingSuperframeStructure" ref="0x2afd8ccedc50" loc="52:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OutgoingSuperframeStructure" scoped="" ref="0x2afd8ccedc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SuperframeStructure"/>
      </instance>
      <interface-functions>
        <function-ref name="sfStartTime" scoped="" ref="0x2afd8ccecca0"/>
        <function-ref name="sfSlotDuration" scoped="" ref="0x2afd8ccec1b0"/>
        <function-ref name="battLifeExtDuration" scoped="" ref="0x2afd8ccec340"/>
        <function-ref name="numGtsSlots" scoped="" ref="0x2afd8ccec4d0"/>
        <function-ref name="gtsFields" scoped="" ref="0x2afd8ccec660"/>
        <function-ref name="isBroadcastPending" scoped="" ref="0x2afd8ccec7f0"/>
        <function-ref name="beaconInterval" scoped="" ref="0x2afd8ccec980"/>
        <function-ref name="guardTime" scoped="" ref="0x2afd8ccecb10"/>
        <function-ref name="numCapSlots" scoped="" ref="0x2afd8ccec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IsTrackingBeacons" ref="0x2afd8cce5200" loc="53:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsTrackingBeacons" scoped="" ref="0x2afd8cce5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cce5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WasRxEnabled" ref="0x2afd8cce3790" loc="55:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WasRxEnabled" scoped="" ref="0x2afd8cce3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8cce2830"/>
        <function-ref name="enable" scoped="" ref="0x2afd8cce23b0"/>
        <function-ref name="notify" scoped="" ref="0x2afd8cce2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8cce0180" loc="56:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8cce0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8cce0500"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8cce0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxEnableStateChange" ref="0x2afd8cc9ee10" loc="45:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxEnableStateChange" scoped="" ref="0x2afd8cc9ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8cc9c020"/>
        <function-ref name="enable" scoped="" ref="0x2afd8cc9da80"/>
        <function-ref name="notify" scoped="" ref="0x2afd8cc9c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxEnableTimer" ref="0x2afd8cc9cc10" loc="49:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxEnableTimer" scoped="" ref="0x2afd8cc9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cc97110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8cc996a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8cc984a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8cc98020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8cc97a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8cc97590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8cc99b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8cc9b860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8cc98ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8cc9bd30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8cc99220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reset" ref="0x2afd8cca3ac0" loc="42:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reset" scoped="" ref="0x2afd8cca3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cca3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncomingSuperframeStructure" ref="0x2afd8cce6780" loc="51:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncomingSuperframeStructure" scoped="" ref="0x2afd8cce6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SuperframeStructure"/>
      </instance>
      <interface-functions>
        <function-ref name="sfStartTime" scoped="" ref="0x2afd8cced7f0"/>
        <function-ref name="sfSlotDuration" scoped="" ref="0x2afd8cce6c90"/>
        <function-ref name="battLifeExtDuration" scoped="" ref="0x2afd8cce6e20"/>
        <function-ref name="numGtsSlots" scoped="" ref="0x2afd8cced020"/>
        <function-ref name="gtsFields" scoped="" ref="0x2afd8cced1b0"/>
        <function-ref name="isBroadcastPending" scoped="" ref="0x2afd8cced340"/>
        <function-ref name="beaconInterval" scoped="" ref="0x2afd8cced4d0"/>
        <function-ref name="guardTime" scoped="" ref="0x2afd8cced660"/>
        <function-ref name="numCapSlots" scoped="" ref="0x2afd8cce6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IsRxEnableActive" ref="0x2afd8cc9fb30" loc="44:../../../../../tos/lib/mac/tkn154/RxEnableP.nc">
      <component-ref qname="RxEnableP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRxEnableActive" scoped="" ref="0x2afd8cc9fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cc9e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStartDoneTask" ref="0x2afd8ccf9020" loc="96:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStartDoneTask" scoped="" ref="0x2afd8ccf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8ccf93a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8ccf9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FrameRx" ref="0x2afd8cd0a550" loc="44:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameRx" scoped="" ref="0x2afd8cd0a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cd0a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PromiscuousMode" ref="0x2afd8cd0d7b0" loc="42:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousMode" scoped="" ref="0x2afd8cd0d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8cd0db30"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8cd0dcc0"/>
        <function-ref name="start" scoped="" ref="0x2afd8cd0de50"/>
        <function-ref name="stop" scoped="" ref="0x2afd8cd0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8cd0d080" loc="41:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8cd0d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cd0d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PromiscuousModeGet" ref="0x2afd8cd0b4e0" loc="43:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousModeGet" scoped="" ref="0x2afd8cd0b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cd0a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioToken" ref="0x2afd8cd080d0" loc="47:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8cd080d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8cd08db0"/>
        <function-ref name="release" scoped="" ref="0x2afd8cd085e0"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8cd08770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8cd08900"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8cd08450"/>
        <function-ref name="request" scoped="" ref="0x2afd8cd08a90"/>
        <function-ref name="granted" scoped="" ref="0x2afd8cd08c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioOff" ref="0x2afd8cd07c30" loc="49:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8cd07c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8cd06020"/>
        <function-ref name="off" scoped="" ref="0x2afd8cd061b0"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8cd06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IsRadioTokenRequested" ref="0x2afd8cd0ae50" loc="45:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IsRadioTokenRequested" scoped="" ref="0x2afd8cd0ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="token_requested_t" ref="0x2afd8c2ce400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cd09ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPromiscuousMode" ref="0x2afd8cd06810" loc="50:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8cd06810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8cd05480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="continueStopTask" ref="0x2afd8cd4a020" loc="129:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="continueStopTask" scoped="" ref="0x2afd8cd4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cd4a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cd4a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PromiscuousRx" ref="0x2afd8cd07150" loc="48:../../../../../tos/lib/mac/tkn154/PromiscuousModeP.nc">
      <component-ref qname="PromiscuousModeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PromiscuousRx" scoped="" ref="0x2afd8cd07150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8cd074d0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8cd07660"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8cd077f0"/>
        <function-ref name="received" scoped="" ref="0x2afd8cd07980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Frame" ref="0x2afd8cd2e690" loc="58:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Frame" scoped="" ref="0x2afd8cd2e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Frame"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x2afd8cd2ea10"/>
        <function-ref name="getDSN" scoped="" ref="0x2afd8cd2eba0"/>
        <function-ref name="setAddressingFields" scoped="" ref="0x2afd8cd2ed30"/>
        <function-ref name="getDstPANId" scoped="" ref="0x2afd8cd2d020"/>
        <function-ref name="getPayload" scoped="" ref="0x2afd8cd2d1b0"/>
        <function-ref name="isTimestampValid" scoped="" ref="0x2afd8cd2d340"/>
        <function-ref name="hasStandardCompliantHeader" scoped="" ref="0x2afd8cd2d4d0"/>
        <function-ref name="getDstAddr" scoped="" ref="0x2afd8cd2d660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2afd8cd2d7f0"/>
        <function-ref name="getSrcAddrMode" scoped="" ref="0x2afd8cd2d980"/>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8cd2db10"/>
        <function-ref name="getSrcPANId" scoped="" ref="0x2afd8cd2dca0"/>
        <function-ref name="getFrameType" scoped="" ref="0x2afd8cd2de30"/>
        <function-ref name="getRSSI" scoped="" ref="0x2afd8cd2c120"/>
        <function-ref name="getDstAddrMode" scoped="" ref="0x2afd8cd2c2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2afd8cd2c440"/>
        <function-ref name="getPayloadLength" scoped="" ref="0x2afd8cd2c5d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2afd8cd2c760"/>
        <function-ref name="wasPromiscuousModeEnabled" scoped="" ref="0x2afd8cd2c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalExtendedAddress" ref="0x2afd8cd24550" loc="61:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalExtendedAddress" scoped="" ref="0x2afd8cd24550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cd23170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxFramePool" ref="0x2afd8cd2cdf0" loc="59:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxFramePool" scoped="" ref="0x2afd8cd2cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cd28090"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cd2a4a0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cd2ba80"/>
        <function-ref name="put" scoped="" ref="0x2afd8cd2a920"/>
        <function-ref name="size" scoped="" ref="0x2afd8cd2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MLME_GET" ref="0x2afd8cd33d90" loc="57:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_GET" scoped="" ref="0x2afd8cd33d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_GET"/>
      </instance>
      <interface-functions>
        <function-ref name="macRxOnWhenIdle" scoped="" ref="0x2afd8cd32180"/>
        <function-ref name="macMinBE" scoped="" ref="0x2afd8cd32310"/>
        <function-ref name="macSuperframeOrder" scoped="" ref="0x2afd8cd324a0"/>
        <function-ref name="macAssociationPermit" scoped="" ref="0x2afd8cd32630"/>
        <function-ref name="macResponseWaitTime" scoped="" ref="0x2afd8cd327c0"/>
        <function-ref name="macBeaconOrder" scoped="" ref="0x2afd8cd32950"/>
        <function-ref name="macMaxFrameRetries" scoped="" ref="0x2afd8cd32ae0"/>
        <function-ref name="macBattLifeExtPeriods" scoped="" ref="0x2afd8cd32c70"/>
        <function-ref name="phyCurrentPage" scoped="" ref="0x2afd8cd32e00"/>
        <function-ref name="phyCCAMode" scoped="" ref="0x2afd8cd31020"/>
        <function-ref name="macBattLifeExt" scoped="" ref="0x2afd8cd311b0"/>
        <function-ref name="macPANId" scoped="" ref="0x2afd8cd31340"/>
        <function-ref name="phyCurrentChannel" scoped="" ref="0x2afd8cd314d0"/>
        <function-ref name="phyMaxFrameDuration" scoped="" ref="0x2afd8cd31760"/>
        <function-ref name="macMaxFrameTotalWaitTime" scoped="" ref="0x2afd8cd318f0"/>
        <function-ref name="macTransactionPersistenceTime" scoped="" ref="0x2afd8cd31a80"/>
        <function-ref name="macMinSIFSPeriod" scoped="" ref="0x2afd8cd31c10"/>
        <function-ref name="macShortAddress" scoped="" ref="0x2afd8cd31da0"/>
        <function-ref name="macSyncSymbolOffset" scoped="" ref="0x2afd8cd30020"/>
        <function-ref name="macMaxBE" scoped="" ref="0x2afd8cd301b0"/>
        <function-ref name="macAssociatedPANCoord" scoped="" ref="0x2afd8cd30340"/>
        <function-ref name="macBeaconTxTime" scoped="" ref="0x2afd8cd304d0"/>
        <function-ref name="macAckWaitDuration" scoped="" ref="0x2afd8cd30660"/>
        <function-ref name="macMaxCSMABackoffs" scoped="" ref="0x2afd8cd307f0"/>
        <function-ref name="phySymbolsPerOctet" scoped="" ref="0x2afd8cd30980"/>
        <function-ref name="macAutoRequest" scoped="" ref="0x2afd8cd30d10"/>
        <function-ref name="macPromiscuousMode" scoped="" ref="0x2afd8cd2f020"/>
        <function-ref name="macTimestampSupported" scoped="" ref="0x2afd8cd2f1b0"/>
        <function-ref name="phyTransmitPower" scoped="" ref="0x2afd8cd2f340"/>
        <function-ref name="phyChannelsSupported" scoped="" ref="0x2afd8cd2f4d0"/>
        <function-ref name="macSecurityEnabled" scoped="" ref="0x2afd8cd2f660"/>
        <function-ref name="macMinLIFSPeriod" scoped="" ref="0x2afd8cd2f7f0"/>
        <function-ref name="macCoordShortAddress" scoped="" ref="0x2afd8cd2f980"/>
        <function-ref name="macCoordExtendedAddress" scoped="" ref="0x2afd8cd2fb10"/>
        <function-ref name="phySHRDuration" scoped="" ref="0x2afd8cd2fca0"/>
        <function-ref name="macDSN" scoped="" ref="0x2afd8cd2fe30"/>
        <function-ref name="macGTSPermit" scoped="" ref="0x2afd8cd2e020"/>
        <function-ref name="macPanCoordinator" scoped="" ref="0x2afd8cd2e1b0"/>
        <function-ref name="macBSN" scoped="" ref="0x2afd8cd2e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrphanNotificationRx" ref="0x2afd8cd34720" loc="55:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OrphanNotificationRx" scoped="" ref="0x2afd8cd34720"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameRx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cd34aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CoordRealignmentTx" ref="0x2afd8cd38e40" loc="54:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CoordRealignmentTx" scoped="" ref="0x2afd8cd38e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cd341e0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cd34370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8cd3a130" loc="47:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8cd3a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8cd3a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControlPool" ref="0x2afd8cd28a50" loc="60:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControlPool" scoped="" ref="0x2afd8cd28a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cd26b90"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cd26020"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cd27670"/>
        <function-ref name="put" scoped="" ref="0x2afd8cd264a0"/>
        <function-ref name="size" scoped="" ref="0x2afd8cd27af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_ORPHAN" ref="0x2afd8cd3a770" loc="48:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_ORPHAN" scoped="" ref="0x2afd8cd3a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_ORPHAN"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8cd3aaf0"/>
        <function-ref name="response" scoped="" ref="0x2afd8cd3ac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MLME_COMM_STATUS" ref="0x2afd8cd39020" loc="49:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MLME_COMM_STATUS" scoped="" ref="0x2afd8cd39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MLME_COMM_STATUS"/>
      </instance>
      <interface-functions>
        <function-ref name="indication" scoped="" ref="0x2afd8cd393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetSetRealignmentFrame" ref="0x2afd8cd35680" loc="50:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetSetRealignmentFrame" scoped="" ref="0x2afd8cd35680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSet"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cd38390"/>
        <function-ref name="set" scoped="" ref="0x2afd8cd38810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8cd34d70" loc="56:../../../../../tos/lib/mac/tkn154/CoordRealignmentP.nc">
      <component-ref qname="CoordRealignmentP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8cd34d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8cd33180"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8cd33310"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8cd334a0"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8cd33630"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8cd337c0"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8cd33950"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8cd33ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2afd8cd9dcd0" loc="42:../../../../../tos/system/PoolC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxFramePoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x2afd8cd9dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cdd5e10"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cdd52a0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cdd6940"/>
        <function-ref name="put" scoped="" ref="0x2afd8cdd5720"/>
        <function-ref name="size" scoped="" ref="0x2afd8cdd6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2afd8e1724f0" loc="56:../../../../../tos/system/PoolP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxFramePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x2afd8e1724f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
            <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e170710"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8e171a10"/>
        <function-ref name="empty" scoped="" ref="0x2afd8e171110"/>
        <function-ref name="put" scoped="" ref="0x2afd8e170020"/>
        <function-ref name="size" scoped="" ref="0x2afd8e171590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e173d70" loc="55:../../../../../tos/system/PoolP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxFramePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e173d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e172180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2afd8cdd10b0" loc="42:../../../../../tos/system/PoolC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxControlPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x2afd8cdd10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cdce1d0"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cdd05f0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cdd1ca0"/>
        <function-ref name="put" scoped="" ref="0x2afd8cdd0a70"/>
        <function-ref name="size" scoped="" ref="0x2afd8cdd0170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2afd8e20c390" loc="56:../../../../../tos/system/PoolP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxControlPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x2afd8e20c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2afd8c2ad5d0"/>
            <typename><typedef-ref name="ieee154_txcontrol_t" ref="0x2afd8c2ad9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e2094c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8e20b920"/>
        <function-ref name="empty" scoped="" ref="0x2afd8e20b020"/>
        <function-ref name="put" scoped="" ref="0x2afd8e20bda0"/>
        <function-ref name="size" scoped="" ref="0x2afd8e20b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e20dbd0" loc="55:../../../../../tos/system/PoolP.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.TxControlPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e20dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e20c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2afd8cdccbf0" loc="43:../../../../../tos/system/QueueC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afd8cdccbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
              <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2afd8cdaeae0"/>
        <function-ref name="enqueue" scoped="" ref="0x2afd8cdad880"/>
        <function-ref name="element" scoped="" ref="0x2afd8cdac020"/>
        <function-ref name="full" scoped="" ref="0x2afd8cdafce0"/>
        <function-ref name="maxSize" scoped="" ref="0x2afd8cdae660"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8cdad1d0"/>
        <function-ref name="empty" scoped="" ref="0x2afd8cdaf860"/>
        <function-ref name="size" scoped="" ref="0x2afd8cdae1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8cdf7cf0" loc="43:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8cdf7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cdf60a0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cdf6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8cdf6480" loc="44:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8cdf6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cdf6800"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cdf6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8cdf7270" loc="42:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8cdf7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8cdf75f0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8cdf7780"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8cdf7910"/>
        <function-ref name="received" scoped="" ref="0x2afd8cdf7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTokenRequested" ref="0x2afd8cdf3440" loc="47:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8cdf3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8cdf37c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8cdf3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioToken" ref="0x2afd8cdf5440" loc="46:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8cdf5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="granted" scoped="" ref="0x2afd8cdf31b0"/>
        <function-ref name="release" scoped="" ref="0x2afd8cdf5950"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8cdf5ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8cdf5c70"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8cdf5e00"/>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8cdf57c0"/>
        <function-ref name="request" scoped="" ref="0x2afd8cdf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8cdf8800" loc="41:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8cdf8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8cdf8b80"/>
        <function-ref name="off" scoped="" ref="0x2afd8cdf8d10"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8cdf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8cdf6be0" loc="45:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.ScanRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8cdf6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cdf5020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cdf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8ce2d270" loc="43:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce2d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce2d5f0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce2d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8ce2d9d0" loc="44:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce2d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce2dd50"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8ce2e6f0" loc="42:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce2e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8ce2ea70"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8ce2ec00"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8ce2ed90"/>
        <function-ref name="received" scoped="" ref="0x2afd8ce2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTokenRequested" ref="0x2afd8ce2ba80" loc="47:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce2ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8ce2be00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8ce2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioToken" ref="0x2afd8ce2ca10" loc="46:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce2ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="granted" scoped="" ref="0x2afd8ce2b7f0"/>
        <function-ref name="release" scoped="" ref="0x2afd8ce2b020"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8ce2b1b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8ce2b340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8ce2b4d0"/>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8ce2cd90"/>
        <function-ref name="request" scoped="" ref="0x2afd8ce2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8ce2fdc0" loc="41:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce2fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8ce2e180"/>
        <function-ref name="off" scoped="" ref="0x2afd8ce2e310"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8ce2e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8ce2c270" loc="45:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.DispatchRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce2c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce2c5f0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce2c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8ce21590" loc="43:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce21590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce21910"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce21aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8ce21cf0" loc="44:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce21cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce1f0a0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce1f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8ce22a30" loc="42:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce22a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8ce22db0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8ce21020"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8ce211b0"/>
        <function-ref name="received" scoped="" ref="0x2afd8ce21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTokenRequested" ref="0x2afd8ce1ec10" loc="47:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce1ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8ce1d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8ce1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioToken" ref="0x2afd8ce1fc20" loc="46:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce1fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="granted" scoped="" ref="0x2afd8ce1e980"/>
        <function-ref name="release" scoped="" ref="0x2afd8ce1e1b0"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8ce1e340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8ce1e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8ce1e660"/>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8ce1e020"/>
        <function-ref name="request" scoped="" ref="0x2afd8ce1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8ce22140" loc="41:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce22140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8ce224c0"/>
        <function-ref name="off" scoped="" ref="0x2afd8ce22650"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8ce227e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8ce1f480" loc="45:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PromiscuousModeRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce1f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce1f800"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce1f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8ce170e0" loc="43:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce170e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce17460"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce175f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8ce17840" loc="44:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce17840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce17bc0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce17d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8ce18610" loc="42:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce18610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8ce18990"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8ce18b20"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8ce18cb0"/>
        <function-ref name="received" scoped="" ref="0x2afd8ce18e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTokenRequested" ref="0x2afd8ce15760" loc="47:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTokenRequested" scoped="" ref="0x2afd8ce15760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8ce15ae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8ce15c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioToken" ref="0x2afd8ce167c0" loc="46:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioToken" scoped="" ref="0x2afd8ce167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TransferableResource"/>
      </instance>
      <interface-functions>
        <function-ref name="granted" scoped="" ref="0x2afd8ce154d0"/>
        <function-ref name="release" scoped="" ref="0x2afd8ce16cd0"/>
        <function-ref name="transferTo" scoped="" ref="0x2afd8ce16e60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8ce15020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8ce151b0"/>
        <function-ref name="transferredFrom" scoped="" ref="0x2afd8ce16b40"/>
        <function-ref name="request" scoped="" ref="0x2afd8ce15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8ce19cc0" loc="41:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce19cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8ce180a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8ce18230"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8ce183c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8ce16020" loc="45:../../../../../tos/lib/mac/tkn154/RadioClientC.nc">
      <component-ref qname="TKN154NonBeaconEnabledP.PibRadioClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce163a0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce16530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afd8ce8d020" loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afd8ce8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8ce8d3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8ce8d530"/>
        <function-ref name="start" scoped="" ref="0x2afd8ce8d6c0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8ce8d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8ce8c5f0" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8ce8c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce8c970"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce8cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReliableWait" ref="0x2afd8ce71940" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReliableWait" scoped="" ref="0x2afd8ce71940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReliableWait"/>
      </instance>
      <interface-functions>
        <function-ref name="waitRxDone" scoped="" ref="0x2afd8ce77660"/>
        <function-ref name="waitRx" scoped="" ref="0x2afd8ce71e50"/>
        <function-ref name="waitBackoffDone" scoped="" ref="0x2afd8ce77020"/>
        <function-ref name="ccaOnBackoffBoundary" scoped="" ref="0x2afd8ce771b0"/>
        <function-ref name="waitTx" scoped="" ref="0x2afd8ce77340"/>
        <function-ref name="waitTxDone" scoped="" ref="0x2afd8ce774d0"/>
        <function-ref name="waitBackoff" scoped="" ref="0x2afd8ce71cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8ce8cde0" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8ce8cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce8b180"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce8b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2afd8ce83300" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8ce83300"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8ce82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8ce8daf0" loc="42:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8ce8daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8ce8de70"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8ce8c030"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8ce8c1c0"/>
        <function-ref name="received" scoped="" ref="0x2afd8ce8c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm2" ref="0x2afd8ce7ee20" loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm2" scoped="" ref="0x2afd8ce7ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8ce7a6e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8ce7b6b0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8ce7a090"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8ce7bb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8ce7aba0"/>
        <function-ref name="start" scoped="" ref="0x2afd8ce7dca0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8ce7b1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8ce77910" loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8ce77910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8ce77c90"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8ce77e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afd8ce76100" loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8ce76100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8ce76480"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8ce76610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timestamp" ref="0x2afd8ce88270" loc="49:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timestamp" scoped="" ref="0x2afd8ce88270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timestamp"/>
      </instance>
      <interface-functions>
        <function-ref name="modifyMACPayload" scoped="" ref="0x2afd8ce885f0"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8ce88780"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8ce88910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2afd8ce88d50" loc="50:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afd8ce88d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8ce879c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8ce8a600" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8ce8a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8ce8a980"/>
        <function-ref name="off" scoped="" ref="0x2afd8ce8ab10"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8ce8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8ce8b600" loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8ce8b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8ce8b980"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8ce8bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyDetection" ref="0x2afd8ce8be00" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8ce8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="EnergyDetection"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2afd8ce8a1c0"/>
        <function-ref name="start" scoped="" ref="0x2afd8ce8a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPromiscuousMode" ref="0x2afd8ce89190" loc="48:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8ce89190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8ce89d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PIBUpdate" ref="0x2afd8ce86650" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8ce86650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8ce84810"/>
        <function-ref name="enable" scoped="" ref="0x2afd8ce84390"/>
        <function-ref name="notify" scoped="" ref="0x2afd8ce84c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm1" ref="0x2afd8ce827d0" loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm1" scoped="" ref="0x2afd8ce827d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8ce7e1b0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8ce7f1b0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8ce7fb30"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8ce7f670"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8ce7e670"/>
        <function-ref name="start" scoped="" ref="0x2afd8ce81780"/>
        <function-ref name="stop" scoped="" ref="0x2afd8ce81c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureTime" ref="0x2afd8ced6a60" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureTime" scoped="" ref="0x2afd8ced6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CaptureTime"/>
      </instance>
      <interface-functions>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8ced6de0"/>
        <function-ref name="getSFDUptime" scoped="" ref="0x2afd8ced9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8ce79080" loc="56:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154C.nc">
      <component-ref qname="CC2420TKN154C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8ce79080"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8ce79400"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8ce79590"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8ce79720"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8ce798b0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8ce79a40"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8ce79bd0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8ce79d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2afd8cf3a2c0" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afd8cf3a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x2afd8cf3a640"/>
        <function-ref name="setChannel" scoped="" ref="0x2afd8cf3a7d0"/>
        <function-ref name="setPromiscuousMode" scoped="" ref="0x2afd8cf3a960"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afd8cf3aaf0"/>
        <function-ref name="getTxPower" scoped="" ref="0x2afd8cf3ac80"/>
        <function-ref name="isPromiscuousModeEnabled" scoped="" ref="0x2afd8cf3ae10"/>
        <function-ref name="setCCAMode" scoped="" ref="0x2afd8cee3020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afd8cee31b0"/>
        <function-ref name="getCCAMode" scoped="" ref="0x2afd8cee3340"/>
        <function-ref name="sync" scoped="" ref="0x2afd8cee34d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afd8cee3660"/>
        <function-ref name="needsSync" scoped="" ref="0x2afd8cee37f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afd8cee3980"/>
        <function-ref name="setPanCoordinator" scoped="" ref="0x2afd8cee3c10"/>
        <function-ref name="getPanCoordinator" scoped="" ref="0x2afd8cee3da0"/>
        <function-ref name="setTxPower" scoped="" ref="0x2afd8cf45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afd8cf044d0" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afd8cf044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8cf04850"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8cf049e0"/>
        <function-ref name="start" scoped="" ref="0x2afd8cf04b70"/>
        <function-ref name="stop" scoped="" ref="0x2afd8cf04d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTx" ref="0x2afd8cf02460" loc="49:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTx" scoped="" ref="0x2afd8cf02460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTx"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cf027e0"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cf02970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReliableWait" ref="0x2afd8cf2b930" loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReliableWait" scoped="" ref="0x2afd8cf2b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReliableWait"/>
      </instance>
      <interface-functions>
        <function-ref name="waitRxDone" scoped="" ref="0x2afd8cf2a660"/>
        <function-ref name="waitRx" scoped="" ref="0x2afd8cf2be40"/>
        <function-ref name="waitBackoffDone" scoped="" ref="0x2afd8cf2a020"/>
        <function-ref name="ccaOnBackoffBoundary" scoped="" ref="0x2afd8cf2a1b0"/>
        <function-ref name="waitTx" scoped="" ref="0x2afd8cf2a340"/>
        <function-ref name="waitTxDone" scoped="" ref="0x2afd8cf2a4d0"/>
        <function-ref name="waitBackoff" scoped="" ref="0x2afd8cf2bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Rx" ref="0x2afd8cf363a0" loc="64:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8cf363a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Rx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8cf36720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCsmaCa" ref="0x2afd8cf02c50" loc="50:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCsmaCa" scoped="" ref="0x2afd8cf02c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cf01020"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cf011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8cf2a910" loc="69:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8cf2a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8cf2ac90"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8cf2ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2afd8cefa960" loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8cefa960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8cef85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioRx" ref="0x2afd8cf03960" loc="48:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioRx" scoped="" ref="0x2afd8cf03960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x2afd8cf03ce0"/>
        <function-ref name="enableRxDone" scoped="" ref="0x2afd8cf03e70"/>
        <function-ref name="isReceiving" scoped="" ref="0x2afd8cf02030"/>
        <function-ref name="received" scoped="" ref="0x2afd8cf021c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxControl" ref="0x2afd8ceef830" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControl" scoped="" ref="0x2afd8ceef830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afd8ceefbb0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8ceefd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2afd8cf39a80" loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8cf39a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8cf39e00"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8cf38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="configSyncTask" ref="0x2afd8cf1d360" loc="120:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="configSyncTask" scoped="" ref="0x2afd8cf1d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cf1d6e0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cf1d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afd8cef7020" loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afd8cef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8cef74a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8cef7630"/>
        <function-ref name="request" scoped="" ref="0x2afd8cef77c0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8cef7950"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8cef7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2afd8cefd460" loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afd8cefd460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8cefc0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timestamp" ref="0x2afd8cefe830" loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timestamp" scoped="" ref="0x2afd8cefe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timestamp"/>
      </instance>
      <interface-functions>
        <function-ref name="modifyMACPayload" scoped="" ref="0x2afd8cefebb0"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8cefed40"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8cefd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="energyDetectionTask" ref="0x2afd8cf20370" loc="117:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="energyDetectionTask" scoped="" ref="0x2afd8cf20370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cf206f0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cf20880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Tx" ref="0x2afd8cf2c530" loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8cf2c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Tx"/>
      </instance>
      <interface-functions>
        <function-ref name="loadTXFIFODone" scoped="" ref="0x2afd8cf2c8b0"/>
        <function-ref name="loadTXFIFO" scoped="" ref="0x2afd8cf2ca40"/>
        <function-ref name="send" scoped="" ref="0x2afd8cf2cbd0"/>
        <function-ref name="lockChipSpi" scoped="" ref="0x2afd8cf2cd60"/>
        <function-ref name="cca" scoped="" ref="0x2afd8cf39020"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8cf391b0"/>
        <function-ref name="unlockChipSpi" scoped="" ref="0x2afd8cf39340"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8cf394d0"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8cf39660"/>
        <function-ref name="modify" scoped="" ref="0x2afd8cf397f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2afd8cf1f2a0" loc="118:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2afd8cf1f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cf1f820"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cf1f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rxControlStopDoneTask" ref="0x2afd8cf1e420" loc="119:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="rxControlStopDoneTask" scoped="" ref="0x2afd8cf1e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8cf1e7a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8cf1e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioOff" ref="0x2afd8cf03020" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioOff" scoped="" ref="0x2afd8cf03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioOff"/>
      </instance>
      <interface-functions>
        <function-ref name="offDone" scoped="" ref="0x2afd8cf033a0"/>
        <function-ref name="off" scoped="" ref="0x2afd8cf03530"/>
        <function-ref name="isOff" scoped="" ref="0x2afd8cf036c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnslottedCsmaCa" ref="0x2afd8cf014a0" loc="51:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnslottedCsmaCa" scoped="" ref="0x2afd8cf014a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x2afd8cf01820"/>
        <function-ref name="transmitDone" scoped="" ref="0x2afd8cf019b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2afd8cee4960" loc="62:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afd8cee4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afd8cee4ce0"/>
        <function-ref name="rfOff" scoped="" ref="0x2afd8cee4e70"/>
        <function-ref name="flushRxFifo" scoped="" ref="0x2afd8ceee030"/>
        <function-ref name="rxOn" scoped="" ref="0x2afd8ceee1c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2afd8ceee350"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afd8ceee4e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afd8ceee670"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afd8ceee800"/>
        <function-ref name="rssi" scoped="" ref="0x2afd8ceee990"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afd8ceeeb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8cf382a0" loc="67:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8cf382a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8cf38620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8cf387b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8cf38940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8cf38ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8cf38c60"/>
        <function-ref name="get" scoped="" ref="0x2afd8cf38df0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8cf2b020"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8cf2b660"/>
        <function-ref name="set" scoped="" ref="0x2afd8cf2b1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8cf2b340"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8cf2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyDetection" ref="0x2afd8cf01ca0" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyDetection" scoped="" ref="0x2afd8cf01ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EnergyDetection"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2afd8ceff0a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8ceff230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPromiscuousMode" ref="0x2afd8ceff700" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPromiscuousMode" scoped="" ref="0x2afd8ceff700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x2afd8cefe390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PIBUpdate" ref="0x2afd8cefcd30" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PIBUpdate" scoped="" ref="0x2afd8cefcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2afd8cefbdc0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8cefb940"/>
        <function-ref name="notify" scoped="" ref="0x2afd8cefa2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxControl" ref="0x2afd8ceec4b0" loc="61:../../../../../tos/chips/cc2420_tkn154/CC2420TKN154P.nc">
      <component-ref qname="CC2420TKN154P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxControl" scoped="" ref="0x2afd8ceec4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stopDone" scoped="" ref="0x2afd8ceec830"/>
        <function-ref name="start" scoped="" ref="0x2afd8ceec9c0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8ceecb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2afd8d01e610" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d01e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x2afd8d01e990"/>
        <function-ref name="setChannel" scoped="" ref="0x2afd8d01eb20"/>
        <function-ref name="setPromiscuousMode" scoped="" ref="0x2afd8d01ecb0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afd8d01ee40"/>
        <function-ref name="getTxPower" scoped="" ref="0x2afd8d01d020"/>
        <function-ref name="isPromiscuousModeEnabled" scoped="" ref="0x2afd8d01d1b0"/>
        <function-ref name="setCCAMode" scoped="" ref="0x2afd8d01d340"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afd8d01d4d0"/>
        <function-ref name="getCCAMode" scoped="" ref="0x2afd8d01d660"/>
        <function-ref name="sync" scoped="" ref="0x2afd8d01d7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afd8d01d980"/>
        <function-ref name="needsSync" scoped="" ref="0x2afd8d01db10"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afd8d01dca0"/>
        <function-ref name="setPanCoordinator" scoped="" ref="0x2afd8d01c020"/>
        <function-ref name="getPanCoordinator" scoped="" ref="0x2afd8d01c1b0"/>
        <function-ref name="setTxPower" scoped="" ref="0x2afd8d01c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TxControl" ref="0x2afd8d01aba0" loc="56:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxControl" scoped="" ref="0x2afd8d01aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afd8d019020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d0191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckAlarm" ref="0x2afd8d012380" loc="64:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AckAlarm" scoped="" ref="0x2afd8d012380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d078be0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d011bc0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d078590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d0780d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d0760d0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d0111f0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d011700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Tx" ref="0x2afd8d019460" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8d019460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Tx"/>
      </instance>
      <interface-functions>
        <function-ref name="loadTXFIFODone" scoped="" ref="0x2afd8d0197e0"/>
        <function-ref name="loadTXFIFO" scoped="" ref="0x2afd8d019970"/>
        <function-ref name="send" scoped="" ref="0x2afd8d019b00"/>
        <function-ref name="lockChipSpi" scoped="" ref="0x2afd8d019c90"/>
        <function-ref name="cca" scoped="" ref="0x2afd8d019e20"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d018020"/>
        <function-ref name="unlockChipSpi" scoped="" ref="0x2afd8d0181b0"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8d018340"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8d0184d0"/>
        <function-ref name="modify" scoped="" ref="0x2afd8d018660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2afd8d01c600" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afd8d01c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afd8d01c980"/>
        <function-ref name="rfOff" scoped="" ref="0x2afd8d01cb10"/>
        <function-ref name="flushRxFifo" scoped="" ref="0x2afd8d01cca0"/>
        <function-ref name="rxOn" scoped="" ref="0x2afd8d01ce30"/>
        <function-ref name="startVReg" scoped="" ref="0x2afd8d01a020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afd8d01a1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afd8d01a340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afd8d01a4d0"/>
        <function-ref name="rssi" scoped="" ref="0x2afd8d01a660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afd8d01a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d021900" loc="51:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d021900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d021c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d021e10"/>
        <function-ref name="request" scoped="" ref="0x2afd8d01e020"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d01e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d01e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureTime" ref="0x2afd8d076530" loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d076530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CaptureTime"/>
      </instance>
      <interface-functions>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8d0768b0"/>
        <function-ref name="getSFDUptime" scoped="" ref="0x2afd8d076a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupAlarm" ref="0x2afd8d018d30" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupAlarm" scoped="" ref="0x2afd8d018d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d015670"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d016550"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d015020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d016a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d015b30"/>
        <function-ref name="start" scoped="" ref="0x2afd8d017b60"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d016090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8d013020" loc="61:../../../../../tos/chips/cc2420_tkn154/CC2420ControlTransmitC.nc">
      <component-ref qname="CC2420ControlTransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8d0133a0"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8d013530"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8d0136c0"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8d013850"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8d0139e0"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8d013b70"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8d013d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2afd8d072ad0" loc="48:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d072ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x2afd8d072e50"/>
        <function-ref name="setChannel" scoped="" ref="0x2afd8d071020"/>
        <function-ref name="setPromiscuousMode" scoped="" ref="0x2afd8d0711b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afd8d071340"/>
        <function-ref name="getTxPower" scoped="" ref="0x2afd8d0714d0"/>
        <function-ref name="isPromiscuousModeEnabled" scoped="" ref="0x2afd8d071660"/>
        <function-ref name="setCCAMode" scoped="" ref="0x2afd8d0717f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afd8d071980"/>
        <function-ref name="getCCAMode" scoped="" ref="0x2afd8d071b10"/>
        <function-ref name="sync" scoped="" ref="0x2afd8d071ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afd8d071e30"/>
        <function-ref name="needsSync" scoped="" ref="0x2afd8d070020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afd8d0701b0"/>
        <function-ref name="setPanCoordinator" scoped="" ref="0x2afd8d070440"/>
        <function-ref name="getPanCoordinator" scoped="" ref="0x2afd8d0705d0"/>
        <function-ref name="setTxPower" scoped="" ref="0x2afd8d070760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2afd8d065190" loc="56:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afd8d065190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d065510"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0656a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d065830"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0659c0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d065b50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d065ce0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d065e70"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d064030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2afd8d056020" loc="64:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d056020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d0563a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d056530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2afd8d059c90" loc="62:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d059c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d0570a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d057230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2afd8d069830" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2afd8d069830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d069bb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d069d40"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d068020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0681b0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d068340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0684d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d068660"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0687f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2afd8d0568c0" loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afd8d0568c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d056c40"/>
        <function-ref name="write" scoped="" ref="0x2afd8d056dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2afd8d04f020" loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d04f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d04f3a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d04f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2afd8d05e8d0" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d05e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d05ed50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d059020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACKPEND" ref="0x2afd8d051e70" loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d051e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d050420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afd8d06a580" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afd8d06a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d06a900"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d06aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d06ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d06adb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d069020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0691b0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d069340"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0694d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2afd8d051020" loc="70:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d0513a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2afd8d068b50" loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2afd8d068b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d067020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0671b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d067340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0674d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d067660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0677f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d067980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d067b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d075720" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d075720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d075aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2afd8d0575f0" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d0575f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d057970"/>
        <function-ref name="write" scoped="" ref="0x2afd8d057b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2afd8d051740" loc="71:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d051740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d051ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afd8d04d3c0" loc="76:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afd8d04d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d04d740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d04d8d0"/>
        <function-ref name="request" scoped="" ref="0x2afd8d04da60"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d04dbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d04dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2afd8d0529c0" loc="67:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afd8d0529c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d052d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2afd8d070a60" loc="49:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2afd8d070a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2afd8d070de0"/>
        <function-ref name="rfOff" scoped="" ref="0x2afd8d06f020"/>
        <function-ref name="flushRxFifo" scoped="" ref="0x2afd8d06f1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2afd8d06f340"/>
        <function-ref name="startVReg" scoped="" ref="0x2afd8d06f4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2afd8d06f660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2afd8d06f7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2afd8d06f980"/>
        <function-ref name="rssi" scoped="" ref="0x2afd8d06fb10"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2afd8d06fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2afd8d0593c0" loc="61:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d0593c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d059740"/>
        <function-ref name="write" scoped="" ref="0x2afd8d0598d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2afd8d05e020" loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d05e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d05e3a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d05e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2afd8d053100" loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afd8d053100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d053480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d075d90" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d075d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d072180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d072310"/>
        <function-ref name="request" scoped="" ref="0x2afd8d0724a0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d072630"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d0727c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2afd8d05b870" loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d05b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d05bbf0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d05bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2afd8d0615b0" loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2afd8d0615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d061930"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d061ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d061c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d061de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_REGISTER" ref="0x2afd8d055230" loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d055230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d0555b0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d055740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2afd8d0507d0" loc="73:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d0507d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d050b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2afd8d0a5be0" loc="75:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2afd8d0a5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2afd8d04e020"/>
        <function-ref name="source" scoped="" ref="0x2afd8d04e1b0"/>
        <function-ref name="address" scoped="" ref="0x2afd8d04e340"/>
        <function-ref name="destination" scoped="" ref="0x2afd8d04e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2afd8d04e660"/>
        <function-ref name="setDestination" scoped="" ref="0x2afd8d04e7f0"/>
        <function-ref name="type" scoped="" ref="0x2afd8d04e980"/>
        <function-ref name="setType" scoped="" ref="0x2afd8d04eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2afd8d04eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2afd8d04ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x2afd8d04d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupAlarm" ref="0x2afd8d06e350" loc="51:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupAlarm" scoped="" ref="0x2afd8d06e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d06cba0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d06db80"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d06c550"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d06c090"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d06a090"/>
        <function-ref name="start" scoped="" ref="0x2afd8d06d1b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d06d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8d0a70c0" loc="77:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d0a70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8d0a7440"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8d0a75d0"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8d0a7760"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8d0a78f0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8d0a7a80"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8d0a7c10"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8d0a7da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2afd8d053810" loc="69:../../../../../tos/chips/cc2420_tkn154/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d053810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d053b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2afd8d0fa380" loc="44:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afd8d0fa380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0fa700"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0fa890"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0faa20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0fabb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0fad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f9020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f91b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2afd8d0f96b0" loc="45:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2afd8d0f96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f9a30"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f8020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f8340"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f84d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2afd8d0f89c0" loc="46:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2afd8d0f89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f8d40"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f7340"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f7660"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f77f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2afd8d0fb020" loc="43:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afd8d0fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0fb530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0fb850"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0fbb70"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0fbd00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2afd8d0f5020" loc="48:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2afd8d0f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f5530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f5850"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f5b70"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f5d00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2afd8d0ffd10" loc="42:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afd8d0ffd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0fc270"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0fc400"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0fc590"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0fc720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0fc8b0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0fca40"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0fcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2afd8d0f7cd0" loc="47:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2afd8d0f7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f6230"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f6550"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f6870"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f6a00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d0f2610" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0f2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f2990"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f2b20"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d0f2cb0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d0f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f0340"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d0f0660"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d0f07f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d0f0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d0f0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d0ef020"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d0f3440" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0f3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0f37c0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0f3950"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0f3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0f3c70"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0f3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0f2020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0f21b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d0ec2f0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0ec670"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0ec800"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d0ec990"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0ecb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0eccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d0ece40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0eb020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0eb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d0eb340"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d0eb4d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0eb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d0eb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d0eb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d0ebc10"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0ebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d0ed020" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0ed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0ed530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0ed6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0ed850"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0ed9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0edb70"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0edd00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d0e8de0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0e8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0e7180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0e7310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d0e74a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0e7630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0e77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d0e7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0e7ae0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0e7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d0e7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d0e6020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0e61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d0e6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d0e64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d0e6760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d0e9b70" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0e9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0e81b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0e8340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0e84d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0e8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0e87f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0e8980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0e8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d0e3930" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d0e3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0e3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0e3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d14d020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d14d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d14d340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d14d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d14d660"/>
        <function-ref name="get" scoped="" ref="0x2afd8d14d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d14d980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d14db10"/>
        <function-ref name="set" scoped="" ref="0x2afd8d14dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d14de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d14c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d14c2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d14c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d0e4710" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d0e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d0e4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d0e4c20"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d0e4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d0e3020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d0e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d0e3340"/>
        <function-ref name="set" scoped="" ref="0x2afd8d0e34d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d0e3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d149480" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d149480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d149800"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d149990"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d149b20"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d149cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d149e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d148020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d1481b0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d148340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d1484d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d148660"/>
        <function-ref name="set" scoped="" ref="0x2afd8d1487f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d148980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d148b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d148da0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d147020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d14a1d0" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d14a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d14a550"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d14a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d14a870"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d14aa00"/>
        <function-ref name="get" scoped="" ref="0x2afd8d14ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d14ad20"/>
        <function-ref name="set" scoped="" ref="0x2afd8d149020"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d1491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d143020" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d1433a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d143530"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d1436c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d143850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d1439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d143b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d143d00"/>
        <function-ref name="get" scoped="" ref="0x2afd8d142020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d1421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d142340"/>
        <function-ref name="set" scoped="" ref="0x2afd8d1424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d142660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d1427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d142a80"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d142c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d146d60" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d146d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d144180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d144310"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d1444a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d144630"/>
        <function-ref name="get" scoped="" ref="0x2afd8d1447c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d144950"/>
        <function-ref name="set" scoped="" ref="0x2afd8d144ae0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d144c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8d13fde0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8d13fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d13e180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d13e310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d13e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d13e630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d13e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d13e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d13eae0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d13ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d13ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d13d020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d13d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d13d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d13d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d13d760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d13d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8d140b70" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d140b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d13f020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d13f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d13f340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d13f4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d13f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d13f7f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d13f980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d13fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2afd8d1265a0" loc="42:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2afd8d1265a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afd8d126920"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d126ab0"/>
        <function-ref name="captured" scoped="" ref="0x2afd8d126c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afd8d126dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2afd8d12a210" loc="43:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2afd8d12a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d12a590"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d12a720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d12a8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d12aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2afd8d12ae30" loc="44:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afd8d12ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d1291e0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d129370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d129500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d129690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2afd8d17eda0" loc="42:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2afd8d17eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8d17d180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2afd8d17d310"/>
        <function-ref name="captured" scoped="" ref="0x2afd8d17d4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8d17d630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8d17d7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2afd8d17d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2afd8d17f020" loc="40:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2afd8d17f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afd8d17f3a0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d17f530"/>
        <function-ref name="captured" scoped="" ref="0x2afd8d17f6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afd8d17f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afd8d17fae0" loc="41:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8d17fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8d17fe60"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8d17e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8d17e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8d17e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8d17e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8d17e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8d17e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8d17e980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8d17eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2afd8d17dc20" loc="43:../../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8d17dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d17c020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d17c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d17c340"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d17c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d17c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d17c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d17c980"/>
        <function-ref name="get" scoped="" ref="0x2afd8d17cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d17cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d17ce30"/>
        <function-ref name="set" scoped="" ref="0x2afd8d17b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d17b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d17b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d17b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d17b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afd8d16ec40" loc="46:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afd8d16ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16d020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16d340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16d660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afd8d163bc0" loc="58:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afd8d163bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d162020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1621b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d162340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1624d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d162660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afd8d16bbc0" loc="49:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afd8d16bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16a020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16a340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16a660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afd8d168bc0" loc="53:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afd8d168bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d167020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1671b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d167340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1674d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d167660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afd8d174d20" loc="44:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afd8d174d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16f0e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16f270"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16f400"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16f590"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16f720"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afd8d165bc0" loc="56:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afd8d165bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d1640a0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d164230"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1643c0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d164550"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1646e0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d164870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afd8d16dbc0" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afd8d16dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16c020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16c340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16c660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afd8d162bc0" loc="59:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afd8d162bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d161020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1611b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d161340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1614d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d161660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afd8d170e70" loc="42:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afd8d170e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d175220"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1753b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d175540"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1756d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d175860"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1759f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afd8d167bc0" loc="54:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afd8d167bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d166020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1661b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d166340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1664d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d166660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afd8d16fc80" loc="45:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afd8d16fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16e0a0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16e230"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16e3c0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16e550"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afd8d164c40" loc="57:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afd8d164c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d163020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1631b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d163340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1634d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d163660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afd8d16cbc0" loc="48:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afd8d16cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d16b020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d16b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d16b340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d16b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d16b660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d16b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afd8d16abc0" loc="52:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afd8d16abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d168020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1681b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d168340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1684d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d168660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afd8d175dc0" loc="43:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afd8d175dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d174180"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d174310"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1744a0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d174630"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1747c0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d174950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afd8d166bc0" loc="55:../../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afd8d166bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d165020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1651b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d165340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1654d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d165660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2afd8d15aa30" loc="43:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2afd8d15aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d15adb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d159020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1591b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d159340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1594d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d159660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2afd8d150bc0" loc="55:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2afd8d150bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d1bb020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1bb1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1bb340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1bb4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1bb660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2afd8d157a30" loc="46:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2afd8d157a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d157db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d156020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1561b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d156340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1564d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d156660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2afd8d155a30" loc="50:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2afd8d155a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d155db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d154020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1541b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d154340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1544d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d154660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2afd8d15ca30" loc="41:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2afd8d15ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d15cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d15b020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d15b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d15b340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d15b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d15b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2afd8d152a30" loc="53:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2afd8d152a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d151020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1511b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d151340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1514d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d151660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2afd8d159a30" loc="44:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2afd8d159a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d159db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d158020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1581b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d158340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1584d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d158660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2afd8d1bbbc0" loc="56:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2afd8d1bbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d1ba020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1ba1b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1ba340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1ba4d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1ba660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2afd8d1609c0" loc="39:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2afd8d1609c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d160d40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d15d020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d15d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d15d340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d15d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d15d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2afd8d154a30" loc="51:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2afd8d154a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d154db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d153020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1531b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d153340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1534d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d153660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2afd8d15ba30" loc="42:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2afd8d15ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d15bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d15a020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d15a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d15a340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d15a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d15a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2afd8d151bc0" loc="54:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2afd8d151bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d150020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d1501b0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d150340"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d1504d0"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d150660"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d1507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2afd8d158a30" loc="45:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2afd8d158a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d158db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d157020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1571b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d157340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1574d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d157660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2afd8d156a30" loc="49:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2afd8d156a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d156db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d155020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1551b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d155340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1554d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d155660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2afd8d15da30" loc="40:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2afd8d15da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d15ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d15c020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d15c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d15c340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d15c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d15c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2afd8d153a30" loc="52:../../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2afd8d153a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d153db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d152020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d1521b0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d152340"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d1524d0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d152660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2afd8d235610" loc="46:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8d235610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d235990"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d235b20"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d235cb0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d235e40"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d298020"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d2981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2afd8d236a30" loc="45:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2afd8d236a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d236db0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d235020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d2351b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d235340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2afd8d296610" loc="46:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8d296610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8d296990"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d296b20"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d296cb0"/>
        <function-ref name="edge" scoped="" ref="0x2afd8d296e40"/>
        <function-ref name="enable" scoped="" ref="0x2afd8d295020"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8d2951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2afd8d297a70" loc="45:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2afd8d297a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d297df0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d296020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d2961b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d296340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afd8d6dbe50" loc="69:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d6dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6da410"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6da5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afd8d6e4160" loc="47:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afd8d6e4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afd8d6dee50" loc="63:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d6dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6dd210"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afd8d6d8880" loc="72:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afd8d6d8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d8c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afd8d6d00a0" loc="86:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afd8d6d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d0420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afd8d6d70a0" loc="73:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afd8d6d70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d7420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afd8d6c4500" loc="108:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afd8d6c4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c4880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afd8d6c7500" loc="104:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afd8d6c7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c7880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afd8d6e3490" loc="50:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d6e3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afd8d6cd880" loc="93:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afd8d6cd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cdc00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6cdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afd8d6c8500" loc="102:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d6c8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c8880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afd8d6dde50" loc="65:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afd8d6dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6dc210"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afd8d6dce50" loc="67:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d6dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6db210"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afd8d6d2880" loc="83:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afd8d6d2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d2c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afd8d6d40a0" loc="79:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afd8d6d40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d4420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afd8d6d7880" loc="74:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d6d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d7c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afd8d6e7a90" loc="42:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d6e7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afd8d6e7e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afd8d6e5020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afd8d6e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afd8d6e2e00" loc="54:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d6e2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afd8d6e1490" loc="55:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afd8d6e1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afd8d6cbc80" loc="95:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afd8d6cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6ca0a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6ca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afd8d6e1be0" loc="56:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d6e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afd8d6c8ce0" loc="103:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afd8d6c8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c70a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afd8d6e2160" loc="52:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d6e2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afd8d6cd0a0" loc="92:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afd8d6cd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cd420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6cd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afd8d6dc670" loc="66:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afd8d6dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6dc9f0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afd8d6dd670" loc="64:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d6dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6dd9f0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afd8d6e5ad0" loc="46:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d6e5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afd8d6ce0a0" loc="90:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afd8d6ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6ce420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6ce5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afd8d6d0880" loc="87:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afd8d6d0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d0c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afd8d6ce880" loc="91:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afd8d6ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cec00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6ced90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afd8d6c6ce0" loc="107:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afd8d6c6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c40a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afd8d6c7ce0" loc="105:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afd8d6c7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c60a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afd8d6d4880" loc="80:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afd8d6d4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d4c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afd8d6cf0a0" loc="88:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afd8d6cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cf420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6cf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afd8d6c9ce0" loc="101:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afd8d6c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c80a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afd8d6d6880" loc="76:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afd8d6d6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d6c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afd8d6c4ce0" loc="111:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d6c4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d6c30a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d6c3230"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c33c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d6c3550"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d6c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afd8d6e5480" loc="45:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afd8d6e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afd8d6de670" loc="62:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afd8d6de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6de9f0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afd8d6db670" loc="68:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afd8d6db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6db9f0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afd8d6d10a0" loc="84:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afd8d6d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d1420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afd8d6d60a0" loc="75:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d6d60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d6420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afd8d6d1880" loc="85:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afd8d6d1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d1c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afd8d6da870" loc="70:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d6da870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6dabf0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6dad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afd8d6e47b0" loc="48:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afd8d6e47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afd8d6d80a0" loc="71:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afd8d6d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d8420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d6e8e20" loc="41:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d6e8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d6e71c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d6e7350"/>
        <function-ref name="request" scoped="" ref="0x2afd8d6e74e0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d6e7670"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d6e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afd8d6df2f0" loc="57:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afd8d6df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6df670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afd8d6de020" loc="59:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afd8d6de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afd8d6c9500" loc="100:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afd8d6c9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c9880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afd8d6cace0" loc="99:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d6cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c90a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afd8d6e27b0" loc="53:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d6e27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afd8d6ca500" loc="96:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d6ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6ca880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6caa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afd8d6c6500" loc="106:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afd8d6c6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6c6880"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afd8d6d20a0" loc="81:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afd8d6d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d2420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afd8d6cf880" loc="89:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afd8d6cf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cfc00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6cfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afd8d6e4e00" loc="49:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afd8d6e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afd8d6e3ae0" loc="51:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d6e3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6e3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afd8d6d50a0" loc="77:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afd8d6d50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d5420"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afd8d6df940" loc="58:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afd8d6df940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d6dfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afd8d6d5880" loc="78:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afd8d6d5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6d5c00"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6d5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afd8d6cb0a0" loc="94:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afd8d6cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d6cb820"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6cb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afd8d6c39b0" loc="112:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlTransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d6c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d6c3d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d6c2020"/>
        <function-ref name="write" scoped="" ref="0x2afd8d6c21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d6c2340"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d6c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2afd8d2c6630" loc="41:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2afd8d2c6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d2c69b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d2c6b40"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2c6cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d2c6e60"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d2c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afd8d2c7680" loc="40:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afd8d2c7a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afd8d2c7b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afd8d2c7d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2afd8d2c58c0" loc="42:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2afd8d2c58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d2c5c40"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2c5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2afd8d2c36f0" loc="43:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2afd8d2c36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d2c3a70"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2c3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d2ca960" loc="39:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d2ca960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d2cace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d2cae70"/>
        <function-ref name="request" scoped="" ref="0x2afd8d2c7030"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d2c71c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d2c7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2afd8d2c2510" loc="44:../../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2afd8d2c2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d2c2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2afd8d2ac680" loc="55:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d2ac680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afd8d2aca00"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d2acb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2afd8d2bdbb0" loc="46:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2afd8d2bdbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d2bc020"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d2bc1b0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2bc340"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d2bc4d0"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d2bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afd8d2c1930" loc="44:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d2c1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afd8d2c1cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afd8d2c1e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afd8d2be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2afd8d2b6080" loc="54:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afd8d2b6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8d2b6400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2afd8d2a8b90" loc="56:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2afd8d2a8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afd8d2b4020"/>
        <function-ref name="toIdle" scoped="" ref="0x2afd8d2b41b0"/>
        <function-ref name="isState" scoped="" ref="0x2afd8d2b4340"/>
        <function-ref name="isIdle" scoped="" ref="0x2afd8d2b44d0"/>
        <function-ref name="requestState" scoped="" ref="0x2afd8d2b4660"/>
        <function-ref name="forceState" scoped="" ref="0x2afd8d2b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afd8d2b8400" loc="53:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afd8d2b8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d2b8780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d2b8910"/>
        <function-ref name="request" scoped="" ref="0x2afd8d2b8aa0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d2b8c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d2b8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2afd8d2ba020" loc="47:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2afd8d2ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d2ba3a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2ba530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2afd8d2badb0" loc="48:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2afd8d2badb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d2b9180"/>
        <function-ref name="write" scoped="" ref="0x2afd8d2b9310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8d2b4a70" loc="57:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8d2b4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8d2b4df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8d2ae020"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8d2ae1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8d2ae340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8d2ae4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d2ae660"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8d2ae7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8d2aee30"/>
        <function-ref name="set" scoped="" ref="0x2afd8d2ae980"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8d2aeb10"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8d2aeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d2be810" loc="45:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d2be810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d2beb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d2bed20"/>
        <function-ref name="request" scoped="" ref="0x2afd8d2bd020"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d2bd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d2bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2afd8d2a4bd0" loc="88:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2afd8d2a4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d2a3020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d2a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2afd8d2b9ba0" loc="49:../../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2afd8d2b9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d2b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afd8d32e770" loc="67:../../../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afd8d32e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afd8d32eaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x2afd8d32ec80"/>
        <function-ref name="isState" scoped="" ref="0x2afd8d32ee10"/>
        <function-ref name="isIdle" scoped="" ref="0x2afd8d32a020"/>
        <function-ref name="requestState" scoped="" ref="0x2afd8d32a1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2afd8d32a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afd8d3281d0" loc="66:../../../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afd8d3281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afd8d328550"/>
        <function-ref name="toIdle" scoped="" ref="0x2afd8d3286e0"/>
        <function-ref name="isState" scoped="" ref="0x2afd8d328870"/>
        <function-ref name="isIdle" scoped="" ref="0x2afd8d328a00"/>
        <function-ref name="requestState" scoped="" ref="0x2afd8d328b90"/>
        <function-ref name="forceState" scoped="" ref="0x2afd8d328d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d324020" loc="66:../../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d324020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d3243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2afd8d324b70" loc="67:../../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2afd8d324b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2afd8d322020"/>
        <function-ref name="toIdle" scoped="" ref="0x2afd8d3221b0"/>
        <function-ref name="isState" scoped="" ref="0x2afd8d322340"/>
        <function-ref name="isIdle" scoped="" ref="0x2afd8d3224d0"/>
        <function-ref name="requestState" scoped="" ref="0x2afd8d322660"/>
        <function-ref name="forceState" scoped="" ref="0x2afd8d3227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afd8d68a020" loc="44:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d68a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afd8d68a3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d68a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afd8d37e8f0" loc="43:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afd8d37e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8d37ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d37fc40" loc="42:../../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d37fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d37e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d37e1b0"/>
        <function-ref name="request" scoped="" ref="0x2afd8d37e340"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d37e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d37e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8e2aa970" loc="82:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e2aa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8e2aacf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e2aae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afd8e2a72b0" loc="87:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afd8e2a72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afd8e2a7630"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8e2a77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afd8e2a7a50" loc="89:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8e2a7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afd8e2a7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afd8e2a9130" loc="83:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afd8e2a9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8e2a94b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8e2accc0" loc="81:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8e2accc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e2aa0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e2aa230"/>
        <function-ref name="request" scoped="" ref="0x2afd8e2aa3c0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e2aa550"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e2aa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afd8e2a9740" loc="85:../../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8e2a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afd8e2a9ac0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afd8e2a9c50"/>
        <function-ref name="splitRead" scoped="" ref="0x2afd8e2a9de0"/>
        <function-ref name="write" scoped="" ref="0x2afd8e2a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afd8d391430" loc="74:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d391430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8d3917b0"/>
        <function-ref name="configure" scoped="" ref="0x2afd8d391940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afd8d38f3f0" loc="77:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d38f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afd8d38f770"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d38f900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afd8d38c510" loc="80:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8d38c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afd8d38c890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afd8d391c20" loc="75:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afd8d391c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8d390020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afd8d38e280" loc="79:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afd8d38e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d38e600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d38e790"/>
        <function-ref name="request" scoped="" ref="0x2afd8d38e920"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d38eab0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d38ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d3921d0" loc="73:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d3921d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d392550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d3926e0"/>
        <function-ref name="request" scoped="" ref="0x2afd8d392870"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d392a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d392b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afd8d390320" loc="76:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8d390320"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afd8d3906a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afd8d390830"/>
        <function-ref name="splitRead" scoped="" ref="0x2afd8d3909c0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d390b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afd8d3886a0" loc="81:../../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afd8d3886a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d388a20"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d388bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2afd8d404c40" loc="76:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d404c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8d403020"/>
        <function-ref name="configure" scoped="" ref="0x2afd8d4031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2afd8d402700" loc="79:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2afd8d402700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2afd8d402aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d402c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2afd8d401e00" loc="82:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2afd8d401e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2afd8d4001c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2afd8d403440" loc="77:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2afd8d403440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2afd8d4037c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2afd8d400490" loc="83:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afd8d400490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afd8d400810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afd8d4009a0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afd8d400b30"/>
        <function-ref name="enableUart" scoped="" ref="0x2afd8d400cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afd8d400e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afd8d3ff020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afd8d3ff1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afd8d3ff340"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afd8d3ff4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afd8d3ff660"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afd8d3ff7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afd8d3ff980"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afd8d3ffb10"/>
        <function-ref name="getUbr" scoped="" ref="0x2afd8d3ffda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afd8d3fe020"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afd8d3fe1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afd8d3fe340"/>
        <function-ref name="isUart" scoped="" ref="0x2afd8d3fe4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afd8d3fe660"/>
        <function-ref name="isSpi" scoped="" ref="0x2afd8d3fe7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afd8d3fe980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afd8d3feb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afd8d3feca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afd8d3fee30"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8d3fd020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afd8d3fd3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afd8d3fd540"/>
        <function-ref name="setUbr" scoped="" ref="0x2afd8d3fd6d0"/>
        <function-ref name="tx" scoped="" ref="0x2afd8d3fd860"/>
        <function-ref name="getUctl" scoped="" ref="0x2afd8d3fd9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x2afd8d3fdb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afd8d3fdd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afd8d3fc020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afd8d3fc1b0"/>
        <function-ref name="rx" scoped="" ref="0x2afd8d3fc340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afd8d3fc4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afd8d3fc660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afd8d3fc7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afd8d3fc980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afd8d3fcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8d3fb5a0" loc="85:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8d3fb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8d3fb920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8d3fbab0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8d3fbc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8d3fbdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8d3f9020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d3f91b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8d3f9340"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8d3f9980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d3f9660"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8d3f94d0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8d3f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2afd8d401060" loc="81:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2afd8d401060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d401400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d401590"/>
        <function-ref name="request" scoped="" ref="0x2afd8d401720"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d4018b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d401a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d405e80" loc="75:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d405e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d404240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d4043d0"/>
        <function-ref name="request" scoped="" ref="0x2afd8d404560"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d4046f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d404880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2afd8d403a50" loc="78:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2afd8d403a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2afd8d403dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2afd8d402020"/>
        <function-ref name="splitRead" scoped="" ref="0x2afd8d4021b0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d402340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2afd8d3fcde0" loc="84:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2afd8d3fcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d3fb180"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d3fb310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2afd8d3f9c50" loc="102:../../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2afd8d3f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d3f8020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d3f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2afd8d4618a0" loc="78:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afd8d4618a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d461c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afd8d4643b0" loc="77:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8d4643b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d464730"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d4648c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afd8d46b860" loc="76:../../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8d46b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afd8d46bbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afd8d46bd70"/>
        <function-ref name="setUctl" scoped="" ref="0x2afd8d468020"/>
        <function-ref name="enableUart" scoped="" ref="0x2afd8d4681b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afd8d468340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afd8d4684d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afd8d468660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afd8d4687f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afd8d468980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afd8d468b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afd8d468ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afd8d468e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afd8d467020"/>
        <function-ref name="getUbr" scoped="" ref="0x2afd8d4672b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afd8d467440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afd8d4675d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afd8d467760"/>
        <function-ref name="isUart" scoped="" ref="0x2afd8d4678f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afd8d467a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2afd8d467c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afd8d467da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afd8d466020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afd8d4661b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afd8d466340"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8d4664d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afd8d466860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afd8d4669f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afd8d466b80"/>
        <function-ref name="tx" scoped="" ref="0x2afd8d466d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2afd8d465020"/>
        <function-ref name="disableUart" scoped="" ref="0x2afd8d4651b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afd8d465340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afd8d4654d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afd8d465660"/>
        <function-ref name="rx" scoped="" ref="0x2afd8d4657f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afd8d465980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afd8d465b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afd8d465ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afd8d465e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afd8d464020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2afd8d4a0670" loc="82:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2afd8d4a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d4a09f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d4a0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d4a0d10"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d49f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d49f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d49f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d49f4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d49f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d49f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d49f980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d49fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d49fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d49fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d49e120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d49e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afd8d45bdc0" loc="76:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afd8d45bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d45a180"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d45a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2afd8d49e670" loc="83:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2afd8d49e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d49e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d49eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d49ed10"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d49d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d49d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d49d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d49d4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d49d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d49d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d49d980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d49db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d49dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d49de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d49c120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d49c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2afd8d49c670" loc="84:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2afd8d49c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d49c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d49cb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d49cd10"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d49a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d49a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d49a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d49a4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d49a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d49a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d49a980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d49ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d49aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d49ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d499120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d4992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2afd8d45f020" loc="75:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2afd8d45f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afd8d45f3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afd8d45f530"/>
        <function-ref name="setUctl" scoped="" ref="0x2afd8d45f6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afd8d45f850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afd8d45f9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afd8d45fb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afd8d45fd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afd8d45e020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afd8d45e1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afd8d45e340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afd8d45e4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afd8d45e660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afd8d45e7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2afd8d45ea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afd8d45ec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afd8d45eda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afd8d45d020"/>
        <function-ref name="isUart" scoped="" ref="0x2afd8d45d1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afd8d45d340"/>
        <function-ref name="isSpi" scoped="" ref="0x2afd8d45d4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afd8d45d660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afd8d45d7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afd8d45d980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afd8d45db10"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8d45dca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afd8d45c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afd8d45c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afd8d45c540"/>
        <function-ref name="tx" scoped="" ref="0x2afd8d45c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afd8d45c860"/>
        <function-ref name="disableUart" scoped="" ref="0x2afd8d45c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afd8d45cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afd8d45cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afd8d45b020"/>
        <function-ref name="rx" scoped="" ref="0x2afd8d45b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afd8d45b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afd8d45b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afd8d45b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afd8d45b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afd8d45b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2afd8d4a95b0" loc="79:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2afd8d4a95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afd8d4a9930"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afd8d4a9ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afd8d4a9c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afd8d4a9de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afd8d458020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afd8d4581b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afd8d458340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afd8d4584d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8d458660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afd8d4587f0"/>
        <function-ref name="getData" scoped="" ref="0x2afd8d458980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afd8d458b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afd8d458ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afd8d457020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afd8d4571b0"/>
        <function-ref name="getIV" scoped="" ref="0x2afd8d457340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afd8d4574d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afd8d457660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afd8d4577f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afd8d457980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afd8d457b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afd8d457ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afd8d457e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afd8d4a8020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afd8d4a81b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afd8d4a8540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afd8d4a86d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afd8d4a8860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afd8d4a89f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afd8d4a8b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afd8d4a8d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afd8d4a7020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afd8d4a71b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afd8d4a7340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afd8d4a74d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afd8d4a7660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afd8d4a77f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afd8d4a7980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afd8d4a7b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afd8d4a7ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afd8d4a7e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afd8d4a6020"/>
        <function-ref name="setData" scoped="" ref="0x2afd8d4a61b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afd8d4a6340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afd8d4a64d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afd8d4a6660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afd8d4a67f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afd8d4a6980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afd8d4a6b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afd8d4a5420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afd8d4a55b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afd8d4a5740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afd8d4a58d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afd8d4a5a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afd8d4a5bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afd8d4a5d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afd8d4a4020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afd8d4a41b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afd8d4a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2afd8d4a2670" loc="81:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2afd8d4a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d4a29f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d4a2b80"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d4a2d10"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d4a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d4a11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d4a1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d4a14d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d4a1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d4a17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d4a1980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d4a1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d4a1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d4a1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d4a0120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d4a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afd8d45a750" loc="77:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d45a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d45aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2afd8d4a4700" loc="80:../../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2afd8d4a4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d4a4a80"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d4a4c10"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d4a4da0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d4a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d4a31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d4a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d4a34d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d4a3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d4a37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d4a3980"/>
        <function-ref name="set" scoped="" ref="0x2afd8d4a3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d4a3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d4a3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d4a2120"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d4a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8e29f2c0" loc="42:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e29f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8e29f640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e29f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2afd8e299440" loc="46:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2afd8e299440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8e2997c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8e292760" loc="51:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e292760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8e292ae0"/>
        <function-ref name="configure" scoped="" ref="0x2afd8e292c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2afd8e299a50" loc="48:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afd8e299a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afd8e299dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afd8e298020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afd8e2981b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afd8e298340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afd8e2984d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afd8e298660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afd8e2987f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afd8e298980"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e298b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afd8e298ca0"/>
        <function-ref name="getData" scoped="" ref="0x2afd8e298e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afd8e297020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afd8e2971b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afd8e297440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afd8e2975d0"/>
        <function-ref name="getIV" scoped="" ref="0x2afd8e297760"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afd8e2978f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afd8e297a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afd8e297c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afd8e297da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afd8e296020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afd8e2961b0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afd8e296340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afd8e2964d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afd8e296660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afd8e2969f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afd8e296b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afd8e296d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afd8e295020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afd8e2951b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afd8e295340"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afd8e2954d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afd8e295660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afd8e2957f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afd8e295980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afd8e295b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afd8e295ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afd8e295e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afd8e294020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afd8e2941b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afd8e294340"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afd8e2944d0"/>
        <function-ref name="setData" scoped="" ref="0x2afd8e294660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afd8e2947f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afd8e294980"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afd8e294b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afd8e294ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afd8e294e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afd8e293020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afd8e2935b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afd8e293740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afd8e2938d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afd8e293a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afd8e293bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afd8e293d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afd8e292020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afd8e2921b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afd8e292340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afd8e2924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2afd8e29ac10" loc="45:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2afd8e29ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8e299020"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8e2991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8e2a0640" loc="41:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8e2a0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e2a09c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e2a0b50"/>
        <function-ref name="request" scoped="" ref="0x2afd8e2a0ce0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e2a0e70"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e29f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2afd8e29e2b0" loc="44:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2afd8e29e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afd8e29e630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afd8e29e7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x2afd8e29e950"/>
        <function-ref name="enableUart" scoped="" ref="0x2afd8e29eae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afd8e29ec70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afd8e29ee00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afd8e29d020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afd8e29d1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afd8e29d340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afd8e29d4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afd8e29d660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afd8e29d7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afd8e29d980"/>
        <function-ref name="getUbr" scoped="" ref="0x2afd8e29dc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afd8e29dda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afd8e29c020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afd8e29c1b0"/>
        <function-ref name="isUart" scoped="" ref="0x2afd8e29c340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afd8e29c4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afd8e29c660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afd8e29c7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afd8e29c980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afd8e29cb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afd8e29cca0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e29ce30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afd8e29b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afd8e29b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2afd8e29b540"/>
        <function-ref name="tx" scoped="" ref="0x2afd8e29b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2afd8e29b860"/>
        <function-ref name="disableUart" scoped="" ref="0x2afd8e29b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afd8e29bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afd8e29bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afd8e29a020"/>
        <function-ref name="rx" scoped="" ref="0x2afd8e29a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afd8e29a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afd8e29a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afd8e29a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afd8e29a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afd8e29a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8e29fa60" loc="43:../../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e29fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8e29fde0"/>
        <function-ref name="userId" scoped="" ref="0x2afd8e29e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8d4ee2c0" loc="42:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d4ee2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8d4ee640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8d4ee7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8d4ed8a0" loc="45:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d4ed8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8d4edc20"/>
        <function-ref name="configure" scoped="" ref="0x2afd8d4eddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afd8d4f24d0" loc="39:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afd8d4f24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d4f2850"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d4f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d4f0020" loc="41:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d4f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d4f03a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d4f0530"/>
        <function-ref name="request" scoped="" ref="0x2afd8d4f06c0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d4f0850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d4f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afd8d4f13f0" loc="40:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d4f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d4f1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8d4eead0" loc="43:../../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d4eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8d4eee50"/>
        <function-ref name="userId" scoped="" ref="0x2afd8d4ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afd8d554bf0" loc="43:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d554bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8d553020"/>
        <function-ref name="userId" scoped="" ref="0x2afd8d5531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2afd8d4ebd60" loc="39:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2afd8d4ebd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d555180"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d555310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2afd8d5545e0" loc="42:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2afd8d5545e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d554960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2afd8d555710" loc="40:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2afd8d555710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d555ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2afd8d555d80" loc="41:../../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2afd8d555d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2afd8d554180"/>
        <function-ref name="txDone" scoped="" ref="0x2afd8d554310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8d5d7020" loc="92:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8d5d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8d5d73c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8d5d7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8d5d6cd0" loc="96:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8d5d6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8d5d40a0"/>
        <function-ref name="configure" scoped="" ref="0x2afd8d5d4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afd8d5d77a0" loc="93:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8d5d77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d5d7b20"/>
        <function-ref name="requested" scoped="" ref="0x2afd8d5d7cb0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d5d7e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d5d6020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8d5d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d5d8210" loc="91:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d5d8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d5d85b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d5d8740"/>
        <function-ref name="request" scoped="" ref="0x2afd8d5d88d0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d5d8a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d5d8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8d5d6400" loc="94:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8d5d6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8d5d6780"/>
        <function-ref name="userId" scoped="" ref="0x2afd8d5d6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e395140" loc="44:../../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e395140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e3954c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2afd8e395750" loc="45:../../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2afd8e395750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8e395ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8e395c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8e395df0"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8e394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8e392850" loc="55:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e392850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8e392bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e392d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8e38f590" loc="60:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e38f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8e38f930"/>
        <function-ref name="configure" scoped="" ref="0x2afd8e38fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afd8e38fd50" loc="61:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afd8e38fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8e38e100"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8e38e290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8e38e420"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8e38e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afd8e390020" loc="56:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e390020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e3903a0"/>
        <function-ref name="requested" scoped="" ref="0x2afd8e390530"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e3906c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e390850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e3909e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8e38e800" loc="62:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8e38e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8e38eb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8e38ed10"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8e38d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8e38d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8e38d340"/>
        <function-ref name="get" scoped="" ref="0x2afd8e38d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8e38d660"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8e38dca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8e38d980"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8e38d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8e38db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8e393970" loc="54:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8e393970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e393d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e392020"/>
        <function-ref name="request" scoped="" ref="0x2afd8e3921b0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e392340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e3924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8e390c30" loc="57:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e390c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8e38f020"/>
        <function-ref name="userId" scoped="" ref="0x2afd8e38f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2afd8e38c020" loc="75:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2afd8e38c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8e38c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8e38c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2afd8d5ced70" loc="4:../../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2afd8d5ced70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afd8d5cb180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afd8d5cb310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afd8d5cb4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afd8d5cb630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afd8d5cb7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afd8d5cb950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afd8d5cbae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afd8d5cbc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8d5cbe00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afd8d5ca020"/>
        <function-ref name="getData" scoped="" ref="0x2afd8d5ca1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afd8d5ca340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afd8d5ca4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afd8d5ca760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afd8d5ca8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2afd8d5caa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afd8d5cac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afd8d5cada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afd8d5c9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afd8d5c91b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afd8d5c9340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afd8d5c94d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2afd8d5c9660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afd8d5c97f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afd8d5c9980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afd8d5c9d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afd8d5c8020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afd8d5c81b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afd8d5c8340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afd8d5c84d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afd8d5c8660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afd8d5c87f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afd8d5c8980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afd8d5c8b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afd8d5c8ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afd8d5c8e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afd8d5c7020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afd8d5c71b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afd8d5c7340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afd8d5c74d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afd8d5c7660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afd8d5c77f0"/>
        <function-ref name="setData" scoped="" ref="0x2afd8d5c7980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afd8d5c7b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afd8d5c7ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afd8d5c7e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afd8d5c6020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afd8d5c61b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afd8d5c6340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afd8d5c68d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afd8d5c6a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afd8d5c6bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afd8d5c6d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afd8d5c5020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afd8d5c51b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afd8d5c5340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afd8d5c54d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afd8d5c5660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afd8d5c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2afd8d5bb700" loc="41:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2afd8d5bb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2afd8d5bba80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2afd8d5bbc10"/>
        <function-ref name="setUctl" scoped="" ref="0x2afd8d5bbda0"/>
        <function-ref name="enableUart" scoped="" ref="0x2afd8d5ba020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2afd8d5ba1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2afd8d5ba340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2afd8d5ba4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2afd8d5ba660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2afd8d5ba7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2afd8d5ba980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2afd8d5bab10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2afd8d5baca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2afd8d5bae30"/>
        <function-ref name="getUbr" scoped="" ref="0x2afd8d5b9120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2afd8d5b92b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2afd8d5b9440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2afd8d5b95d0"/>
        <function-ref name="isUart" scoped="" ref="0x2afd8d5b9760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2afd8d5b98f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2afd8d5b9a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2afd8d5b9c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2afd8d5b9da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2afd8d5b8020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2afd8d5b81b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8d5b8340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2afd8d5b86d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2afd8d5b8860"/>
        <function-ref name="setUbr" scoped="" ref="0x2afd8d5b89f0"/>
        <function-ref name="tx" scoped="" ref="0x2afd8d5b8b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2afd8d5b8d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2afd8d5b7020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2afd8d5b71b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2afd8d5b7340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2afd8d5b74d0"/>
        <function-ref name="rx" scoped="" ref="0x2afd8d5b7660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2afd8d5b77f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2afd8d5b7980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2afd8d5b7b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2afd8d5b7ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2afd8d5b7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2afd8d5b41f0" loc="43:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2afd8d5b41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d5b4570"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d5b4700"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d5b4890"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d5b4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d5b4bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d5b4d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d5b3020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d5b31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d5b3340"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d5b34d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d5b3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d5b37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d5b3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d5b3c10"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d5b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2afd8d5c4940" loc="39:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2afd8d5c4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2afd8d5c4cc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2afd8d5c4e50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2afd8d5c1020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2afd8d5c11b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2afd8d5c1340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2afd8d5c14d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2afd8d5c1660"/>
        <function-ref name="getStopBit" scoped="" ref="0x2afd8d5c17f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8d5c1980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2afd8d5c1b10"/>
        <function-ref name="getData" scoped="" ref="0x2afd8d5c1ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2afd8d5c1e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2afd8d5c0020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2afd8d5c02b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2afd8d5c0440"/>
        <function-ref name="getIV" scoped="" ref="0x2afd8d5c05d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2afd8d5c0760"/>
        <function-ref name="setStartBit" scoped="" ref="0x2afd8d5c08f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2afd8d5c0a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2afd8d5c0c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2afd8d5c0da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2afd8d5bf020"/>
        <function-ref name="isI2C" scoped="" ref="0x2afd8d5bf1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2afd8d5bf340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2afd8d5bf4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2afd8d5bf860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2afd8d5bf9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2afd8d5bfb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2afd8d5bfd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2afd8d5be020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2afd8d5be1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x2afd8d5be340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2afd8d5be4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2afd8d5be660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2afd8d5be7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2afd8d5be980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2afd8d5beb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2afd8d5beca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2afd8d5bee30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2afd8d5bd020"/>
        <function-ref name="getStartBit" scoped="" ref="0x2afd8d5bd1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2afd8d5bd340"/>
        <function-ref name="setData" scoped="" ref="0x2afd8d5bd4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2afd8d5bd660"/>
        <function-ref name="getClockSource" scoped="" ref="0x2afd8d5bd7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2afd8d5bd980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2afd8d5bdb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2afd8d5bdca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2afd8d5bde30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2afd8d5bc420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2afd8d5bc5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2afd8d5bc740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2afd8d5bc8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2afd8d5bca60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2afd8d5bcbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2afd8d5bcd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2afd8d5bb020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2afd8d5bb1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2afd8d5bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2afd8d5b6250" loc="42:../../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2afd8d5b6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d5b65d0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d5b6760"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8d5b68f0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d5b6a80"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d5b6c10"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8d5b6da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d5b5020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d5b51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8d5b5340"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8d5b54d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8d5b5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8d5b57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8d5b5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8d5b5c10"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d5b5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2afd8d7279c0" loc="62:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afd8d7279c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d727d40"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d726020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d7261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d726340"/>
        <function-ref name="get" scoped="" ref="0x2afd8d7264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d726660"/>
        <function-ref name="set" scoped="" ref="0x2afd8d7267f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d726980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2afd8d726cf0" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2afd8d726cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d7250a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d725230"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d7253c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d725550"/>
        <function-ref name="get" scoped="" ref="0x2afd8d7256e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d725870"/>
        <function-ref name="set" scoped="" ref="0x2afd8d725a00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d725b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2afd8d720950" loc="71:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d720950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d720cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2afd8d6a9570" loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2afd8d6a9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2afd8d6a98f0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d6a9a80"/>
        <function-ref name="captured" scoped="" ref="0x2afd8d6a9c10"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2afd8d6a9da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2afd8d723870" loc="67:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d723870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d723cf0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d723e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2afd8d721240" loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d721240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7215c0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d721750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2afd8d71b080" loc="80:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d71b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afd8d71b600"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afd8d71b790"/>
        <function-ref name="sfd" scoped="" ref="0x2afd8d71b920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2afd8d724020" loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d724020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afd8d7243a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afd8d724530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afd8d7246c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2afd8d71f0c0" loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d71f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d71f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACKPEND" ref="0x2afd8d71ee80" loc="76:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d71ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d71d220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afd8d729370" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afd8d729370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d7296f0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d729880"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d729a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d729ba0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d729d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d728020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d7281b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d728340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d6b0860" loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d6b0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d6b0be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2afd8d71d5e0" loc="77:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d71d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d71d960"/>
        <function-ref name="write" scoped="" ref="0x2afd8d71daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2afd8d6a8120" loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afd8d6a8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d6a84a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d6a8630"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d6a87c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d6a8950"/>
        <function-ref name="get" scoped="" ref="0x2afd8d6a8ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d6a8c70"/>
        <function-ref name="set" scoped="" ref="0x2afd8d6a8e00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d729020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Tx" ref="0x2afd8d6af820" loc="56:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Tx" scoped="" ref="0x2afd8d6af820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Tx"/>
      </instance>
      <interface-functions>
        <function-ref name="loadTXFIFODone" scoped="" ref="0x2afd8d6afba0"/>
        <function-ref name="loadTXFIFO" scoped="" ref="0x2afd8d6afd30"/>
        <function-ref name="send" scoped="" ref="0x2afd8d6ae020"/>
        <function-ref name="lockChipSpi" scoped="" ref="0x2afd8d6ae1b0"/>
        <function-ref name="cca" scoped="" ref="0x2afd8d6ae340"/>
        <function-ref name="sendDone" scoped="" ref="0x2afd8d6ae4d0"/>
        <function-ref name="unlockChipSpi" scoped="" ref="0x2afd8d6ae660"/>
        <function-ref name="transmissionStarted" scoped="" ref="0x2afd8d6ae7f0"/>
        <function-ref name="transmittedSFD" scoped="" ref="0x2afd8d6ae980"/>
        <function-ref name="modify" scoped="" ref="0x2afd8d6aeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2afd8d721ad0" loc="69:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afd8d721ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d721e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2afd8d728690" loc="61:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2afd8d728690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d728a10"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d728ba0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d728d30"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d727020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d7271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d727340"/>
        <function-ref name="set" scoped="" ref="0x2afd8d7274d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d727660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8d71bbe0" loc="81:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8d71bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8d71a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8d71a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8d71a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8d71a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8d71a660"/>
        <function-ref name="get" scoped="" ref="0x2afd8d71a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8d71a980"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8d716020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d71ab10"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8d71aca0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8d71ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2afd8d71f7d0" loc="73:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afd8d71f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d71fb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2afd8d6af020" loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2afd8d6af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afd8d6af3a0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d6af530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureTime" ref="0x2afd8d71ddf0" loc="78:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d71ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CaptureTime"/>
      </instance>
      <interface-functions>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8d71c1c0"/>
        <function-ref name="getSFDUptime" scoped="" ref="0x2afd8d71c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2afd8d71e750" loc="75:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d71e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d71ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffAlarm" ref="0x2afd8d6ad1d0" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffAlarm" scoped="" ref="0x2afd8d6ad1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d6aab30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d6ac9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d6aa4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d6aa020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d6a9020"/>
        <function-ref name="start" scoped="" ref="0x2afd8d6ac020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d6ac530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2afd8d71e020" loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d71e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d71e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2afd8d724a40" loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d724a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d724dc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d723020"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7231b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d723340"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d7234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2afd8d720220" loc="70:../../../../../tos/chips/cc2420_tkn154/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afd8d720220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7205a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2afd8d7410c0" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d7410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x2afd8d741440"/>
        <function-ref name="setChannel" scoped="" ref="0x2afd8d7415d0"/>
        <function-ref name="setPromiscuousMode" scoped="" ref="0x2afd8d741760"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afd8d7418f0"/>
        <function-ref name="getTxPower" scoped="" ref="0x2afd8d741a80"/>
        <function-ref name="isPromiscuousModeEnabled" scoped="" ref="0x2afd8d741c10"/>
        <function-ref name="setCCAMode" scoped="" ref="0x2afd8d741da0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afd8d740020"/>
        <function-ref name="getCCAMode" scoped="" ref="0x2afd8d7401b0"/>
        <function-ref name="sync" scoped="" ref="0x2afd8d740340"/>
        <function-ref name="getChannel" scoped="" ref="0x2afd8d7404d0"/>
        <function-ref name="needsSync" scoped="" ref="0x2afd8d740660"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afd8d7407f0"/>
        <function-ref name="setPanCoordinator" scoped="" ref="0x2afd8d740a80"/>
        <function-ref name="getPanCoordinator" scoped="" ref="0x2afd8d740c10"/>
        <function-ref name="setTxPower" scoped="" ref="0x2afd8d740da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Rx" ref="0x2afd8d7439b0" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8d7439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Rx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8d743d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2afd8d743020" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afd8d7433a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afd8d743530"/>
        <function-ref name="sfd" scoped="" ref="0x2afd8d7436c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420AsyncSplitControl" ref="0x2afd8d746620" loc="42:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420AsyncSplitControl" scoped="" ref="0x2afd8d746620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stopDone" scoped="" ref="0x2afd8d7469a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d746b30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d746cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8d742080" loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d742080"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8d742400"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8d742590"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8d742720"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8d7428b0"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8d742a40"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8d742bd0"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8d742d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2afd8d739380" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2afd8d739380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d739700"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d739890"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d739a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d739bb0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d739d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d738020"/>
        <function-ref name="set" scoped="" ref="0x2afd8d7381b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d738340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2afd8d730b00" loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2afd8d730b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x2afd8d730e80"/>
        <function-ref name="setChannel" scoped="" ref="0x2afd8d72f030"/>
        <function-ref name="setPromiscuousMode" scoped="" ref="0x2afd8d72f1c0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2afd8d72f350"/>
        <function-ref name="getTxPower" scoped="" ref="0x2afd8d72f4e0"/>
        <function-ref name="isPromiscuousModeEnabled" scoped="" ref="0x2afd8d72f670"/>
        <function-ref name="setCCAMode" scoped="" ref="0x2afd8d72f800"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2afd8d72f990"/>
        <function-ref name="getCCAMode" scoped="" ref="0x2afd8d72fb20"/>
        <function-ref name="sync" scoped="" ref="0x2afd8d72fcb0"/>
        <function-ref name="getChannel" scoped="" ref="0x2afd8d72fe40"/>
        <function-ref name="needsSync" scoped="" ref="0x2afd8d72e020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2afd8d72e1b0"/>
        <function-ref name="setPanCoordinator" scoped="" ref="0x2afd8d72e440"/>
        <function-ref name="getPanCoordinator" scoped="" ref="0x2afd8d72e5d0"/>
        <function-ref name="setTxPower" scoped="" ref="0x2afd8d72e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2afd8d7a5020" loc="123:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2afd8d7a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d7a53a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d7a5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2afd8d7386b0" loc="48:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2afd8d7386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d738a30"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d738bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d738d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d736020"/>
        <function-ref name="get" scoped="" ref="0x2afd8d7361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d736340"/>
        <function-ref name="set" scoped="" ref="0x2afd8d7364d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d736660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Rx" ref="0x2afd8d73b820" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Rx" scoped="" ref="0x2afd8d73b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Rx"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x2afd8d73bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopContinueTask" ref="0x2afd8d7a6020" loc="121:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopContinueTask" scoped="" ref="0x2afd8d7a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d7a63a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d7a6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2afd8d73ce50" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2afd8d73ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2afd8d73b210"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2afd8d73b3a0"/>
        <function-ref name="sfd" scoped="" ref="0x2afd8d73b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncSplitControl" ref="0x2afd8d73c490" loc="42:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncSplitControl" scoped="" ref="0x2afd8d73c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stopDone" scoped="" ref="0x2afd8d73c810"/>
        <function-ref name="start" scoped="" ref="0x2afd8d73c9a0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d73cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2afd8d7333a0" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afd8d7333a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d733720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2afd8d73a020" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2afd8d73a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8d73a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8d73a530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8d73a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8d73a850"/>
        <function-ref name="get" scoped="" ref="0x2afd8d73a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8d73ab70"/>
        <function-ref name="set" scoped="" ref="0x2afd8d73ad00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8d739020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACKPEND" ref="0x2afd8d732a50" loc="56:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d732a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d732dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d73fbf0" loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d73fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d73c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2afd8d7311f0" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d7311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d731570"/>
        <function-ref name="write" scoped="" ref="0x2afd8d731700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2afd8d7356e0" loc="51:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2afd8d7356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d735a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d735bf0"/>
        <function-ref name="request" scoped="" ref="0x2afd8d735d80"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d734020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d7341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2afd8d72eb00" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afd8d72eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d72ee80"/>
        <function-ref name="write" scoped="" ref="0x2afd8d72d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2afd8d734530" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d734530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d7348b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d734a40"/>
        <function-ref name="write" scoped="" ref="0x2afd8d734bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d734d60"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d733020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2afd8d732220" loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afd8d732220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7326a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2afd8d736a50" loc="49:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2afd8d736a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8d736dd0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8d735020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8d7351b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8d735340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2afd8d733ad0" loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d733ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d733e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FrameUtility" ref="0x2afd8d731a10" loc="58:../../../../../tos/chips/cc2420_tkn154/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FrameUtility" scoped="" ref="0x2afd8d731a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FrameUtility"/>
      </instance>
      <interface-functions>
        <function-ref name="writeHeader" scoped="" ref="0x2afd8d731d90"/>
        <function-ref name="getMHRLength" scoped="" ref="0x2afd8d730020"/>
        <function-ref name="convertToNative" scoped="" ref="0x2afd8d7301b0"/>
        <function-ref name="copyLocalExtendedAddressLE" scoped="" ref="0x2afd8d730340"/>
        <function-ref name="copyCoordExtendedAddressLE" scoped="" ref="0x2afd8d7304d0"/>
        <function-ref name="convertToLE" scoped="" ref="0x2afd8d730660"/>
        <function-ref name="isBeaconFromCoord" scoped="" ref="0x2afd8d7307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2afd8d7c4800" loc="69:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2afd8d7c4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c4d80"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2afd8d7cfaa0" loc="47:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2afd8d7cfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2afd8d7c7800" loc="63:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2afd8d7c7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c7b80"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2afd8d7c22f0" loc="72:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2afd8d7c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c2670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2afd8d7bbad0" loc="86:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2afd8d7bbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bbe50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2afd8d7c2ad0" loc="73:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2afd8d7c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c2e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2afd8d8352f0" loc="108:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2afd8d8352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d835670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d835800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2afd8d7b02f0" loc="104:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2afd8d7b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b0670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2afd8d7cedc0" loc="50:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2afd8d7cedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2afd8d7b62f0" loc="93:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2afd8d7b62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b6670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2afd8d7b12f0" loc="102:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2afd8d7b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b1670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2afd8d7c6800" loc="65:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2afd8d7c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c6b80"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2afd8d7c5800" loc="67:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2afd8d7c5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c5b80"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2afd8d7bc2f0" loc="83:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2afd8d7bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bc670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2afd8d7bead0" loc="79:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2afd8d7bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bee50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2afd8d7c02f0" loc="74:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2afd8d7c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c0670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2afd8d7d0440" loc="42:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2afd8d7d0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2afd8d7d07c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2afd8d7d0950"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2afd8d7d0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2afd8d7cb770" loc="54:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2afd8d7cb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2afd8d7cbdc0" loc="55:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2afd8d7cbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7ca310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2afd8d7b5a70" loc="95:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2afd8d7b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b5df0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2afd8d7ca5e0" loc="56:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2afd8d7ca5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7ca960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2afd8d7b1ad0" loc="103:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2afd8d7b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b1e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2afd8d7ccaa0" loc="52:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2afd8d7ccaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2afd8d7b7ad0" loc="92:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2afd8d7b7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b7e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2afd8d7c5020" loc="66:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2afd8d7c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c53a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2afd8d7c6020" loc="64:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2afd8d7c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c63a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2afd8d7cf450" loc="46:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2afd8d7cf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2afd8d7b8ad0" loc="90:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2afd8d7b8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b8e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2afd8d7b92f0" loc="87:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2afd8d7b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b9670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2afd8d7b72f0" loc="91:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2afd8d7b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b7670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2afd8d836ad0" loc="107:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2afd8d836ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d836e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d835020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2afd8d7b0ad0" loc="105:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2afd8d7b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b0e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d836020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2afd8d7bd2f0" loc="80:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2afd8d7bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bd670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2afd8d7b9ad0" loc="88:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2afd8d7b9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b9e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2afd8d7b2ad0" loc="101:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2afd8d7b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b2e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2afd8d7bf2f0" loc="76:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2afd8d7bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bf670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2afd8d835ad0" loc="111:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2afd8d835ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d835e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d834020"/>
        <function-ref name="write" scoped="" ref="0x2afd8d8341b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d834340"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d8344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2afd8d7d0db0" loc="45:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2afd8d7d0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2afd8d7c7020" loc="62:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2afd8d7c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c73a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2afd8d7c4020" loc="68:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2afd8d7c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c43a0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2afd8d7bcad0" loc="84:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2afd8d7bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bce50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2afd8d7c0ad0" loc="75:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2afd8d7c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c0e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2afd8d7bb2f0" loc="85:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2afd8d7bb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bb670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2afd8d7c32f0" loc="70:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2afd8d7c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c3670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2afd8d7ce120" loc="48:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2afd8d7ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7ce4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2afd8d7c3ad0" loc="71:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2afd8d7c3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7c3e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8d7d1750" loc="41:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8d7d1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8d7d1ad0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8d7d1c60"/>
        <function-ref name="request" scoped="" ref="0x2afd8d7d1df0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8d7d0020"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8d7d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2afd8d7cac30" loc="57:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2afd8d7cac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2afd8d7c9940" loc="59:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2afd8d7c9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7c9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2afd8d7b22f0" loc="100:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2afd8d7b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b2670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2afd8d7b4ad0" loc="99:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2afd8d7b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b4e50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2afd8d7cb120" loc="53:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2afd8d7cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2afd8d7b42f0" loc="96:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2afd8d7b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b4670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2afd8d8362f0" loc="106:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2afd8d8362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d836670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d836800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2afd8d7bdad0" loc="81:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2afd8d7bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bde50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2afd8d7b82f0" loc="89:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2afd8d7b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b8670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2afd8d7ce770" loc="49:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2afd8d7ce770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7ceaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2afd8d7cc450" loc="51:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2afd8d7cc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7cc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2afd8d7bfad0" loc="77:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2afd8d7bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7bfe50"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2afd8d7c92f0" loc="58:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2afd8d7c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2afd8d7c9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2afd8d7be2f0" loc="78:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2afd8d7be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7be670"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2afd8d7b6ad0" loc="94:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2afd8d7b6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8d7b5610"/>
        <function-ref name="write" scoped="" ref="0x2afd8d7b57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2afd8d8347a0" loc="112:../../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2afd8d8347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2afd8d834b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2afd8d834cb0"/>
        <function-ref name="write" scoped="" ref="0x2afd8d834e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2afd8d832020"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8d8321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d8b24e0" loc="4:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d8b24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d8afdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d8b1da0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d8af760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d8af2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d8ae2a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d8b13d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d8b18e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e3d0020" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e3d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3ce870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3cf840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3ce220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3cfd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3ced30"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3d0e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3cf380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e3d1780" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e3d1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e3d1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e3bf4f0" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e3bf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3bcdb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3bdda0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3bc760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3bc2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3bb2a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3bd3d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3bd8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e3c0b70" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e3c0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e3bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afd8e3a5020" loc="41:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e3a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e3a53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e3a5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e3a56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e3a5850"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afd8e3a8570" loc="39:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e3a8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e3a88f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e3a8a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e3a8c10"/>
        <function-ref name="get" scoped="" ref="0x2afd8e3a8da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e3a7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e3a71b0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e3a7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e3a74d0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e3a7660"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e3a77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e3a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afd8e3a7c10" loc="40:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e3a7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e3a6020"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e3a61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e3a6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e3a64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e3a6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e3a67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e3a6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e3a6b10"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e3a6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afd8e455da0" loc="49:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e455da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e454180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e454310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e4544a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e454630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4547c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afd8e4574c0" loc="47:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4574c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e457840"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e4579d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e457b60"/>
        <function-ref name="get" scoped="" ref="0x2afd8e457cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e457e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e456030"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e4561c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e456350"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4564e0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e456670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e456800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e3a2340" loc="46:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e3a2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3a0ba0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3a1b80"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3a0550"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3a0090"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e457090"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3a11b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3a16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e3a3a30" loc="45:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e3a3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e3a3db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afd8e456a90" loc="48:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e456a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e456e10"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e455020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4551b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e455340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e4554d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e455660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e4557f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e455980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e455b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afd8d877080" loc="43:../../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8d877080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8d876020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8d8769a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8d8764e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8d876e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2afd8d86e0f0" loc="63:../../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2afd8d86e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8d86d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8d86d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8d86d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8d86de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2afd8d872cd0" loc="62:../../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8d872cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8d871b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8d870550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8d870090"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8d870a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e3b9890" loc="61:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e3b9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3b50d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3b70d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3b7a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3b7590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3b5590"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3b86e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3b8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e3b20a0" loc="73:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e3b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3afb30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3b19f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3af4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3af020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3ae020"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3b1020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3b1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afd8e3b5c00" loc="68:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8e3b5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e3b4a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e3b34e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e3b3020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e3b39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e3cc6d0" loc="38:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm62500hz32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e3cc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3c8020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3c9020"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3c99a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3c94e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3c84e0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3cb5b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3cbac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e3c8b90" loc="39:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm1.Alarm62500hz32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e3c8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3c54e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e3c64e0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e3c6e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e3c69a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3c59a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e3c79d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e3c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d938c30" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.PHYAlarm2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d938c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9344e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9364e0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d936e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9369a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d9349a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d937a80"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d8a3280" loc="38:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khzTo62500hzTransformC.nc">
      <component-ref qname="Alarm32khzTo62500hzTransformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d8a3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d8a1b30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d8a2aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d8a14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d8a1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d89f020"/>
        <function-ref name="start" scoped="" ref="0x2afd8d8a20d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d8a25e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8d89fd50" loc="39:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khzTo62500hzTransformC.nc">
      <component-ref qname="Alarm32khzTo62500hzTransformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d89fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d89b670"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d89c590"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d89b020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d89ca50"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d89bb30"/>
        <function-ref name="start" scoped="" ref="0x2afd8d89eba0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d89c0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d901020" loc="4:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm32khz32VirtualizedP.nc">
      <component-ref qname="Alarm32khz32VirtualizedP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d901020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d8ff870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d900840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d8ff220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d900d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d8ffd30"/>
        <function-ref name="start" scoped="" ref="0x2afd8d901e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d900380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d8fc870" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d8fc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d8f8090"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d8f9090"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d8f9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d8f9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d8f8550"/>
        <function-ref name="start" scoped="" ref="0x2afd8d8fb6a0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d8fbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d8fc020" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d8fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d8fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4084f0" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4084f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e405db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e407da0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e405760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4052a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4042a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4073d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4078e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e409b50" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e409b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e408020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afd8e4a7da0" loc="41:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4a7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e4a6180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e4a6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e4a64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e4a6630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4a67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afd8e4aa340" loc="39:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4aa340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e4aa6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e4aa850"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4aa9e0"/>
        <function-ref name="get" scoped="" ref="0x2afd8e4aab70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4aad00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4a8020"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e4a81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e4a8340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4a84d0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e4a8660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e4a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afd8e4a8a80" loc="40:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4a8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e4a8e00"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e4a7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4a71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e4a7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e4a74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4a7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e4a77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e4a7980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e4a7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afd8e49da80" loc="49:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e49da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e49de00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e49c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e49c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e49c340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e49c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afd8e4a0190" loc="47:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4a0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e4a0510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e4a06a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4a0830"/>
        <function-ref name="get" scoped="" ref="0x2afd8e4a09c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4a0b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4a0ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e4a0e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e49e030"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e49e1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e49e350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e49e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4a3020" loc="46:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4a1870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4a2840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4a1220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4a2d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4a1d30"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4a3e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4a2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e4a4660" loc="45:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e4a4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e4a49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afd8e49e770" loc="48:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e49e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e49eaf0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e49ec80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e49ee10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e49d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e49d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e49d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e49d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e49d660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e49d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e402890" loc="61:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e402890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e3ff0d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4000d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e400a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e400590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e3ff590"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4016e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e401bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e4b30a0" loc="73:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4b30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4b1b30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4b29f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4b14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4b1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4af020"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4b2020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4b2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afd8e3ffc00" loc="68:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8e3ffc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e3fda80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4b44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e4b4020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4b49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d9452b0" loc="49:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d9452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d942b70"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d944b20"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d942500"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d942020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d940090"/>
        <function-ref name="start" scoped="" ref="0x2afd8d944110"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d944640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d8f4860" loc="48:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d8f4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d8f4be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8d940760" loc="50:../../../../../tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="Alarm32khz32VirtualizedP.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8d940760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d93c020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d93e020"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d93e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d93e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d93c4e0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d93f5b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d93fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d9324e0" loc="4:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d9324e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d930db0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d931da0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d930760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9302a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d92e2a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d9313d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9318e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e502020" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e502020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4ff870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e500840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4ff220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e500d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4ffd30"/>
        <function-ref name="start" scoped="" ref="0x2afd8e502e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e500380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e503720" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e503720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e503aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4f04f0" loc="44:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4f04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4eddb0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4efda0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4ed760"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4ed2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4ec2a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4ef3d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4ef8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e4f1b70" loc="43:../../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e4f1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e4f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2afd8e4d7da0" loc="41:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4d7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e4d6180"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e4d6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e4d64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e4d6630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4d67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2afd8e4d9380" loc="39:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4d9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e4d9700"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e4d9890"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4d9a20"/>
        <function-ref name="get" scoped="" ref="0x2afd8e4d9bb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4d9d40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4d8020"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e4d81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e4d8340"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4d84d0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e4d8660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e4d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2afd8e4d8a80" loc="40:../../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e4d8e00"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e4d7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4d71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e4d7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e4d74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4d7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e4d77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e4d7980"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e4d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2afd8e4cda80" loc="49:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2afd8e4cda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2afd8e4cde00"/>
        <function-ref name="setEvent" scoped="" ref="0x2afd8e4cc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2afd8e4cc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2afd8e4cc340"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2afd8e4cf190" loc="47:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2afd8e4cf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8e4cf510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2afd8e4cf6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4cf830"/>
        <function-ref name="get" scoped="" ref="0x2afd8e4cf9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4cfb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4cfce0"/>
        <function-ref name="getMode" scoped="" ref="0x2afd8e4cfe70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e4ce030"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4ce1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2afd8e4ce350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2afd8e4ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4d3020" loc="46:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4d1870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4d2840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4d1220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4d2d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4d1d30"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4d3e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4d2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e4d4660" loc="45:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e4d4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e4d49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2afd8e4ce770" loc="48:../../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2afd8e4ce770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2afd8e4ceaf0"/>
        <function-ref name="getControl" scoped="" ref="0x2afd8e4cec80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2afd8e4cee10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2afd8e4cd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2afd8e4cd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2afd8e4cd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2afd8e4cd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2afd8e4cd660"/>
        <function-ref name="setControl" scoped="" ref="0x2afd8e4cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4ea890" loc="61:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4ea890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4e60d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4e80d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4e8a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4e8590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4e6590"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4e96e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4e9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e4e30a0" loc="73:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4e30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4e0b30"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4e29f0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4e04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4e0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4df020"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4e2020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4e2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2afd8e4e6c00" loc="68:../../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2afd8e4e6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8e4e5a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2afd8e4e44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2afd8e4e4020"/>
        <function-ref name="overflow" scoped="" ref="0x2afd8e4e49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8e4fd6d0" loc="38:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm62500hz32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8e4fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4f9020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4fb020"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4fb9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4fb4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4f94e0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4fc5b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4fcac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2afd8e4f9b90" loc="39:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32P.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.TKN154TimingPAlarm.Alarm62500hz32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2afd8e4f9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2451f0"/>
            <typename><typedef-ref name="T32khz" ref="0x2afd8c245560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8e4f64e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8e4f74e0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8e4f7e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8e4f79a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8e4f69a0"/>
        <function-ref name="start" scoped="" ref="0x2afd8e4f89d0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e4f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afd8d92d6f0" loc="4:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzC.nc">
      <component-ref qname="LocalTime62500hzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8d92d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8d9293d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d928880" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <component-ref qname="LocalTime62500hzC.Alarm62500hz32VirtualizedC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d928880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9240d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9260d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d926a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d926590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d924590"/>
        <function-ref name="start" scoped="" ref="0x2afd8d9276e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d927bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2afd8d9239f0" loc="4:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzP.nc">
      <component-ref qname="LocalTime62500hzP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2afd8d9239f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2afd8d9206b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2afd8d920e20" loc="5:../../../../../tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzP.nc">
      <component-ref qname="LocalTime62500hzP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d920e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d91c6e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d91e6b0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d91c090"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d91eb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d91cba0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d91fca0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d91e1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReliableWait" ref="0x2afd8d9172a0" loc="47:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReliableWait" scoped="" ref="0x2afd8d9172a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReliableWait"/>
      </instance>
      <interface-functions>
        <function-ref name="waitRxDone" scoped="" ref="0x2afd8d916020"/>
        <function-ref name="waitRx" scoped="" ref="0x2afd8d9177b0"/>
        <function-ref name="waitBackoffDone" scoped="" ref="0x2afd8d917940"/>
        <function-ref name="ccaOnBackoffBoundary" scoped="" ref="0x2afd8d917ad0"/>
        <function-ref name="waitTx" scoped="" ref="0x2afd8d917c60"/>
        <function-ref name="waitTxDone" scoped="" ref="0x2afd8d917df0"/>
        <function-ref name="waitBackoff" scoped="" ref="0x2afd8d917620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeCalc" ref="0x2afd8d916b00" loc="50:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeCalc" scoped="" ref="0x2afd8d916b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeCalc"/>
      </instance>
      <interface-functions>
        <function-ref name="hasExpired" scoped="" ref="0x2afd8d916e80"/>
        <function-ref name="timeElapsed" scoped="" ref="0x2afd8d915030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2afd8d915470" loc="51:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2afd8d915470"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9140d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SymbolAlarm" ref="0x2afd8d9148b0" loc="52:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SymbolAlarm" scoped="" ref="0x2afd8d9148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9100d0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9110d0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d911a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d911590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d910590"/>
        <function-ref name="start" scoped="" ref="0x2afd8d9136e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d913bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8d9109b0" loc="53:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8d9109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8d910d30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8d90f020"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8d90f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8d90f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8d90f4d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8d90f660"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8d90f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8d90fe30"/>
        <function-ref name="set" scoped="" ref="0x2afd8d90f980"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8d90fb10"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8d90fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureTime" ref="0x2afd8d9162e0" loc="48:../../../../../tos/platforms/telosb/mac/tkn154/TKN154TimingP.nc">
      <component-ref qname="TKN154TimingP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureTime" scoped="" ref="0x2afd8d9162e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CaptureTime"/>
      </instance>
      <interface-functions>
        <function-ref name="getTimestamp" scoped="" ref="0x2afd8d916660"/>
        <function-ref name="getSFDUptime" scoped="" ref="0x2afd8d9167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d9cf370" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.MACTimer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d9cf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9cb870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9cee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9cdc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9cd780"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9ca1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9cbcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9cd300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9ce020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9cb260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9ce4f0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9ce9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer62500" ref="0x2afd8d9744d0" loc="45:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500P.nc">
      <component-ref qname="Timer62500P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer62500" scoped="" ref="0x2afd8d9744d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d970a20"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d972020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d972da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d972920"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d96f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d96f020"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9724a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d973110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d970410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9735e0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d973ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer62500hz" ref="0x2afd8d96cac0" loc="45:../../../../../tos/platforms/telosb/mac/tkn154/timer/HilTimer62500hzC.nc">
      <component-ref qname="HilTimer62500hzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer62500hz" scoped="" ref="0x2afd8d96cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d967110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9695b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9684a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d968020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d967a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d967590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d969a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d96a750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d968ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d96ac20"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d969130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2afd8d964020" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Alarm62500hz32VirtualizedC.nc">
      <component-ref qname="HilTimer62500hzC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d962870"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d963840"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d962220"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d963d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d962d30"/>
        <function-ref name="start" scoped="" ref="0x2afd8d964e30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d963380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2afd8d955060" loc="74:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimer62500hzC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2afd8d955060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d9553e0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d955570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2afd8d95ae10" loc="49:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimer62500hzC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2afd8d95ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9566e0"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9586b0"/>
        <function-ref name="startAt" scoped="" ref="0x2afd8d956090"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d958b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2afd8d956ba0"/>
        <function-ref name="start" scoped="" ref="0x2afd8d959ca0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9581f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d95f940" loc="48:../../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimer62500hzC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d95f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d95be80"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d95d4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d95b260"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d95dda0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d95a7a0"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d95a320"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d95d920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d95e560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d95b870"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d95ea30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d95d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2afd8d9d4a00" loc="71:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimer62500hzC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2afd8d9d4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8d9d4d80"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8d9d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2afd8d9d9640" loc="49:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimer62500hzC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2afd8d9d9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9d5c40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9d61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9d5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9d6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9d4590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9d4110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9d6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9d7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9d5630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9d7860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9d7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d952150" loc="48:../../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimer62500hzC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d952150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9da700"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d950c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d94fa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d94f5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9d9090"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9daba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d94f110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d952d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9da0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9502a0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d950790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d9c9cb0" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.MACTimer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d9c9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9c4220"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9c77c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9c5590"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9c5110"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9c4b20"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9c46a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9c7c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9c8940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9c5ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9c8e10"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d9c2750" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.MACTimer3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d9c2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9bec40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9bf1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9be020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9bfae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9bd590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9bd110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9bf660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9c1390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9be630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9c1860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9c1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d9bb060" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.MACTimer4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d9bb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9b7630"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9baac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9b8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9b84a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9b6020"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9b7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9b8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9bbc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9b7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9ba170"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8d9b5b00" loc="46:../../../../../tos/platforms/telosb/mac/tkn154/timer/Timer62500C.nc">
      <component-ref qname="Ieee802154NonBeaconEnabledC.MACTimer5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8d9b5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2afd8c29d5e0"/>
            <typename><typedef-ref name="T62500hz" ref="0x2afd8c29d8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8d9b0110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8d9b25b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8d9b14a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8d9b1020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8d9b0a10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8d9b0590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8d9b2a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8d9b4750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8d9b1ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8d9b4c20"/>
        <function-ref name="stop" scoped="" ref="0x2afd8d9b2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2afd8d9a7c50" loc="46:../../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8d9a7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8d9a6020"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8d9a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2afd8d9a5b70" loc="45:../../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2afd8d9a5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d9a7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d9acd20" loc="44:../../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d9acd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d9a90e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2afd8d9a1c10" loc="48:../../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2afd8d9a1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2afd8d9a0020"/>
        <function-ref name="rand32" scoped="" ref="0x2afd8d9a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2afd8d9a2ac0" loc="47:../../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2afd8d9a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d9a1750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d9a2200" loc="46:../../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d9a2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d9a2580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8d9a39e0" loc="46:../../../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8d9a39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8d9a3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2afd8da1f080" loc="47:../../../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8da1f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8da1f400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8da1f590"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8da1f720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8da1f8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8da1fa40"/>
        <function-ref name="get" scoped="" ref="0x2afd8da1fbd0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8da1fd60"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8da1e4d0"/>
        <function-ref name="set" scoped="" ref="0x2afd8da1e020"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8da1e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8da1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x2afd8db60900" loc="49:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x2afd8db60900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2afd8db60c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x2afd8db61240" loc="48:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x2afd8db61240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8db61e30"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8db60300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x2afd8db63aa0" loc="47:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x2afd8db63aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2afd8db63e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x2afd8db64310" loc="46:../../../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x2afd8db64310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8db63020"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8db634a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x2afd8e5b3610" loc="54:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x2afd8e5b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2afd8e5b3990"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2afd8e5b3b20"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2afd8e5b3cb0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2afd8e5b3e40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2afd8e5b2020"/>
        <function-ref name="reset" scoped="" ref="0x2afd8e5b21b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2afd8e5b2340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2afd8e5b24d0"/>
        <function-ref name="resetDone" scoped="" ref="0x2afd8e5b2660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2afd8e5b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x2afd8e5b9920" loc="48:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x2afd8e5b9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2afd8e5b9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x2afd8e5b80f0" loc="49:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x2afd8e5b80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8e5b8ce0"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8e5b71e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x2afd8e5bbaf0" loc="46:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x2afd8e5bbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2afd8e5bbe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x2afd8e5b77e0" loc="51:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x2afd8e5b77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e5b7b60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e5b7cf0"/>
        <function-ref name="request" scoped="" ref="0x2afd8e5b7e80"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e5b6030"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e5b61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x2afd8e5b5160" loc="53:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x2afd8e5b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2afd8e5b54e0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2afd8e5b5670"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2afd8e5b5800"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2afd8e5b5990"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2afd8e5b5b20"/>
        <function-ref name="reset" scoped="" ref="0x2afd8e5b5cb0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2afd8e5b5e40"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2afd8e5b3020"/>
        <function-ref name="resetDone" scoped="" ref="0x2afd8e5b31b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2afd8e5b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x2afd8e5b6490" loc="52:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x2afd8e5b6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e5b6810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e5b69a0"/>
        <function-ref name="request" scoped="" ref="0x2afd8e5b6b30"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e5b6cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e5b6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x2afd8e5ba290" loc="47:../../../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x2afd8e5ba290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2afd8e5bae80"/>
        <function-ref name="readDone" scoped="" ref="0x2afd8e5b9320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x2afd8da342c0" loc="45:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8da342c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2afd8da34640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2afd8da347d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2afd8da34960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2afd8da34af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2afd8da34c80"/>
        <function-ref name="reset" scoped="" ref="0x2afd8da34e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2afd8da33020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2afd8da331b0"/>
        <function-ref name="resetDone" scoped="" ref="0x2afd8da33340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2afd8da334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8da35020" loc="44:../../../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8da35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8da353a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8da35530"/>
        <function-ref name="request" scoped="" ref="0x2afd8da356c0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8da35850"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8da359e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x2afd8dad9de0" loc="58:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x2afd8dad9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8dad7180"/>
        <function-ref name="disable" scoped="" ref="0x2afd8dad7310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8dad74a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8dad7630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x2afd8dad0c60" loc="102:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x2afd8dad0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8dacf020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8dacf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x2afd8dad0480" loc="103:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x2afd8dad0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8dad0800"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8dad0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x2afd8dadac50" loc="57:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x2afd8dadac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dad9020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dad91b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dad9340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dad94d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8dad9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dad97f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8dad9980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dad9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x2afd8dadc580" loc="54:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x2afd8dadc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2afd8dadc920"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2afd8dadcab0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2afd8dadcc40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2afd8dadcdd0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2afd8dadb020"/>
        <function-ref name="reset" scoped="" ref="0x2afd8dadb1b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2afd8dadb340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2afd8dadb4d0"/>
        <function-ref name="resetDone" scoped="" ref="0x2afd8dadb660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2afd8dadb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x2afd8dadbac0" loc="56:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x2afd8dadbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dadbe40"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dada020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dada1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dada340"/>
        <function-ref name="get" scoped="" ref="0x2afd8dada4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dada660"/>
        <function-ref name="set" scoped="" ref="0x2afd8dada7f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dada980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8dad3d50" loc="62:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8dad3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8dad1100"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8dad1290"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8dad1420"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8dad15b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8dad1740"/>
        <function-ref name="get" scoped="" ref="0x2afd8dad18d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8dad1a60"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8dad01b0"/>
        <function-ref name="set" scoped="" ref="0x2afd8dad1d80"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8dad1bf0"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8dad0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8dad79e0" loc="60:../../../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8dad79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8dad3020"/>
        <function-ref name="fired" scoped="" ref="0x2afd8dad5510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8dad4300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8dad5e10"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8dad3920"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8dad34a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8dad5990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8dad6670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8dad4910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8dad6b40"/>
        <function-ref name="stop" scoped="" ref="0x2afd8dad5090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x2afd8dac6020" loc="47:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x2afd8dac6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8dac63a0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8dac6530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8dac66c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8dac6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x2afd8dac8cd0" loc="46:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x2afd8dac8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dac70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dac7230"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dac73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dac7550"/>
        <function-ref name="get" scoped="" ref="0x2afd8dac76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dac7870"/>
        <function-ref name="set" scoped="" ref="0x2afd8dac7a00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dac7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x2afd8dac99c0" loc="45:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x2afd8dac99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dac9d40"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dac8020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dac81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dac8340"/>
        <function-ref name="get" scoped="" ref="0x2afd8dac84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dac8660"/>
        <function-ref name="set" scoped="" ref="0x2afd8dac87f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dac8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8daccb20" loc="44:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8daccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8dac9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8dac91b0"/>
        <function-ref name="request" scoped="" ref="0x2afd8dac9340"/>
        <function-ref name="granted" scoped="" ref="0x2afd8dac94d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8dac9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8dac4de0" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dac4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dac2180"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dac2310"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8dac24a0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dac2630"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dac27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8dac2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dac2ae0"/>
        <function-ref name="get" scoped="" ref="0x2afd8dac2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8dac2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8dac1020"/>
        <function-ref name="set" scoped="" ref="0x2afd8dac11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8dac1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8dac14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8dac1760"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dac18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8dac5b70" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dac5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dac4020"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dac41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dac4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dac44d0"/>
        <function-ref name="get" scoped="" ref="0x2afd8dac4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dac47f0"/>
        <function-ref name="set" scoped="" ref="0x2afd8dac4980"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dac4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8dabe930" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dabe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dabecb0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dabee40"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8dabd020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dabd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dabd340"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8dabd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dabd660"/>
        <function-ref name="get" scoped="" ref="0x2afd8dabd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8dabd980"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8dabdb10"/>
        <function-ref name="set" scoped="" ref="0x2afd8dabdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8dabde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8dabc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8dabc2b0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dabc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8dabf690" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8dabf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dabfa10"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dabfba0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dabfd30"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dabe020"/>
        <function-ref name="get" scoped="" ref="0x2afd8dabe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dabe340"/>
        <function-ref name="set" scoped="" ref="0x2afd8dabe4d0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dabe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2afd8dab9480" loc="44:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2afd8dab9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8dab9800"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8dab9990"/>
        <function-ref name="setResistor" scoped="" ref="0x2afd8dab9b20"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8dab9cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8dab9e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2afd8dab8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dab81b0"/>
        <function-ref name="get" scoped="" ref="0x2afd8dab8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2afd8dab84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2afd8dab8660"/>
        <function-ref name="set" scoped="" ref="0x2afd8dab87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2afd8dab8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2afd8dab8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2afd8dab8da0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8db4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2afd8daba1b0" loc="43:../../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2afd8daba1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8daba530"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8daba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8daba850"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8daba9e0"/>
        <function-ref name="get" scoped="" ref="0x2afd8dabab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8dabad00"/>
        <function-ref name="set" scoped="" ref="0x2afd8dab9020"/>
        <function-ref name="clr" scoped="" ref="0x2afd8dab91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2afd8db48a90" loc="43:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afd8db48a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8db48e10"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8db44020"/>
        <function-ref name="start" scoped="" ref="0x2afd8db441b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8db44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2afd8db3bba0" loc="50:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x2afd8db3bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8db3a020"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8db3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2afd8db3c020" loc="47:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x2afd8db3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8db3c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8db3c530"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8db3c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8db3c850"/>
        <function-ref name="get" scoped="" ref="0x2afd8db3c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8db3cb70"/>
        <function-ref name="set" scoped="" ref="0x2afd8db3cd00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8db3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x2afd8db3fa80" loc="45:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x2afd8db3fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8db3fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8db3e020"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8db3e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8db3e340"/>
        <function-ref name="get" scoped="" ref="0x2afd8db3e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8db3e660"/>
        <function-ref name="set" scoped="" ref="0x2afd8db3e7f0"/>
        <function-ref name="clr" scoped="" ref="0x2afd8db3e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x2afd8db3ece0" loc="46:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x2afd8db3ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2afd8db3d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2afd8db3d230"/>
        <function-ref name="toggle" scoped="" ref="0x2afd8db3d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2afd8db3d550"/>
        <function-ref name="get" scoped="" ref="0x2afd8db3d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2afd8db3d870"/>
        <function-ref name="set" scoped="" ref="0x2afd8db3da00"/>
        <function-ref name="clr" scoped="" ref="0x2afd8db3db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2afd8db44770" loc="44:../../../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8db44770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8db40c40"/>
        <function-ref name="fired" scoped="" ref="0x2afd8db421e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8db40020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8db42ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8db3f590"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8db3f110"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8db42660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8db43390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8db40630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8db43860"/>
        <function-ref name="stop" scoped="" ref="0x2afd8db43d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8db30c10" loc="45:../../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8db30c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8db2b110"/>
        <function-ref name="fired" scoped="" ref="0x2afd8db2e6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8db2c4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8db2c020"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8db2ba10"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8db2b590"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8db2eb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8db2f860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8db2cab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8db2fd30"/>
        <function-ref name="stop" scoped="" ref="0x2afd8db2e220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2afd8db287a0" loc="46:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2afd8db287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2afd8db28b20"/>
        <function-ref name="fired" scoped="" ref="0x2afd8db28cb0"/>
        <function-ref name="disable" scoped="" ref="0x2afd8db28e40"/>
        <function-ref name="edge" scoped="" ref="0x2afd8db26020"/>
        <function-ref name="enable" scoped="" ref="0x2afd8db261b0"/>
        <function-ref name="getValue" scoped="" ref="0x2afd8db26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2afd8db29b60" loc="45:../../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2afd8db29b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2afd8db28020"/>
        <function-ref name="disable" scoped="" ref="0x2afd8db281b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2afd8db28340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2afd8db284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8db23a60" loc="92:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8db23a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8db23e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8db22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8db21770" loc="96:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8db21770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8db21b10"/>
        <function-ref name="configure" scoped="" ref="0x2afd8db21ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afd8db22270" loc="93:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db22270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8db225f0"/>
        <function-ref name="requested" scoped="" ref="0x2afd8db22780"/>
        <function-ref name="granted" scoped="" ref="0x2afd8db22910"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8db22aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8db22c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8db24ca0" loc="91:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8db24ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8db230a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8db23230"/>
        <function-ref name="request" scoped="" ref="0x2afd8db233c0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8db23550"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8db236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8db22e80" loc="94:../../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db22e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8db21220"/>
        <function-ref name="userId" scoped="" ref="0x2afd8db213b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2afd8e5e61b0" loc="44:../../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2afd8e5e61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2afd8e5e6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2afd8e5e67c0" loc="45:../../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2afd8e5e67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8e5e6b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8e5e6cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8e5e6e60"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8e5e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2afd8e5e3850" loc="55:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2afd8e5e3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2afd8e5e3bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e5e3d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2afd8e5e0590" loc="60:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2afd8e5e0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2afd8e5e0930"/>
        <function-ref name="configure" scoped="" ref="0x2afd8e5e0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2afd8e5e0d50" loc="61:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2afd8e5e0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2afd8e5df100"/>
        <function-ref name="isEmpty" scoped="" ref="0x2afd8e5df290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2afd8e5df420"/>
        <function-ref name="dequeue" scoped="" ref="0x2afd8e5df5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2afd8e5e2020" loc="56:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e5e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e5e23a0"/>
        <function-ref name="requested" scoped="" ref="0x2afd8e5e2530"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e5e26c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e5e2850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e5e29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2afd8e5df800" loc="62:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2afd8e5df800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2afd8e5dfb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2afd8e5dfd10"/>
        <function-ref name="led1On" scoped="" ref="0x2afd8e5de020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2afd8e5de1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2afd8e5de340"/>
        <function-ref name="get" scoped="" ref="0x2afd8e5de4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2afd8e5de660"/>
        <function-ref name="led0On" scoped="" ref="0x2afd8e5deca0"/>
        <function-ref name="set" scoped="" ref="0x2afd8e5de980"/>
        <function-ref name="led2On" scoped="" ref="0x2afd8e5de7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2afd8e5deb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2afd8e5e4970" loc="54:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2afd8e5e4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e5e4d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2afd8e5e3020"/>
        <function-ref name="request" scoped="" ref="0x2afd8e5e31b0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e5e3340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e5e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2afd8e5e2c30" loc="57:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e5e2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8e5e0020"/>
        <function-ref name="userId" scoped="" ref="0x2afd8e5e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2afd8e5dd020" loc="75:../../../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2afd8e5dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8e5dd3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8e5dd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2afd8db1da10" loc="69:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afd8db1da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8db1dd90"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8db83020"/>
        <function-ref name="start" scoped="" ref="0x2afd8db831b0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8db83340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2afd8db83590" loc="71:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afd8db83590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2afd8db83910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2afd8db83b60" loc="72:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8db83b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8db82020"/>
        <function-ref name="requested" scoped="" ref="0x2afd8db821b0"/>
        <function-ref name="granted" scoped="" ref="0x2afd8db82340"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8db824d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8db82660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afd8db828b0" loc="73:../../../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8db828b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8db82c30"/>
        <function-ref name="userId" scoped="" ref="0x2afd8db82dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2afd8e66b0f0" loc="61:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2afd8e66b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2afd8e66b470"/>
        <function-ref name="stopDone" scoped="" ref="0x2afd8e66b600"/>
        <function-ref name="start" scoped="" ref="0x2afd8e66b790"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e66b920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2afd8e66bb70" loc="63:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2afd8e66bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2afd8e66a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2afd8e669680" loc="78:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x2afd8e669680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8e669a00"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8e669b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2afd8e66a270" loc="64:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2afd8e66a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2afd8e66a5f0"/>
        <function-ref name="requested" scoped="" ref="0x2afd8e66a780"/>
        <function-ref name="granted" scoped="" ref="0x2afd8e66a910"/>
        <function-ref name="isOwner" scoped="" ref="0x2afd8e66aaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2afd8e66ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2afd8e669e60" loc="73:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x2afd8e669e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2afd8e668210"/>
        <function-ref name="runTask" scoped="" ref="0x2afd8e6683a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2afd8e66c970" loc="60:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2afd8e66c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2afd8e66ccf0"/>
        <function-ref name="stop" scoped="" ref="0x2afd8e66ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2afd8e66ae80" loc="65:../../../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2afd8e66ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2afd8e669220"/>
        <function-ref name="userId" scoped="" ref="0x2afd8e6693b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2afd8db75e40" loc="45:../../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2afd8db75e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2afd8c2469f0"/>
            <typename><typedef-ref name="TMilli" ref="0x2afd8c246d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2afd8db70390"/>
        <function-ref name="fired" scoped="" ref="0x2afd8db73970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2afd8db72720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2afd8db722a0"/>
        <function-ref name="getdt" scoped="" ref="0x2afd8db70c90"/>
        <function-ref name="gett0" scoped="" ref="0x2afd8db70810"/>
        <function-ref name="isRunning" scoped="" ref="0x2afd8db73df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2afd8db74a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2afd8db72d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2afd8db73020"/>
        <function-ref name="stop" scoped="" ref="0x2afd8db734f0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2afd8bda7740" loc="62:../../../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2afd8bda8350" loc="60:../../../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2afd8bdf15b0" loc="48:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2afd8bdd5870" loc="43:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2afd8bdd4e60" loc="47:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2afd8bdd5190" loc="42:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2afd8bdd4020" loc="45:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2afd8bdd7350" loc="40:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2afd8bdd7a30" loc="41:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2afd8bdd4740" loc="46:../../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2afd8ba30b70" loc="62:../../../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2afd8b9dac00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2afd8be3e500" loc="55:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2afd8be3e280" loc="55:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2afd8be2c9c0" loc="42:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afd8bde9180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afd8bde7020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2afd8be3ed70" loc="57:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2afd8be3dc80" loc="59:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2afd8be40b00" loc="47:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2afd8be3d4f0" loc="58:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2afd8be41190" loc="43:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2afd8be41920" loc="44:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2afd8be40390" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afd8bde9180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afd8bde7020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afd8be40110" loc="46:../../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2afd8bde9180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2afd8bde7020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2afd8be51560" loc="44:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2afd8be4ebc0" loc="79:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2afd8be4e940" loc="79:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2afd8be4d770" loc="86:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afd8be4d4f0" loc="86:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afd8be4e190" loc="68:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afd8be4f940" loc="63:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2afd8be4f020" loc="56:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2afd8be51c90" loc="56:../../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2afd8be3a890" loc="40:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2afd8be362a0" loc="41:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afd8be36020" loc="41:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2afd8be36c80" loc="42:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2afd8be36a00" loc="42:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2afd8be356a0" loc="43:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2afd8be35420" loc="43:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afd8be35d90" loc="45:../../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afd8be27120" loc="52:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2afd8be25a10" loc="55:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2afd8be25790" loc="55:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2afd8be27850" loc="53:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afd8be2b350" loc="45:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2afd8be25020" loc="54:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afd8be29270" loc="47:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2afd8be289e0" loc="51:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afd8be2bae0" loc="46:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2afd8be29980" loc="48:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2afd8be282e0" loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afd8be28060" loc="50:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2afd8be24450" loc="56:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2afd8be241d0" loc="56:../../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afd8be671f0" loc="39:../../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2afd8bd7e2b0" loc="76:../../../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2afd8bb70420" loc="52:../../../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2afd8b920020" loc="57:../../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2afd8b92b020" loc="72:../../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2afd8b920790" loc="65:../../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2afd8b932020" loc="67:../../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2afd8b932870" loc="75:../../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2afd8bfa1120" loc="61:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2afd8bfa18d0" loc="67:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2afd8bfa00e0" loc="72:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2afd8bf9f070" loc="83:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2afd8bf9d7d0" loc="100:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afd8bf9c020" loc="117:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2afd8bfa0870" loc="77:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afd8bf9cb90" loc="134:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afd8bf9c910" loc="134:../../../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2afd8bfa2970" loc="56:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2afd8bf9f850" loc="89:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2afd8bf9d020" loc="94:../../../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2afd8bf92730" loc="44:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2afd8bf92e60" loc="45:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2afd8bf94880" loc="42:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2afd8bf91cf0" loc="47:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afd8bf92020" loc="43:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2afd8bf915b0" loc="46:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afd8bf97a90" loc="40:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2afd8bf94190" loc="41:../../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2afd8bfd97c0" loc="78:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2afd8bfd8020" loc="80:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2afd8bfd4b10" loc="110:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afd8bfd4890" loc="110:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2afd8bfda020" loc="58:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2afd8bfd7020" loc="87:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2afd8bfd3490" loc="117:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2afd8bfd8760" loc="85:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2afd8bfd9020" loc="73:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2afd8bfd5770" loc="99:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2afd8bfda7c0" loc="66:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afd8bfb6020" loc="48:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2afd8bfd77a0" loc="92:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2afd8bfd4020" loc="101:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2afd8bfd5020" loc="94:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2afd8bfb6750" loc="53:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c243350" loc="53:../../../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c243350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2afd8c23c1f0" loc="136:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afd8c241a60" loc="83:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2afd8c23e820" loc="114:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c23e250" loc="114:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8c23e590" loc="114:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2afd8c240a60" loc="98:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2afd8c23b270" loc="151:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2afd8c23c980" loc="144:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2afd8c240270" loc="92:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2afd8c242020" loc="64:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afd8c243c40" loc="64:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2afd8c23d820" loc="129:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c23d250" loc="129:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8c23d590" loc="129:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2afd8c242ae0" loc="73:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afd8c242860" loc="73:../../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8c241350" loc="78:../../../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Frame" loc="44:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <short> &#10; The IEEE154Frame interface allows to access the content of a IEEE 802.15.4&#10; frame.</short>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x2afd8c2dfb40" loc="241:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="235:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the length of the MAC header.</short>
          <long>&#10; Returns the length of the MAC header.&#10;&#10; @param  frame   the frame &#10; @return         the length of the MAC header (in byte)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2df8c0" loc="241:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2afd8c2e3020" loc="189:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="183:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the sequence number of the frame.</short>
          <long>&#10; Returns the sequence number of the frame.&#10;&#10; @param frame     the frame&#10; @return          sequence number of the frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e4d30" loc="189:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressingFields" ref="0x2afd8c2e8330" loc="139:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Sets the addressing fields in the MAC header of a frame.</short>
          <long>&#10; Sets the addressing fields in the MAC header of a frame. The source &#10; PAN identifier and the source address will be set automatically, their&#10; values depend on the &#60;tt>SrcAddrMode&#60;/tt> parameter: if &#10; &#60;tt>SrcAddrMode&#60;/tt> is a short or extended address, then&#10; the current PIB attributes &#60;tt>macShortAddress&#60;/tt> or &#10; &#60;tt>aExtendedAddress&#60;/tt> and &#60;tt>macPANId&#60;/tt> are used.&#10;&#10; @param frame         the frame&#10; @param srcAddrMode   the source addressing mode&#10; @param dstAddrMode   the destination addressing mode&#10; @param dstPANID      the 16 bit PAN identifier of the destination&#10; @param dstAddr       individual device address of the destination as per&#10;                      the dstAddrMode&#10; @param security      the security options (NULL means security is&#10;                      disabled)&#10;                      &#10; @return          SUCCESS if the addressing fields where written,&#10;                  FAIL if an incorrect addressing mode was specified&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2ebc80" loc="139:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="SrcAddrMode" ref="0x2afd8c2ea060" loc="140:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DstAddrMode" ref="0x2afd8c2ea400" loc="141:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DstPANID" ref="0x2afd8c2ea7a0" loc="142:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="DstAddr" ref="0x2afd8c2eabc0" loc="143:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="security" ref="0x2afd8c2e8060" loc="144:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDstPANId" ref="0x2afd8c2eb2f0" loc="117:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="107:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Reads the destination PAN identifier of the frame.</short>
          <long>&#10; Reads the destination PAN identifier of the frame.&#10;&#10; @param PANID     a pointer to where the destination &#10;                  PAN identifier should be written&#10; @param frame     the frame&#10; @return          SUCCESS, if the destination PAN identifier &#10;                  is present and was copied to &#34;PANID&#34;, &#10;                  FAIL otherwise (PANID remains unmodified)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2ecc80" loc="117:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="PANID" ref="0x2afd8c2eb060" loc="117:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afd8c2e7160" loc="152:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="146:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns a pointer to the MAC payload portion of a frame.</short>
          <long>&#10; Returns a pointer to the MAC payload portion of a frame.&#10;&#10; @param frame     the frame&#10; @return          a pointer to the frame's payload &#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e8e70" loc="152:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTimestampValid" ref="0x2afd8c2e4530" loc="181:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="176:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Tells whether the timestamp is valid.</short>
          <long>&#10; Tells whether the timestamp is valid.&#10;&#10; @return          TRUE if timestamp is valid, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e42b0" loc="181:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStandardCompliantHeader" ref="0x2afd8c3102a0" loc="266:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="253:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Tells whether or not the frame has a standard compliant&#10; IEEE 802.15.4 header - this will only be relevant for frames &#10; received while in promiscuous mode, because then no filtering&#10; (except CRC check) was applied.</short>
          <long>&#10; Tells whether or not the frame has a standard compliant&#10; IEEE 802.15.4 header - this will only be relevant for frames &#10; received while in promiscuous mode, because then no filtering&#10; (except CRC check) was applied. Note: if this command returns&#10; FALSE, then all other commands in this interface (except&#10; &#60;tt>wasPromiscuousModeEnabled()&#60;/tt>) and the &#10; &#60;tt>IEEE154BeaconFrame&#60;/tt> interface return undefined values!&#10;&#10; @param  frame   the frame&#10; @return         TRUE if frame has a standard compliant header,&#10;                 FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c310020" loc="266:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDstAddr" ref="0x2afd8c2ec2b0" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="93:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Reads the destination address (to be interpreted&#10; as specified by the destination addressing mode) of the frame.</short>
          <long>&#10; Reads the destination address (to be interpreted&#10; as specified by the destination addressing mode) of the frame.&#10;&#10; @param frame     the frame&#10; @param address   a pointer to where the destination address &#10;                  will be written&#10; @return          SUCCESS, if the destination address is present &#10;                  and was written to &#34;address&#34;,&#10;                  FAIL otherwise (destination address &#10;                  remains unmodified)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2eebd0" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="address" ref="0x2afd8c2ec020" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2afd8c2f06b0" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="57:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Reads the source address (to be interpreted&#10; as specified by the source addressing mode) of the frame.</short>
          <long>&#10; Reads the source address (to be interpreted&#10; as specified by the source addressing mode) of the frame.&#10;&#10; @param frame     the frame&#10; @param address   a pointer to where the source address &#10;                  will be written&#10; @return          SUCCESS, if the source address is present &#10;                  and was written to &#34;address&#34;,&#10;                  FAIL otherwise (source address remains&#10;                  unmodified)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2f0020" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="address" ref="0x2afd8c2f0420" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddrMode" ref="0x2afd8c2f1670" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="47:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the source addressing mode of the frame.</short>
          <long>&#10; Returns the source addressing mode of the frame.&#10;&#10; @param frame     the frame&#10; @return          source addressing mode of the frame; either&#10;                  ADDR_MODE_NOT_PRESENT, ADDR_MODE_RESERVED,&#10;                  ADDR_MODE_SHORT_ADDRESS or ADDR_MODE_EXTENDED_ADDRESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2f13f0" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTimestamp" ref="0x2afd8c2e6800" loc="174:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="162:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short> &#10; Returns the point in time when the first bit (of the PHY preamble) of the&#10; frame was received or transmitted.</short>
          <long> &#10; Returns the point in time when the first bit (of the PHY preamble) of the&#10; frame was received or transmitted. Time is expressed in symbols as local&#10; time (which can also be accessed via the LocalTime&#60;T62500hz> interface&#10; provided by your platform, e.g.&#10; tos/platforms/telosb/mac/tkn154/timer/LocalTime62500hzC).  If&#10; &#60;tt>isTimestampValid()&#60;/tt> returns FALSE then the timestamp is not valid&#10; and must be ignored.&#10;&#10; @param frame     the frame &#10; @return          timestamp of the frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e6580" loc="174:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcPANId" ref="0x2afd8c2ef700" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="71:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Reads the source PAN identifier of the frame.</short>
          <long>&#10; Reads the source PAN identifier of the frame.&#10;&#10; @param frame     the frame&#10; @param PANID     a pointer to where the source PAN identifier &#10;                  will be written&#10; @return          SUCCESS, if the source PAN identifier is present &#10;                  and was written to &#34;PANID&#34;, &#10;                  FAIL otherwise (PANID remains unmodified)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2ef0d0" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="PANID" ref="0x2afd8c2ef470" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFrameType" ref="0x2afd8c2e1390" loc="224:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="214:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the type of the frame&#10; BEACON=0, DATA=1, ACK=2, COMMAND=3.</short>
          <long>&#10; Returns the type of the frame&#10; BEACON=0, DATA=1, ACK=2, COMMAND=3.&#10;&#10; Note: For beacon frames one can use the &#60;tt>IEEE154BeaconFrame&#60;/tt>&#10; interface to inspect additional fields of the frame.&#10;&#10; @param  frame   the frame&#10; @return         the type of the frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e1110" loc="224:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRSSI" ref="0x2afd8c2e27b0" loc="212:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="202:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the average RSSI (in dBm) of a received frame.</short>
          <long>&#10; Returns the average RSSI (in dBm) of a received frame. The &#10; IEEE 802.15.4-2006 standard does not specify that a radio&#10; must provide RSSI, so this command is optional: if a&#10; radio does not provide per-frame RSSI then this call will &#10; return a value of +127.&#10;&#10; @param frame     the frame&#10; @return          RSSI&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e2530" loc="212:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDstAddrMode" ref="0x2afd8c2ee2e0" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="83:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the destination addressing mode of the frame.</short>
          <long>&#10; Returns the destination addressing mode of the frame.&#10;&#10; @param frame     the frame&#10; @return          destination addressing mode of the frame; either&#10;                  ADDR_MODE_NOT_PRESENT, ADDR_MODE_RESERVED,&#10;                  ADDR_MODE_SHORT_ADDRESS or ADDR_MODE_EXTENDED_ADDRESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2ee060" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2afd8c2df020" loc="233:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="226:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns a pointer to the MAC header (i.e.</short>
          <long>&#10; Returns a pointer to the MAC header (i.e. to the first byte of &#10; the Frame Control field).&#10;&#10; @param frame     the frame&#10; @return          a pointer to the frame's header&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e1c20" loc="233:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayloadLength" ref="0x2afd8c2e7c80" loc="160:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="154:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the length of the MAC payload portion of the frame (in byte).</short>
          <long>&#10; Returns the length of the MAC payload portion of the frame (in byte). &#10;&#10; @param  frame   the frame &#10; @return         the length of the frame's payload (in byte)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e7a00" loc="160:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x2afd8c2e3b00" loc="200:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="191:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Returns the link quality level of a received frame, where&#10; &#34;link quality level&#34; is defined in Sect.</short>
          <long>&#10; Returns the link quality level of a received frame, where&#10; &#34;link quality level&#34; is defined in Sect. 6.9.8 of the &#10; IEEE 802.15.4-2006 standard. For the CC2420 radio it is&#10; identical with the LQI.&#10;&#10; @param frame     the frame&#10; @return          link quality level &#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2e3880" loc="200:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasPromiscuousModeEnabled" ref="0x2afd8c2de6a0" loc="251:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
        <documentation loc="243:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
          <short>&#10; Tells whether or not the frame was received while &#10; promiscuous mode was enabled.</short>
          <long>&#10; Tells whether or not the frame was received while &#10; promiscuous mode was enabled.&#10;&#10; @param  frame   the frame&#10; @return         TRUE if frame was received while in promiscuous&#10;                 mode, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Frame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2de420" loc="251:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154Frame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_GET" loc="48:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <short>&#10; This interface allows to read attribute values from the PHY/MAC PIB.</short>
        <long>&#10; This interface allows to read attribute values from the PHY/MAC PIB.&#10; Instead of passing the PIB attribute identifier, there is a separate&#10; command per attribute (and there are no confirm events). &#10;&#10; NOTE: for the attributes &#60;tt>macBeaconPayload&#60;/tt> (0x45) and&#10; &#60;tt>macBeaconPayloadLength &#60;/tt>(0x46) use the&#10; &#60;tt>IEEE154TxBeaconPayload&#60;/tt> interface; for promiscuous mode&#10; there is a separate (SplitControl) interface. &#10;</long>
      </documentation>
      <function command="" provided="0" name="macRxOnWhenIdle" ref="0x2afd8c2641f0" loc="126:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="125:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macRxOnWhenIdle (0x52) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macRxOnWhenIdle_t" ref="0x2afd8c220210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMinBE" ref="0x2afd8c267820" loc="117:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="116:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMinBE (0x4F) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMinBE_t" ref="0x2afd8c2236b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macSuperframeOrder" ref="0x2afd8c263640" loc="132:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="131:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macSuperframeOrder (0x54) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macSuperframeOrder_t" ref="0x2afd8c21f020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macAssociationPermit" ref="0x2afd8c26e020" loc="78:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="77:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macAssociationPermit (0x41) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macAssociationPermit_t" ref="0x2afd8c229930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macResponseWaitTime" ref="0x2afd8c290c80" loc="150:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="149:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macResponseWaitTime (0x5A) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macResponseWaitTime_t" ref="0x2afd8c221d70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macBeaconOrder" ref="0x2afd8c26c3e0" loc="93:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="92:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macBeaconOrder (0x47) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macBeaconOrder_t" ref="0x2afd8c227500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxFrameRetries" ref="0x2afd8c2903b0" loc="147:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="146:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMaxFrameRetries (0x59) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMaxFrameRetries_t" ref="0x2afd8c223280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macBattLifeExtPeriods" ref="0x2afd8c26da10" loc="87:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="86:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macBattLifeExtPeriods (0x44) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macBattLifeExtPeriods_t" ref="0x2afd8c2286c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCurrentPage" ref="0x2afd8c272390" loc="63:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="62:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyCurrentPage (0x04) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phyCurrentPage_t" ref="0x2afd8c22cd50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCCAMode" ref="0x2afd8c273af0" loc="60:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="59:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyCCAMode (0x03) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phyCCAMode_t" ref="0x2afd8c22c8e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macBattLifeExt" ref="0x2afd8c26d120" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="83:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macBattLifeExt (0x43) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macBattLifeExt_t" ref="0x2afd8c228210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macPANId" ref="0x2afd8c266070" loc="120:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="119:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macPANId (0x50) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_macPANId_t" ref="0x2afd8c221460"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCurrentChannel" ref="0x2afd8c274120" loc="51:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="50:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyCurrentChannel (0x00) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phyCurrentChannel_t" ref="0x2afd8c22daa0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyMaxFrameDuration" ref="0x2afd8c272c50" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyMaxFrameDuration (0x05) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_phyMaxFrameDuration_t" ref="0x2afd8c22a240"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxFrameTotalWaitTime" ref="0x2afd8c292ac0" loc="144:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="143:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMaxFrameTotalWaitTime (0x58) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="ieee154_macMaxFrameTotalWaitTime_t" ref="0x2afd8c224dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macTransactionPersistenceTime" ref="0x2afd8c262020" loc="135:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="134:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macTransactionPersistenceTime (0x55) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_macTransactionPersistenceTime_t" ref="0x2afd8c21fe70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMinSIFSPeriod" ref="0x2afd8c28da80" loc="165:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="164:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMinSIFSPeriod *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMinSIFSPeriod_t" ref="0x2afd8c221020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macShortAddress" ref="0x2afd8c264c60" loc="129:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="128:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macShortAddress (0x53) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_macShortAddress_t" ref="0x2afd8c220b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macSyncSymbolOffset" ref="0x2afd8c28f650" loc="153:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="152:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macSyncSymbolOffset (0x5B) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_macSyncSymbolOffset_t" ref="0x2afd8c21f4d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxBE" ref="0x2afd8c292190" loc="141:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="140:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMaxBE (0x57) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMaxBE_t" ref="0x2afd8c224450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macAssociatedPANCoord" ref="0x2afd8c262920" loc="138:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="137:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macAssociatedPANCoord (0x56) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macAssociatedPANCoord_t" ref="0x2afd8c2294b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macBeaconTxTime" ref="0x2afd8c26cc50" loc="96:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="95:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macBeaconTxTime (0x48) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="ieee154_macBeaconTxTime_t" ref="0x2afd8c227980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macAckWaitDuration" ref="0x2afd8c26f6a0" loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="74:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macAckWaitDuration (0x40) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macAckWaitDuration_t" ref="0x2afd8c229020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxCSMABackoffs" ref="0x2afd8c267020" loc="114:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="113:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMaxCSMABackoffs (0x4E) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMaxCSMABackoffs_t" ref="0x2afd8c2248e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phySymbolsPerOctet" ref="0x2afd8c271da0" loc="72:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="71:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phySymbolsPerOctet (0x07) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phySymbolsPerOctet_t" ref="0x2afd8c22ab40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macAutoRequest" ref="0x2afd8c26e890" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="80:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macAutoRequest (0x42) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macAutoRequest_t" ref="0x2afd8c229d80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macPromiscuousMode" ref="0x2afd8c266920" loc="123:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="122:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macPromiscuousMode (0x51) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macPromiscuousMode_t" ref="0x2afd8c2218d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macTimestampSupported" ref="0x2afd8c28e020" loc="156:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="155:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macTimestampSupported (0x5C) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macTimestampSupported_t" ref="0x2afd8c21f960"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyTransmitPower" ref="0x2afd8c2732d0" loc="57:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="56:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyTransmitPower (0x02) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phyTransmitPower_t" ref="0x2afd8c22c4a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phyChannelsSupported" ref="0x2afd8c274a00" loc="54:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="53:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phyChannelsSupported (0x01) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="ieee154_phyChannelsSupported_t" ref="0x2afd8c22c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macSecurityEnabled" ref="0x2afd8c28e8e0" loc="159:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="158:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macSecurityEnabled (0x5D) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macSecurityEnabled_t" ref="0x2afd8c220680"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macMinLIFSPeriod" ref="0x2afd8c28d1f0" loc="162:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="161:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macMinLIFSPeriod *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macMinLIFSPeriod_t" ref="0x2afd8c223b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macCoordShortAddress" ref="0x2afd8c2696a0" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="104:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macCoordShortAddress (0x4B) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_macCoordShortAddress_t" ref="0x2afd8c225770"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macCoordExtendedAddress" ref="0x2afd8c26bd70" loc="102:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="101:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macCoordExtendedAddress (0x4A) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="ieee154_macCoordExtendedAddress_t" ref="0x2afd8c2252c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="phySHRDuration" ref="0x2afd8c2714f0" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="68:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute phySHRDuration (0x06) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_phySHRDuration_t" ref="0x2afd8c22a6b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macDSN" ref="0x2afd8c269e70" loc="108:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="107:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macDSN (0x4C) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macDSN_t" ref="0x2afd8c225b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macGTSPermit" ref="0x2afd8c2686d0" loc="111:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="110:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macGTSPermit (0x4D) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macGTSPermit_t" ref="0x2afd8c224020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macPanCoordinator" ref="0x2afd8c28c350" loc="168:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="167:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return custom attribute macPanCoordinator *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macPanCoordinator_t" ref="0x2afd8c21d320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="macBSN" ref="0x2afd8c26b460" loc="99:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
        <documentation loc="98:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_GET.nc">
          <short> </short>
          <long> @return PIB attribute macBSN (0x49) *</long>
        </documentation>
        <interfacedef-ref qname="MLME_GET"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="ieee154_macBSN_t" ref="0x2afd8c227da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afd8c30c970" loc="65:../../../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afd8c30c6f0" loc="65:../../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2afd8c30aa10" loc="78:../../../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afd8c30a790" loc="78:../../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2afd8c306020" loc="126:../../../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afd8c307910" loc="126:../../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8c307c40" loc="126:../../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2afd8c307020" loc="106:../../../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2afd8c308020" loc="94:../../../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2afd8c3098f0" loc="94:../../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8c309c20" loc="94:../../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_ASSOCIATE" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
        <short> &#10; MLME-SAP association primitives define how a device becomes&#10; associated with a PAN.</short>
        <long> &#10; MLME-SAP association primitives define how a device becomes&#10; associated with a PAN. (IEEE 802.15.4-2006, Sect. 7.1.3)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c27ecd0" loc="121:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
        <documentation loc="112:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
          <short>&#10; Confirms an association attempt.</short>
          <long>&#10; Confirms an association attempt.&#10;&#10; @param AssocShortAddress The short device address allocated by the&#10;                          coordinator on successful association&#10; @param status          The status of the association attempt&#10; @param security        The security options, NULL means security is &#10;                        disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="AssocShortAddress" ref="0x2afd8c27e260" loc="122:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="status" ref="0x2afd8c27e5d0" loc="123:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="security" ref="0x2afd8c27ea30" loc="124:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="indication" ref="0x2afd8c282d10" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
        <documentation loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
          <short>&#10; Notification that a device has requested to associate with this PAN.</short>
          <long>&#10; Notification that a device has requested to associate with this PAN.&#10;&#10; @param DeviceAddress the 64-bit address of the requesting device&#10; @param CapabilityInformation Specifies the operational capabilities&#10;                              of the associating device&#10; @param security      The security options (NULL means security is &#10;                      disabled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><nx_struct-ref ref="0x2afd8c2096e0"/>
              <typename><typedef-ref name="ieee154_CapabilityInformation_t" ref="0x2afd8c209e70"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DeviceAddress" ref="0x2afd8c282110" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
          </variable>
          <variable name="CapabilityInformation" ref="0x2afd8c282610" loc="86:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-tag size="I:1" alignment="I:1"><nx_struct-ref ref="0x2afd8c2096e0"/>
              <typename><typedef-ref name="ieee154_CapabilityInformation_t" ref="0x2afd8c209e70"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c282a70" loc="87:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c2835b0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
        <documentation loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
          <short>&#10; Requests to associate with a PAN.</short>
          <long>&#10; Requests to associate with a PAN.&#10; &#10; @param LogicalChannel  The logical channel on which to attempt&#10;                        association&#10; @param ChannelPage     The channel page on which to attempt association&#10; @param CoordAddrMode   The coordinator addressing mode&#10; @param CoordPANID      The 16 bit PAN identifier of the coordinator&#10; @param CoordAddress    Individual device address of the coordinator as&#10;                        per the CoordAddrMode&#10; @param CapabilityInformation Specifies the operational capabilities&#10;                        of the associating device&#10; @param security        The security options (NULL means security is &#10;                        disabled)&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
            <type-tag size="I:1" alignment="I:1"><nx_struct-ref ref="0x2afd8c2096e0"/>
              <typename><typedef-ref name="ieee154_CapabilityInformation_t" ref="0x2afd8c209e70"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LogicalChannel" ref="0x2afd8c288950" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ChannelPage" ref="0x2afd8c288cf0" loc="67:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="CoordAddrMode" ref="0x2afd8c284110" loc="68:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="CoordPANID" ref="0x2afd8c2844c0" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="CoordAddress" ref="0x2afd8c2848d0" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
          <variable name="CapabilityInformation" ref="0x2afd8c284dd0" loc="71:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-tag size="I:1" alignment="I:1"><nx_struct-ref ref="0x2afd8c2096e0"/>
              <typename><typedef-ref name="ieee154_CapabilityInformation_t" ref="0x2afd8c209e70"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c2832d0" loc="72:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="response" ref="0x2afd8c280770" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
        <documentation loc="90:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
          <short>&#10; Sends a response to a device that requested to associate with this PAN.</short>
          <long>&#10; Sends a response to a device that requested to associate with this PAN.&#10;&#10; @param DeviceAddress     The 64-bit address of the device to respond to&#10; @param AssocShortAddress The short device address allocated by the&#10;                          coordinator on successful allocation.&#10; @param status          The status of the association attempt&#10; @param security        The security options (NULL means security is &#10;                        disabled)&#10;&#10; @return IEEE154_SUCCESS if the request succeeded and an indication event&#10;         will be signalled through the MLME_COMM_STATUS interface later,  &#10;         an appropriate error code otherwise (no MLME_COMM_STATUS.indication&#10;         event will be signalled in this case)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_association_status" ref="0x2afd8c20f9a0"/>
              <typename><typedef-ref name="ieee154_association_status_t" ref="0x2afd8c20e940"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DeviceAddress" ref="0x2afd8c281810" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
          </variable>
          <variable name="AssocShortAddress" ref="0x2afd8c281c00" loc="107:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="status" ref="0x2afd8c280060" loc="108:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_association_status" ref="0x2afd8c20f9a0"/>
              <typename><typedef-ref name="ieee154_association_status_t" ref="0x2afd8c20e940"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c2804c0" loc="109:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MCPS_DATA" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
      <function event="" provided="0" name="confirm" ref="0x2afd8c2f5e40" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
        <documentation loc="81:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
          <short>&#10; Reports the result of a request to transfer a frame to a peer&#10; SSCS entity.</short>
          <long>&#10; Reports the result of a request to transfer a frame to a peer&#10; SSCS entity.&#10;&#10; @param frame      The frame which was requested to be sent&#10; @param msduHandle The handle associated with the frame&#10; @param status     The status of the last MSDU transmission&#10; @param timestamp  Time of transmission (invalid if &#60;tt>status&#60;/tt> &#10;                   is not IEEE154_SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MCPS_DATA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2f5060" loc="92:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="msduHandle" ref="0x2afd8c2f5400" loc="93:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="status" ref="0x2afd8c2f57d0" loc="94:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
          <variable name="Timestamp" ref="0x2afd8c2f5b90" loc="95:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="indication" ref="0x2afd8c2f4ab0" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
        <documentation loc="98:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
          <short>&#10; Indicates the arrival of a frame.</short>
          <long>&#10; Indicates the arrival of a frame. Use the &#60;tt>IEEE154Frame&#60;/tt>&#10; interface to get the payload, source/destination addresses, DSN&#10; and other information associated with this frame.&#10; &#10; @return A frame buffer for the stack to use for the next received frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="MCPS_DATA"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2f47f0" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c2f6480" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
        <documentation loc="48:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
          <short>&#10; &#34;Requests to transfer a data SPDU (i.e., MSDU) from a local SSCS&#10; entity to a single peer SSCS entity.&#34; (IEEE 802.15.4-2006, Sec.</short>
          <long>&#10; &#34;Requests to transfer a data SPDU (i.e., MSDU) from a local SSCS&#10; entity to a single peer SSCS entity.&#34; (IEEE 802.15.4-2006, Sec.&#10; 7.1.1.1) &#10;&#10; The source/destination addressing mode, destination PAN&#10; identifier, destination address, the payload and (optionally) the&#10; security mode/key are part of the &#60;tt>frame&#60;/tt> and must have&#10; been set (through the &#60;tt>IEEE154Frame&#60;/tt> interface) before&#10; calling this command.&#10; &#10; If this command returns IEEE154_SUCCESS, then the confirm event&#10; will be signalled in the future; otherwise, the confirm event&#10; will not be signalled.&#10; &#10; @param frame         The frame to send&#10; @param payloadLen    The length of the frame payload&#10; @param msduHandle    Handle associated with the frame&#10; @param TxOptions     Bitwised OR transmission options&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded and only&#10;               then the &#60;tt>confirm()&#60;/tt> event will be signalled;&#10;               an appropriate error code otherwise &#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MCPS_DATA"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c2c56a0" loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payloadLen" ref="0x2afd8c2c5a40" loc="76:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="msduHandle" ref="0x2afd8c2c5de0" loc="77:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="TxOptions" ref="0x2afd8c2f61d0" loc="78:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_DATA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_SET" loc="49:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
      <documentation loc="37:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <short> &#10; This interface allows to set attribute values in the PHY/MAC PIB.</short>
        <long> &#10; This interface allows to set attribute values in the PHY/MAC PIB.&#10; Instead of passing the PIB attribute identifier, there is a separate&#10; command per attribute (and there are no confirm events). &#10;&#10; NOTE: for the attributes &#60;tt>macBeaconPayload&#60;/tt> (0x45) and&#10; &#60;tt>macBeaconPayloadLength&#60;/tt> (0x46) use the&#10; &#60;tt>IEEE154TxBeaconPayload&#60;/tt> interface; for promiscuous mode&#10; there is a separate (SplitControl) interface. &#10;</long>
      </documentation>
      <function command="" provided="0" name="macRxOnWhenIdle" ref="0x2afd8c251670" loc="146:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="143:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macRxOnWhenIdle (0x52) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macRxOnWhenIdle_t" ref="0x2afd8c220210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c2513f0" loc="146:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macRxOnWhenIdle_t" ref="0x2afd8c220210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macMinBE" ref="0x2afd8c254e10" loc="133:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="130:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macMinBE (0x4F)&#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMinBE_t" ref="0x2afd8c2236b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c254b90" loc="133:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMinBE_t" ref="0x2afd8c2236b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macAssociationPermit" ref="0x2afd8c25d540" loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="72:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macAssociationPermit (0x41) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAssociationPermit_t" ref="0x2afd8c229930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25d2c0" loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAssociationPermit_t" ref="0x2afd8c229930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macResponseWaitTime" ref="0x2afd8c24a020" loc="181:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="178:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macResponseWaitTime (0x5A) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macResponseWaitTime_t" ref="0x2afd8c221d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24bc60" loc="181:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macResponseWaitTime_t" ref="0x2afd8c221d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macBeaconOrder" ref="0x2afd8c25a740" loc="98:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="95:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macBeaconOrder (0x47) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBeaconOrder_t" ref="0x2afd8c227500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25a4c0" loc="98:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBeaconOrder_t" ref="0x2afd8c227500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxFrameRetries" ref="0x2afd8c24b2a0" loc="176:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="173:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macMaxFrameRetries (0x59) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxFrameRetries_t" ref="0x2afd8c223280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24b020" loc="176:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxFrameRetries_t" ref="0x2afd8c223280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macBattLifeExtPeriods" ref="0x2afd8c25bb10" loc="90:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="87:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macBattLifeExtPeriods (0x44) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBattLifeExtPeriods_t" ref="0x2afd8c2286c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25b890" loc="90:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBattLifeExtPeriods_t" ref="0x2afd8c2286c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCurrentPage" ref="0x2afd8c25f7d0" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="67:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for phyCurrentPage (0x04) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCurrentPage_t" ref="0x2afd8c22cd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25f550" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCurrentPage_t" ref="0x2afd8c22cd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCCAMode" ref="0x2afd8c260bd0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="62:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for phyCCAMode (0x03) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCCAMode_t" ref="0x2afd8c22c8e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c260950" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCCAMode_t" ref="0x2afd8c22c8e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macBattLifeExt" ref="0x2afd8c25ce80" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="82:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macBattLifeExt (0x43) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBattLifeExt_t" ref="0x2afd8c228210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25cc00" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBattLifeExt_t" ref="0x2afd8c228210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macPANId" ref="0x2afd8c2529f0" loc="138:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="135:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macPANId (0x50) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macPANId_t" ref="0x2afd8c221460"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c252770" loc="138:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macPANId_t" ref="0x2afd8c221460"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="phyCurrentChannel" ref="0x2afd8c261390" loc="54:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="51:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for phyCurrentChannel (0x00)&#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCurrentChannel_t" ref="0x2afd8c22daa0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c261110" loc="54:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyCurrentChannel_t" ref="0x2afd8c22daa0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxFrameTotalWaitTime" ref="0x2afd8c24c570" loc="171:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="168:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macMaxFrameTotalWaitTime (0x58) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="ieee154_macMaxFrameTotalWaitTime_t" ref="0x2afd8c224dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24c2f0" loc="171:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="ieee154_macMaxFrameTotalWaitTime_t" ref="0x2afd8c224dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macTransactionPersistenceTime" ref="0x2afd8c24f020" loc="156:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="153:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macTransactionPersistenceTime (0x55) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macTransactionPersistenceTime_t" ref="0x2afd8c21fe70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c250d30" loc="156:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macTransactionPersistenceTime_t" ref="0x2afd8c21fe70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macShortAddress" ref="0x2afd8c2502a0" loc="151:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="148:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macShortAddress (0x53) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macShortAddress_t" ref="0x2afd8c220b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c250020" loc="151:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macShortAddress_t" ref="0x2afd8c220b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxBE" ref="0x2afd8c24d850" loc="166:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="163:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macMaxBE (0x57) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxBE_t" ref="0x2afd8c224450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24d5d0" loc="166:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxBE_t" ref="0x2afd8c224450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macAssociatedPANCoord" ref="0x2afd8c24fca0" loc="161:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="158:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macAssociatedPANCoord (0x56) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAssociatedPANCoord_t" ref="0x2afd8c2294b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24fa20" loc="161:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAssociatedPANCoord_t" ref="0x2afd8c2294b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macAutoRequest" ref="0x2afd8c25c2a0" loc="80:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="77:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macAutoRequest (0x42) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAutoRequest_t" ref="0x2afd8c229d80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c25c020" loc="80:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macAutoRequest_t" ref="0x2afd8c229d80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macMaxCSMABackoffs" ref="0x2afd8c2542a0" loc="128:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="125:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macMaxCSMABackoffs (0x4E) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxCSMABackoffs_t" ref="0x2afd8c2248e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c254020" loc="128:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macMaxCSMABackoffs_t" ref="0x2afd8c2248e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macSecurityEnabled" ref="0x2afd8c24ae50" loc="186:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="183:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macSecurityEnabled (0x5D) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macSecurityEnabled_t" ref="0x2afd8c220680"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c24abd0" loc="186:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macSecurityEnabled_t" ref="0x2afd8c220680"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="phyTransmitPower" ref="0x2afd8c260020" loc="60:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="56:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for phyTransmitPower (0x02)&#10;              (2 MSBs are ignored) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyTransmitPower_t" ref="0x2afd8c22c4a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c261d20" loc="60:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_phyTransmitPower_t" ref="0x2afd8c22c4a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macCoordShortAddress" ref="0x2afd8c257c80" loc="113:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="110:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macCoordShortAddress (0x4B) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macCoordShortAddress_t" ref="0x2afd8c225770"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c257a00" loc="113:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_macCoordShortAddress_t" ref="0x2afd8c225770"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macCoordExtendedAddress" ref="0x2afd8c257020" loc="108:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macCoordExtendedAddress (0x4A) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="ieee154_macCoordExtendedAddress_t" ref="0x2afd8c2252c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c259cf0" loc="108:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="ieee154_macCoordExtendedAddress_t" ref="0x2afd8c2252c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macGTSPermit" ref="0x2afd8c255570" loc="123:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="120:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macGTSPermit (0x4D) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macGTSPermit_t" ref="0x2afd8c224020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c2552f0" loc="123:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macGTSPermit_t" ref="0x2afd8c224020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macDSN" ref="0x2afd8c256820" loc="118:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="115:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macDSN (0x4C) &#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macDSN_t" ref="0x2afd8c225b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c2565a0" loc="118:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macDSN_t" ref="0x2afd8c225b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="macBSN" ref="0x2afd8c2592e0" loc="103:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
        <documentation loc="100:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
          <short> </short>
          <long> @param value new PIB attribute value for macBSN (0x49)&#10;  @returns IEEE154_SUCCESS if PIB attribute was updated, INVALID_PARAMETER if &#10;           parameter value is out of valid range and PIB was not updated *</long>
        </documentation>
        <interfacedef-ref qname="MLME_SET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBSN_t" ref="0x2afd8c227da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2afd8c259060" loc="103:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ieee154_macBSN_t" ref="0x2afd8c227da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afd8c30e8f0" loc="49:../../../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c30e8f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2afd8c3021f0" loc="55:../../../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2afd8c301020" loc="63:../../../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c30e8f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8c302970" loc="63:../../../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2afd8c302c90" loc="63:../../../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c30e8f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_RESET" loc="42:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
        <short> &#10; MLME-SAP reset primitives specify how to reset the MAC sublayer to&#10; its default values.</short>
        <long> &#10; MLME-SAP reset primitives specify how to reset the MAC sublayer to&#10; its default values. (IEEE 802.15.4-2006, Sect. 7.1.9)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c233820" loc="78:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
        <documentation loc="73:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
          <short>&#10; Reports the results of the reset operation&#10;&#10; </short>
          <long>&#10; Reports the results of the reset operation&#10;&#10; @param status The status of the reset operation&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_RESET"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c2335a0" loc="79:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c2348c0" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
        <documentation loc="44:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
          <short>&#10; Allows the next higher layer to request that the MLME performs a&#10; reset operation.</short>
          <long>&#10; Allows the next higher layer to request that the MLME performs a&#10; reset operation. This command initializes the MAC and must be &#10; called at least once before the MAC can be used.&#10;&#10; Two things are important:&#10; (1) This command will fail while promiscuous mode is enabled &#10; (promiscuous mode is controlled through a separate SplitControl &#10; interface). (2) While the MLME_RESET.confirm is pending the next&#10; higher layer MUST NOT call any MAC commands; if there are any&#10; other pending request the MAC will signal their corresponding confirm &#10; events before MLME_RESET.confirm is signalled (with a status code of&#10; IEEE154_TRANSACTION_OVERFLOW).&#10; &#10; @param SetDefaultPIB If TRUE, the MAC sublayer is reset and all MAC PIB&#10;                      attributes are set to their default values.  If&#10;                      FALSE, the MAC sublayer is reset but all MAC PIB&#10;                      attributes retain their values prior to the&#10;                      generation of the reset primitive.&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10;                      &#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_RESET"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SetDefaultPIB" ref="0x2afd8c234640" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RESET.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c32bc40" loc="53:../../../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c32bc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afd8c35b5a0" loc="61:../../../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c3565d0" loc="56:../../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c3565d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afd8c356810" loc="56:../../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2afd8c351390" loc="109:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afd8c3533b0" loc="78:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2afd8c3529d0" loc="103:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c352400" loc="103:../../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          </variable>
          <variable name="dt" ref="0x2afd8c352740" loc="103:../../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2afd8c353b90" loc="88:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2afd8c351b80" loc="116:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afd8c355390" loc="66:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afd8c355110" loc="66:../../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c356810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8c355bc0" loc="73:../../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2afd8c3be4f0" loc="57:../../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2afd8c3be4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2afd8c3be730" loc="57:../../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c3be730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afd8c3bd070" loc="64:../../../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2afd8c3be730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2afd8c3bc190" loc="76:../../../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2afd8c3bd8f0" loc="71:../../../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2afd8c3bc8f0" loc="82:../../../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_RX_ENABLE" loc="44:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
      <documentation loc="37:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
        <short> &#10; MLME-SAP receiver state primitives define how a device can enable&#10; or disable the receiver at a given time.</short>
        <long> &#10; MLME-SAP receiver state primitives define how a device can enable&#10; or disable the receiver at a given time. (IEEE 802.15.4-2006, Sect.&#10; 7.1.10)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c4e74e0" loc="75:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
        <documentation loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
          <short>&#10; Reports the results of the attempt to enable the receiver&#10;&#10; </short>
          <long>&#10; Reports the results of the attempt to enable the receiver&#10;&#10; @param status The status of the receiver enable request&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_RX_ENABLE"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c4e7260" loc="76:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c4e86a0" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
        <documentation loc="46:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
          <short>&#10; Allows the next higher layer to request that the receiver is&#10; enabled for a finite period of time&#10; &#10; </short>
          <long>&#10; Allows the next higher layer to request that the receiver is&#10; enabled for a finite period of time&#10; &#10; @param DeferPermit TRUE if the receiver enable can be deferred until&#10;                    during the next superframe if the requested time has&#10;                    already passed&#10; @param RxOnTime The number of symbols from the start of the superframe &#10;                 before the receiver is to be enabled.  The precision &#10;                 of this value is a minimum of 20 bits.  This parameter &#10;                 is ignored for nonbeacon-enabled PANs&#10; @param RxOnDuration The number of symbols for which the receiver &#10;                     is to be enabled&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_RX_ENABLE"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DeferPermit" ref="0x2afd8c4f3ba0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="RxOnTime" ref="0x2afd8c4e8020" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="RxOnDuration" ref="0x2afd8c4e8400" loc="67:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_RX_ENABLE.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afd8c52f2b0" loc="49:../../../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c52f2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afd8c52fb50" loc="55:../../../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c52f2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_DISASSOCIATE" loc="42:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
        <short> &#10; The MLME-SAP disassociation primitives define how a device can&#10; disassociate from a PAN.</short>
        <long> &#10; The MLME-SAP disassociation primitives define how a device can&#10; disassociate from a PAN. (IEEE 802.15.4-2006, Sect. 7.1.4)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c4f83c0" loc="101:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
        <documentation loc="87:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
          <short>&#10; Confirmsn a disassociation attempt.</short>
          <long>&#10; Confirmsn a disassociation attempt.&#10;&#10; @param status The status of the disassociation attempt&#10; @param DeviceAddrMode The addressing mode of the device that has either&#10;                       requested disassociation or been instructed to&#10;                       disassociate by its coordinator.&#10; @param DevicePANID The PAN identifier of the device that has either &#10;                    requested disassociation or been instructed to &#10;                    disassociate by its coordinator.&#10; @param DeviceAddress The address of the device that has either requested &#10;                       disassociation or been instructed to disassociate &#10;                       by its coordinator.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c4f9520" loc="102:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
          <variable name="DeviceAddrMode" ref="0x2afd8c4f98e0" loc="103:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DevicePANID" ref="0x2afd8c4f9c90" loc="104:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="DeviceAddress" ref="0x2afd8c4f8110" loc="105:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="indication" ref="0x2afd8c4fac00" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
        <documentation loc="73:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
          <short>&#10; Signals that a device has requested disassociation from this PAN.</short>
          <long>&#10; Signals that a device has requested disassociation from this PAN.&#10;&#10; @param DeviceAddress the 64-bit address of the requesting device&#10; @param DisassociateReason Reason for the disassociation&#10; @param security      The security options (NULL means security is &#10;                      disabled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_disassociation_reason" ref="0x2afd8c20ed60"/>
              <typename><typedef-ref name="ieee154_disassociation_reason_t" ref="0x2afd8c20db30"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DeviceAddress" ref="0x2afd8c4fa020" loc="82:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
          </variable>
          <variable name="DisassociateReason" ref="0x2afd8c4fa500" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_disassociation_reason" ref="0x2afd8c20ed60"/>
              <typename><typedef-ref name="ieee154_disassociation_reason_t" ref="0x2afd8c20db30"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c4fa960" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c4fc4a0" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
        <documentation loc="44:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
          <short>&#10; Requests disassociation from a PAN.</short>
          <long>&#10; Requests disassociation from a PAN.&#10; &#10; @param DeviceAddrMode The addressing mode of the device to which to send &#10;                       the disassociation notification command.&#10; @param DevicePANID The PAN identifier of the device to which to send the&#10;                    disassociation notification command.&#10; @param DeviceAddress The address of the device to which to send the&#10;                      disassociation notification command&#10; @param DisassociateReason The reason for the disassociation&#10; @param TxIndirect TRUE if disassociation notification command is to be sent&#10;                   indirectly&#10; @param security   The security options (NULL means security is &#10;                   disabled)&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_DISASSOCIATE"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_disassociation_reason" ref="0x2afd8c20ed60"/>
              <typename><typedef-ref name="ieee154_disassociation_reason_t" ref="0x2afd8c20db30"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DeviceAddrMode" ref="0x2afd8c4cacb0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DevicePANID" ref="0x2afd8c4fd0d0" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="DeviceAddress" ref="0x2afd8c4fd4f0" loc="67:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
          <variable name="DisassociateReason" ref="0x2afd8c4fd9d0" loc="68:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_disassociation_reason" ref="0x2afd8c20ed60"/>
              <typename><typedef-ref name="ieee154_disassociation_reason_t" ref="0x2afd8c20db30"/></typename>
            </type-tag>
          </variable>
          <variable name="TxIndirect" ref="0x2afd8c4fdd50" loc="69:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="security" ref="0x2afd8c4fc1d0" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_DISASSOCIATE.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_START" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
        <short> &#10; MLME-SAP start primitives define how an FFD can request to start&#10; using a new superframe configuration in order to initiate a PAN,&#10; begin transmitting beacons on an already existing PAN, thus&#10; facilitating device discovery, or to stop transmitting beacons.</short>
        <long> &#10; MLME-SAP start primitives define how an FFD can request to start&#10; using a new superframe configuration in order to initiate a PAN,&#10; begin transmitting beacons on an already existing PAN, thus&#10; facilitating device discovery, or to stop transmitting beacons.&#10; (IEEE 802.15.4-2006, Sect. 7.1.14)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c5116f0" loc="111:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
        <documentation loc="103:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
          <short>&#10; Signalled in response to a successful request.</short>
          <long>&#10; Signalled in response to a successful request.&#10; Reports the results of the attempt to start using a new superframe&#10; configuration&#10;&#10; @param status The result of the attempt to start using an &#10;               updated superframe configuration&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_START"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c511470" loc="112:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c512c80" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
        <documentation loc="47:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
          <short>&#10; Requests to start using a new superframe configuration.</short>
          <long>&#10; Requests to start using a new superframe configuration.&#10; &#10; @param PANId The PAN identifier to be used by the device&#10; @param LogicalChannel The logical channel on which to start transmitting&#10;                       beacons&#10; @param ChannelPage The channel page on which to begin using the new &#10;                    superframe configuration.&#10; @param StartTime The time at which to begin transmitting beacons. If this&#10;                  parameter is equal to 0x000000, beacon transmissions &#10;                  will begin immediately. Otherwise, the specified time is&#10;                  relative to the received beacon of the coordinator with&#10;                  which the device synchronizes.&#10;                  This parameter is ignored if either the beaconOrder &#10;                  parameter has a value of 15 or the panCoordinator&#10;                  parameter is TRUE.The time is specified in symbols and&#10;                  is rounded to a backoff slot boundary. This is a 24-bit&#10;                  value, and the precision of this value shall be a&#10;                  minimum of 20 bits, with the lowest 4 bits being the &#10;                  least significant.&#10; @param BeaconOrder The beacon order of the superframe&#10; @param SuperframeOrder The superframe order of the superframe&#10; @param PanCoordinator If TRUE, the device will become the PAN coordinator&#10;                       of a new PAN.  If FALSE, the device will begin&#10;                       transmitting beacons on the PAN with which it &#10;                       is associated&#10; @param BatteryLifeExtension If TRUE, the receiver of the beaconing&#10;                             device is disabled after the IFS period&#10; @param CoordRealignment TRUE if a coordinator realignment command is to&#10;                         be transmitted prior to changing the superframe&#10;                         configuration&#10; @param coordRealignSecurity The security options for the coordinator&#10;                         realignment command (NULL means security&#10;                         is disabled)&#10; @param beaconSecurity The security options for beacon frames&#10;                         (NULL means security is disabled)&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_START"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PANId" ref="0x2afd8c515110" loc="90:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="LogicalChannel" ref="0x2afd8c5154d0" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ChannelPage" ref="0x2afd8c515870" loc="92:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="StartTime" ref="0x2afd8c515c10" loc="93:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="BeaconOrder" ref="0x2afd8c513020" loc="94:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="SuperframeOrder" ref="0x2afd8c5133f0" loc="95:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="PanCoordinator" ref="0x2afd8c513790" loc="96:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="BatteryLifeExtension" ref="0x2afd8c513b70" loc="97:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="CoordRealignment" ref="0x2afd8c512020" loc="98:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="coordRealignSecurity" ref="0x2afd8c5124d0" loc="99:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="beaconSecurity" ref="0x2afd8c512960" loc="100:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_START.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154TxBeaconPayload" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <short> &#10; The IEEE154TxBeaconPayload interface allows to access the payload portion of&#10; the beacon frame that is periodically transmitted by a coordinator in a&#10; beacon-enabled PAN.</short>
        <long> &#10; The IEEE154TxBeaconPayload interface allows to access the payload portion of&#10; the beacon frame that is periodically transmitted by a coordinator in a&#10; beacon-enabled PAN. This interface replaces the MLME-SET command for the PIB&#10; attribute values 0x45 (macBeaconPayload) and 0x46 (macBeaconPayloadLength).&#10;</long>
      </documentation>
      <function command="" provided="0" name="getBeaconPayload" ref="0x2afd8c53b1d0" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="76:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short>&#10; Returns a pointer to the current beacon payload.</short>
          <long>&#10; Returns a pointer to the current beacon payload.&#10; &#10; @return the current beacon payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="modifyBeaconPayloadDone" ref="0x2afd8c5372c0" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="108:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short>&#10; Signalled in response to a &#60;tt>modifyBeaconPayload()&#60;/tt> request.</short>
          <long>&#10; Signalled in response to a &#60;tt>modifyBeaconPayload()&#60;/tt> request.&#10; Indicates that the beacon payload has been updated. &#10; &#10; @param offset        the &#60;tt>offset&#60;/tt> passed in the &#10;                      &#60;tt>modifyBeaconPayload()&#60;/tt> command&#10; @param buffer        the &#60;tt>buffer&#60;/tt> passed in the &#10;                      &#60;tt>modifyBeaconPayload()&#60;/tt> command&#10; @param bufferLength  the &#60;tt>bufferLength&#60;/tt> passed in the &#10;                      &#60;tt>modifyBeaconPayload()&#60;/tt> command&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afd8c5388c0" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x2afd8c538c00" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="bufferLength" ref="0x2afd8c537020" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBeaconPayload" ref="0x2afd8c53d730" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="47:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short> &#10; Sets the beacon payload portion for all subsequently transmitted beacons.</short>
          <long> &#10; Sets the beacon payload portion for all subsequently transmitted beacons.&#10; This command replaces the MLME-SET command for the PIB attribute values&#10; 0x45 (macBeaconPayload) and 0x46 (macBeaconPayloadLength). The&#10; &#60;tt>setBeaconPayloadDone()&#60;/tt> event will be signalled when the &#10; beacon payload has been set -- until then &#60;tt>beaconPayload&#60;/tt> must &#10; not be modified.&#10;&#10; @param beaconPayload   the new beacon payload&#10; @param length          the length of the new beacon payload (in byte)&#10;&#10; @return EBUSY if another transaction is pending, ESIZE if length is too big, &#10; SUCCESS otherwise (and only then the &#60;tt>setBeaconPayloadDone&#60;/tt> event &#10; will be signalled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="beaconPayload" ref="0x2afd8c53d150" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8c53d4a0" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToTransmit" ref="0x2afd8c537c30" loc="131:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="121:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short> &#10; Indicates that a beacon frame will be transmitted &#34;soon&#34; and now is a good&#10; time to update the beacon payload (if desired).</short>
          <long> &#10; Indicates that a beacon frame will be transmitted &#34;soon&#34; and now is a good&#10; time to update the beacon payload (if desired).&#10;&#10; The usual policy is that (1) this event is signalled before every beacon&#10; transmission, and (2) that a subsequent call to &#60;tt>setPayload&#60;/tt>&#10; will still update the beacon payload portion of this beacon. However, &#10; because of tight timing constraints in beacon-enabled mode neither can be&#10; guaranteed!&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setBeaconPayloadDone" ref="0x2afd8c53c7c0" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="64:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short>&#10; Signalled in response to a &#60;tt>setBeaconPayload()&#60;/tt> request.</short>
          <long>&#10; Signalled in response to a &#60;tt>setBeaconPayload()&#60;/tt> request.&#10; Indicates that the beacon payload has been copied and returns the&#10; ownership of the buffer to the next higher layer. &#10; &#10; @param beaconPayload   the &#60;tt>beaconPayload&#60;/tt> passed in the &#10;                        &#60;tt>setBeaconPayload()&#60;/tt> command&#10; @param length          the &#60;tt>length&#60;/tt> passed in the &#10;                        &#60;tt>setBeaconPayload()&#60;/tt> command&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="beaconPayload" ref="0x2afd8c53c1e0" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8c53c530" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="beaconTransmitted" ref="0x2afd8c5365d0" loc="138:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="133:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short> &#10; Indicates that a beacon frame has been transmitted (the &#10; &#60;tt>getBeaconPayload&#60;/tt> command can be used to inspect the&#10; beacon payload).</short>
          <long> &#10; Indicates that a beacon frame has been transmitted (the &#10; &#60;tt>getBeaconPayload&#60;/tt> command can be used to inspect the&#10; beacon payload).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modifyBeaconPayload" ref="0x2afd8c53ac10" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="90:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short>&#10; Replaces (overwrites) a portion of the current beacon payload.</short>
          <long>&#10; Replaces (overwrites) a portion of the current beacon payload. Whenever&#10; possible, to minimize overhead, the next higher layer should prefer this&#10; command over the &#60;tt>setBeaconPayload()&#60;/tt> command.  The&#10; &#60;tt>modifyBeaconPayloadDone()&#60;/tt> event will be signalled when the beacon&#10; payload has been updated -- until then &#60;tt>buffer&#60;/tt> must not be&#10; modified.&#10;&#10; @param offset      offset into the current beacon payload&#10; @param buffer      the buffer to be written &#10; @param length      the length of the buffer&#10;&#10; @return EBUSY if another transaction is pending, ESIZE if offset+length is&#10; too big, SUCCESS otherwise (and only then the&#10; &#60;tt>modifyBeaconPayloadDone&#60;/tt> event will be signalled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afd8c53a2a0" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x2afd8c53a5e0" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="bufferLength" ref="0x2afd8c53a970" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBeaconPayloadLength" ref="0x2afd8c53ba30" loc="88:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
        <documentation loc="83:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154TxBeaconPayload.nc">
          <short>&#10; Returns the length of the current beacon payload (in byte).</short>
          <long>&#10; Returns the length of the current beacon payload (in byte). &#10; &#10; @return length of the current beacon payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154TxBeaconPayload"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2afd8c533520" loc="113:../../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afd8c5332a0" loc="113:../../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2afd8c531ab0" loc="138:../../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afd8c531830" loc="138:../../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afd8c5348a0" loc="104:../../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8c533d70" loc="130:../../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timestamp" loc="33:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
      <function command="" provided="0" name="modifyMACPayload" ref="0x2afd8c5582d0" loc="83:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
        <documentation loc="69:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
          <short>&#10; Modify (overwrite) the contents of the MAC payload.</short>
          <long>&#10; Modify (overwrite) the contents of the MAC payload. This command must only&#10; be called in an &#60;code>transmittedSFD()&#60;\code> eventhandler, which should&#10; return fast. Note: the smaller the offset, the faster the&#10; &#60;code>transmittedSFD()&#60;\code> eventhandler must be finished (offset of&#10; zero might not work), because you are modifying a packet, whose first &#10; bytes have already been transmitted.&#10;&#10; @param token   the token signalled by &#60;code>transmittedSFD()&#60;\code>&#10; @param offset  the offset in the frame's payload to start modifying; &#10;                an offset of zero means the first byte of the MAC payload field&#10; @param buf     data to write&#10; @param len     number of bytes to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timestamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="token" ref="0x2afd8c559540" loc="83:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x2afd8c559890" loc="83:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2afd8c559c00" loc="83:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8c558020" loc="83:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmissionStarted" ref="0x2afd8c521d80" loc="49:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
        <documentation loc="35:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
          <short>&#10; The transmission of a packet has started (the PHY preamble is being &#10; transmitted).</short>
          <long>&#10; The transmission of a packet has started (the PHY preamble is being &#10; transmitted).&#10; Within the event handler the &#60;code>modifyPayload()&#60;\code> command can &#10; be called to modify the contents of the frame's payload.&#10;&#10; @param frameType     the type of frame (BEACON=0, DATA=1, ACK=2, COMMAND=3)&#10; @param msduHandle    for DATA frames the handle associated with the MSDU,&#10;                      otherwise undefined&#10; @param payload       the MAC payload (e.g. in a DATA frame this is the msdu,&#10;                      in a BEACON frame this is the first byte of the SFSpec)&#10; @param token         a token to be used as parameter for the&#10;                      &#60;code>modifyPayload()&#60;\code> command&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timestamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frameType" ref="0x2afd8c521060" loc="49:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="msduHandle" ref="0x2afd8c5213e0" loc="49:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x2afd8c521780" loc="49:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="token" ref="0x2afd8c521ad0" loc="49:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmittedSFD" ref="0x2afd8c55a9d0" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
        <documentation loc="51:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
          <short>&#10; The Start-of-Frame Delimiter of an outgoing frame has been transmitted.</short>
          <long>&#10; The Start-of-Frame Delimiter of an outgoing frame has been transmitted.&#10; Within the event handler the &#60;code>modifyPayload()&#60;\code> command may&#10; be called to modify the contents of the frame's payload.&#10;&#10; @param time          the time when the SFD was transmitted, expressed&#10;                      in 15.4 symbols as determined by a call to a T62500hz&#10;                      Alarm/Timer.getNow()&#10; @param frameType     the type of frame (BEACON=0, DATA=1, ACK=2, COMMAND=3)&#10; @param msduHandle    for DATA frames the handle associated with the MSDU,&#10;                      otherwise undefined&#10; @param payload       the MAC payload (e.g. in a DATA frame this is the msdu,&#10;                      in a BEACON frame this is the first byte of the SFSpec)&#10; @param token         a token to be used as parameter for the&#10;                      &#60;code>modifyPayload()&#60;\code> command&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timestamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afd8c55b8a0" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="frameType" ref="0x2afd8c55bc10" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="msduHandle" ref="0x2afd8c55a020" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x2afd8c55a3c0" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="token" ref="0x2afd8c55a710" loc="67:../../../../../tos/chips/cc2420_tkn154/Timestamp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_POLL" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
        <short> &#10; MLME-SAP polling primitives define how to request data from a&#10; coordinator.</short>
        <long> &#10; MLME-SAP polling primitives define how to request data from a&#10; coordinator. (IEEE 802.15.4-2006, Sect. 7.1.16)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c4ecd20" loc="73:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
        <documentation loc="68:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
          <short>&#10; Reports the results of a request to poll the coordinator for data&#10;&#10; </short>
          <long>&#10; Reports the results of a request to poll the coordinator for data&#10;&#10; @param status The status of the data request&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_POLL"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c4ecaa0" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c4ec020" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
        <documentation loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
          <short>&#10; Prompts the device to request data from the coordinator.</short>
          <long>&#10; Prompts the device to request data from the coordinator.&#10;&#10; @param CoordAddrMode The addressing mode of the coordinator to which&#10;                      the poll is intended&#10; @param CoordPANID The PAN identifier of the coordinator to which the&#10;                   poll is intended&#10; @param CoordAddress The address of the coordinator to which the&#10;                     poll is intended&#10; @param security     The security options (NULL means security is &#10;                     disabled)&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_POLL"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="CoordAddrMode" ref="0x2afd8c4ed020" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="CoordPANID" ref="0x2afd8c4ed3d0" loc="63:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="CoordAddress" ref="0x2afd8c4ed7e0" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c4edc40" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_POLL.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_COMM_STATUS" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
        <short> &#10; The MLME-SAP communication status primitive defines how the MLME&#10; communicates to the next higher layer about transmission status,&#10; when the transmission was instigated by a response primitive, and&#10; about security errors on incoming packets.</short>
        <long> &#10; The MLME-SAP communication status primitive defines how the MLME&#10; communicates to the next higher layer about transmission status,&#10; when the transmission was instigated by a response primitive, and&#10; about security errors on incoming packets. (IEEE 802.15.4-2006,&#10; Sect. 7.1.12)&#10;</long>
      </documentation>
      <function event="" provided="0" name="indication" ref="0x2afd8c4ff5b0" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
        <documentation loc="47:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
          <short> &#10; Allows the MLME to indicate a communications status.</short>
          <long> &#10; Allows the MLME to indicate a communications status.&#10;&#10; @param PanID The 16-bit PAN identifier of the device from which the&#10;              frame was received or to which the frame was being sent&#10; @param SrcAddrMode The source addressing mode&#10; @param SrcAddr Individual device address of the source as per SrcAddrMode&#10; @param DstAddrMode The destination addressing mode&#10; @param DstAddr Individual device address of the destination&#10;                as per DstAddrMode&#10; @param status The communications status&#10; @param security The security options, NULL means security is &#10;                 disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_COMM_STATUS"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PANId" ref="0x2afd8c4cca20" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="SrcAddrMode" ref="0x2afd8c4ccdc0" loc="63:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="SrcAddr" ref="0x2afd8c500250" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
          <variable name="DstAddrMode" ref="0x2afd8c5005f0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DstAddr" ref="0x2afd8c5009d0" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
              <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
            </type-tag>
          </variable>
          <variable name="status" ref="0x2afd8c500da0" loc="67:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
          <variable name="security" ref="0x2afd8c4ff2d0" loc="68:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_COMM_STATUS.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_ORPHAN" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
        <short> &#10; MLME-SAP orphan notification primitives define how a coordinator&#10; can issue a notification of an orphaned device.</short>
        <long> &#10; MLME-SAP orphan notification primitives define how a coordinator&#10; can issue a notification of an orphaned device. (IEEE 802.15.4-2006,&#10; Sect. 7.1.8)&#10;</long>
      </documentation>
      <function event="" provided="0" name="indication" ref="0x2afd8c4f2c70" loc="53:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
        <documentation loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
          <short>&#10; Allows the MLME of a coordinator to notify the next higher layer of the&#10; presence of an orphaned device&#10; &#10; </short>
          <long>&#10; Allows the MLME of a coordinator to notify the next higher layer of the&#10; presence of an orphaned device&#10; &#10; @param OrphanAddress The 64-bit extended address of the orphaned device&#10; @param security        The security options (NULL means security is &#10;                        disabled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ORPHAN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OrphanAddress" ref="0x2afd8c4f2580" loc="54:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
          </variable>
          <variable name="security" ref="0x2afd8c4f29e0" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="response" ref="0x2afd8c4ef580" loc="80:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
        <documentation loc="58:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
          <short>&#10; Allows the next higher layer of a coordinator to respond to the&#10; indication primitive&#10;&#10; </short>
          <long>&#10; Allows the next higher layer of a coordinator to respond to the&#10; indication primitive&#10;&#10; @param OrphanAddres The 64-bit extended address of the orphaned device&#10; @param ShortAddress The 16-bit short address allocated to the orphaned&#10;                     device if it is associated with this coordinator. The&#10;                     special short address 0xfffe indicates that no short&#10;                     address was allocated, and the device will use its&#10;                     64-bit extended address in all communications. If the&#10;                     device was not associated with this coordinator, this&#10;                     field will contain the value 0xffff and be ignored on&#10;                     receipt.&#10; @param AssociatedMember TRUE if the orphaned device is associated &#10;                         with this coordinator&#10; @param security        The security options (NULL means security is &#10;                        disabled)&#10; @return       IEEE154_SUCCESS if the request succeeded and an indication event&#10;               will be signalled through the MLME_COMM_STATUS interface later,  &#10;               otherwise an appropriate error code (no MLME_COMM_STATUS.indication &#10;               event will be signalled in this case)&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_ORPHAN"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OrphanAddres" ref="0x2afd8c4f0630" loc="81:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
            </type-int>
          </variable>
          <variable name="ShortAddress" ref="0x2afd8c4f09f0" loc="82:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="AssociatedMember" ref="0x2afd8c4f0db0" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="security" ref="0x2afd8c4ef2d0" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_ORPHAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_BEACON_NOTIFY" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_BEACON_NOTIFY.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_BEACON_NOTIFY.nc">
        <short> &#10; The MLME-SAP beacon notification primitive defines how a device may be&#10; notified when a beacon is received during normal operating conditions.</short>
        <long> &#10; The MLME-SAP beacon notification primitive defines how a device may be&#10; notified when a beacon is received during normal operating conditions. &#10; (IEEE 802.15.4-2006, Sect. 7.1.5)&#10;</long>
      </documentation>
      <function event="" provided="0" name="indication" ref="0x2afd8c4c9320" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_BEACON_NOTIFY.nc">
        <documentation loc="47:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_BEACON_NOTIFY.nc">
          <short>&#10; A beacon frame has been received.</short>
          <long>&#10; A beacon frame has been received. This event is signalled only if&#10; either the PIB attribute &#60;tt>macAutoRequest&#60;/tt> is set to FALSE&#10; or the beacon payload is not empty.&#10;&#10; The beacon parameters can be accessed through the&#10; &#60;tt>IEEE154BeaconFrame&#60;/tt> interface. The &#60;tt>IEEE154Frame&#60;/tt>&#10; interface can be used to inspect the addressing fields in the MAC&#10; header.&#10;&#10; @param beacon The beacon frame&#10;&#10; @return A frame buffer for the stack to use for the next received frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_BEACON_NOTIFY"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="beaconFrame" ref="0x2afd8c4c9060" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_BEACON_NOTIFY.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MLME_SCAN" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
        <short> &#10; MLME-SAP scan primitives define how a device can determine the&#10; energy usage or the presence or absence of PANs in a communications&#10; channel.</short>
        <long> &#10; MLME-SAP scan primitives define how a device can determine the&#10; energy usage or the presence or absence of PANs in a communications&#10; channel. (IEEE 802.15.4-2006, Sect. 7.1.10)&#10;</long>
      </documentation>
      <function event="" provided="0" name="confirm" ref="0x2afd8c51a0b0" loc="118:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
        <documentation loc="99:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
          <short>&#10; Reports the results of the channel scan request, returning&#10; the buffers passed in the &#60;tt>request&#60;/tt> command.</short>
          <long>&#10; Reports the results of the channel scan request, returning&#10; the buffers passed in the &#60;tt>request&#60;/tt> command.&#10;&#10; @param status The status of the scan request&#10; @param ScanType The type of scan performed&#10; @param ChannelPage The channel page on which the scan&#10;                    was performed (see 6.1.2).&#10; @param UnscannedChannels The 27 LSBs indicate which channels are not&#10;                    scanned (0 = scanned, 1 = not scanned)&#10; @param EnergyDetectNumResults The number of valid entries in the &#10;                    &#60;tt>EnergyDetectList&#60;/tt>.&#10; @param EnergyDetectList The buffer list of energy measurements, one for &#10;                    each channel searched during an ED scan&#10;@param PANDescriptorListNumResults The number of valid entries in the&#10;                    &#60;tt>PANDescriptorList&#60;/tt>.&#10; @param PANDescriptorList The list of PAN descriptors, one for each&#10;                    unique beacon found during an active or passive scan&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_SCAN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c51c110" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
          <variable name="ScanType" ref="0x2afd8c51c4a0" loc="120:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ChannelPage" ref="0x2afd8c51c840" loc="121:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="UnscannedChannels" ref="0x2afd8c51cc30" loc="122:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="EnergyDetectNumResults" ref="0x2afd8c51b060" loc="123:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="EnergyDetectList" ref="0x2afd8c51b470" loc="124:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="PANDescriptorListNumResults" ref="0x2afd8c51b8b0" loc="125:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="PANDescriptorList" ref="0x2afd8c51bd90" loc="126:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c51d0b0" loc="87:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
        <documentation loc="46:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
          <short>&#10; Initializes a channel scan over a given list of channels.</short>
          <long>&#10; Initializes a channel scan over a given list of channels.&#10; &#10; If the PIB attribute &#60;tt>macAutoRequest&#60;/tt> is set to FALSE, then&#10; for each received beacon a PAN descriptor is signalled to the next higher&#10; layer through a separate &#60;tt>MLME_BEACON_NOTIFY.indication()&#60;/tt> &#10; event; otherwise the result of the channel scan is stored in a user&#10; allocated buffer, either &#60;tt>EnergyDetectList&#60;/tt> or &#10; &#60;tt>PANDescriptorList&#60;/tt> depending on &#60;tt>ScanType&#60;/tt>, and the &#10; buffer is returned when the scan is completed.&#10;&#10; Both of the parameters &#60;tt>EnergyDetectList&#60;/tt> and &#10; &#60;tt>PANDescriptorList&#60;/tt> may be NULL, but at least one of them &#10; must be NULL.&#10;&#10; @param ScanType The type of scan performed: ENERGY_DETECTION_SCAN,&#10;                 ACTIVE_SCAN, PASSIVE_SCAN or ORPHAN_SCAN&#10; @param ScanChannels The 27 LSBs indicate which channels are to be&#10;                     scanned (1 = scan, 0 = don't scan)&#10; @param ScanDuration Value used to calculate the length of time to&#10;                     spend scanning each channel for ED, active, and&#10;                     passive scans.  This parameter is ignored for&#10;                     orphan scans.&#10; @param ChannelPage The channel page on which to perform the scan&#10; @param EnergyDetectListNumEntries The number of entries in the &#10;                    &#60;tt>EnergyDetectList&#60;/tt>.&#10; @param EnergyDetectList An empty buffer (allocated by the caller)  &#10;                    to store the result of the energy measurements  &#10;                    or NULL if the result should not be stored&#10; @param PANDescriptorListNumEntries The number of entries in the&#10;                    &#60;tt>PANDescriptorList&#60;/tt>.&#10; @param PANDescriptorList An empty buffer (allocated by the caller)   &#10;                     to store the result of the active/passive scan &#10;                     or NULL if the result should not be stored&#10; @param security    The security options (NULL means security is &#10;                    disabled)&#10; @return       IEEE154_SUCCESS if the request succeeded and a confirm event&#10;               will be signalled, an appropriate error code otherwise &#10;               (no confirm event will be signalled in this case)&#10; @see          confirm&#10;</long>
        </documentation>
        <interfacedef-ref qname="MLME_SCAN"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ScanType" ref="0x2afd8c4eeba0" loc="88:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ScanChannels" ref="0x2afd8c520020" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="ScanDuration" ref="0x2afd8c5203d0" loc="90:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ChannelPage" ref="0x2afd8c520770" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="EnergyDetectListNumEntries" ref="0x2afd8c520bb0" loc="92:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="EnergyDetectList" ref="0x2afd8c51f020" loc="93:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="PANDescriptorListNumEntries" ref="0x2afd8c51f460" loc="94:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="PANDescriptorList" ref="0x2afd8c51f920" loc="95:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="security" ref="0x2afd8c51fd80" loc="96:../../../../../tos/lib/mac/tkn154/interfaces/MLME/MLME_SCAN.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ieee154_security" ref="0x2afd8c20cbe0"/>
                <typename><typedef-ref name="ieee154_security_t" ref="0x2afd8c20bbd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154BeaconFrame" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <short> &#10; The IEEE154BeaconFrame interface allows to access the content of a beacon&#10; frame.</short>
        <long> &#10; The IEEE154BeaconFrame interface allows to access the content of a beacon&#10; frame.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getBeaconPayloadLength" ref="0x2afd8c5052a0" loc="132:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="121:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Returns the length of the beacon payload portion of the frame&#10; (in byte).</short>
          <long>&#10; Returns the length of the beacon payload portion of the frame&#10; (in byte).&#10;&#10; @param  frame   the frame &#10; @return         the length (in byte) of the frame's beacon payload&#10;                 portion, or, if the frame is not a beacon frame &#10;                 the length of the MAC payload. If the frame &#10;                 was received while in promiscuous mode, then &#10;                 this command returns the length of MHR + MAC Payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c505020" loc="132:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBeaconPayload" ref="0x2afd8c506570" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="109:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Returns a pointer to the beacon payload.</short>
          <long>&#10; Returns a pointer to the beacon payload.&#10;&#10; @param frame         the beacon frame&#10; @return              a pointer to the beacon payload, or, if the&#10;                      frame is not a beacon frame, a pointer to&#10;                      the MAC payload. If the frame was received&#10;                      while in promiscuous mode, then this command&#10;                      returns a pointer to the first byte of the MHR.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c5062b0" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddrPending" ref="0x2afd8c50adb0" loc="88:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="73:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Determines whether the local macShortAddress or aExtendedAddress&#10; (as currently registered in the PIB) is part of the pending &#10; address list of a beacon.</short>
          <long>&#10; Determines whether the local macShortAddress or aExtendedAddress&#10; (as currently registered in the PIB) is part of the pending &#10; address list of a beacon.&#10;&#10; @param frame the beacon frame&#10; &#10; @return      ADDR_MODE_NOT_PRESENT if the frame is not a beacon&#10;              beacon frame, or the local address is not part of&#10;              the pending address list,&#10;              ADDR_MODE_SHORT_ADDRESS if the local macShortAddress &#10;              is part of the pending address list,&#10;              ADDR_MODE_EXTENDED_ADDRESS if the local aExtendedAddress&#10;              is part of the pending address list&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c50ab30" loc="88:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPendAddrSpec" ref="0x2afd8c50d950" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="46:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Reads the Pending Address Specification of a beacon frame.</short>
          <long>&#10; Reads the Pending Address Specification of a beacon frame.&#10;&#10; @param frame         the beacon frame&#10; @param pendAddrSpec  a pointer to where the Pending Address &#10;                      Specification should be written&#10; @return              FAIL if the frame is not a beacon frame,&#10;                      SUCCESS otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c50d2f0" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pendAddrSpec" ref="0x2afd8c50d6c0" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBSN" ref="0x2afd8c504020" loc="140:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="134:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Returns the (beacon) sequence number of the frame.</short>
          <long>&#10; Returns the (beacon) sequence number of the frame.&#10;&#10; @param frame     the frame&#10; @return          sequence number of the frame&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c505c10" loc="140:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPendAddr" ref="0x2afd8c50a0e0" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="57:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Reads the Pending Addresses of a given type (short or extended) from a &#10; beacon frame.</short>
          <long>&#10; Reads the Pending Addresses of a given type (short or extended) from a &#10; beacon frame.&#10;&#10; @param frame         the beacon frame&#10; @param addrMode      the address mode of the sought addresses, either &#10;                      ADDR_MODE_SHORT_ADDRESS or ADDR_MODE_EXTENDED_ADDRESS&#10; @param buffer        a pointer to an array of &#34;bufferSize&#34; addresses&#10; @param bufferSize    number of address entries in the buffer&#10;&#10; @return              FAIL if the frame is not a beacon frame,&#10;                      SUCCESS otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c50b2b0" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addrMode" ref="0x2afd8c50b620" loc="70:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x2afd8c50ba30" loc="71:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="bufferSize" ref="0x2afd8c50bdb0" loc="71:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="parsePANDescriptor" ref="0x2afd8c507770" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
        <documentation loc="90:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
          <short>&#10; Parses the PAN Descriptor of a beacon frame.</short>
          <long>&#10; Parses the PAN Descriptor of a beacon frame. Since a frame&#10; does not include information about the channel that it was &#10; received on this information must be provided by the caller. &#10;&#10; @param frame          the beacon frame&#10; @param LogicalChannel will be written to PANDescriptor->LogicalChannel&#10; @param ChannelPage    will be written to PANDescriptor->ChannelPage&#10; @param PANDescriptor  a pointer to a PAN Descriptor, that will hold &#10;                       the PAN Descriptor as parsed of the beacon frame &#10; @param bufferSize     number of address entries in the buffer&#10;&#10; @return               SUCCESS if the frame is a valid beacon frame and the &#10;                       PANDescriptor was successfully parsed, FAIL&#10;                       otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154BeaconFrame"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c5098d0" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="LogicalChannel" ref="0x2afd8c509c70" loc="106:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="ChannelPage" ref="0x2afd8c507060" loc="107:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="pdescriptor" ref="0x2afd8c5074c0" loc="107:../../../../../tos/lib/mac/tkn154/interfaces/public/IEEE154BeaconFrame.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref name="ieee154_PANDescriptor" ref="0x2afd8c205480"/>
                <typename><typedef-ref name="ieee154_PANDescriptor_t" ref="0x2afd8c231280"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MCPS_PURGE" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_PURGE.nc">
      <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_PURGE.nc">
        <short> &#10; The MCPS-PURGE.request primitive allows the next higher layer to purge an&#10; MSDU from the transaction queue.</short>
        <long> &#10; The MCPS-PURGE.request primitive allows the next higher layer to purge an&#10; MSDU from the transaction queue. (IEEE 802.15.4-2006, Sect. 7.1.1)&#10;</long>
      </documentation>
      <function command="" provided="0" name="request" ref="0x2afd8c4cedf0" loc="56:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_PURGE.nc">
        <documentation loc="45:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_PURGE.nc">
          <short>&#10; Requests to purge a frame from the transaction queue.</short>
          <long>&#10; Requests to purge a frame from the transaction queue. The result&#10; will be returned immediately (there is no confirm event for this&#10; command).&#10; &#10; @param msduHandle The handle of the frame to be purged from the&#10;                   transaction queue&#10;&#10; @return       IEEE154_SUCCESS if the request succeeded, an &#10;               appropriate error code otherwise &#10;</long>
        </documentation>
        <interfacedef-ref qname="MCPS_PURGE"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msduHandle" ref="0x2afd8c4ceb70" loc="57:../../../../../tos/lib/mac/tkn154/interfaces/MCPS/MCPS_PURGE.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTx" loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
      <function command="" provided="0" name="transmit" ref="0x2afd8c591640" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
        <documentation loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
          <short> &#10; Transmits a frame at time &#60;tt>t0 + dt&#60;/tt> or immediately if &#60;tt>t0 +&#10; dt&#60;/tt> lies in the past.</short>
          <long> &#10; Transmits a frame at time &#60;tt>t0 + dt&#60;/tt> or immediately if &#60;tt>t0 +&#10; dt&#60;/tt> lies in the past. The frame is transmitted regardless of the&#10; channel condition (without prior CCA). Analogous to the &#60;tt>Timer&#60;/tt> &#10; interface &#60;tt>t0&#60;/tt> is interpreted as a time in the past. If &#10; &#60;tt>dt&#60;/tt> is zero then the frame is transmitted immediately. This&#10; command will fail, if the radio is currently not in state RADIO_OFF.&#10;&#10; Iff the ACK_REQUESTED flag is set in the frame's header a successful&#10; transmission will include an acknowledgement from the destination; then,&#10; the callee will perform the necessary steps for receiving this&#10; acknowledgement following the specification in IEEE 802.15.4-2006 Sect.&#10; 7.5.6.4. &#10;&#10; @param frame The frame to transmit&#10;&#10; @param t0 Reference time for transmission&#10;&#10; @param dt A positive offset relative to &#60;tt>t0&#60;/tt>&#10; &#10; @return SUCCESS if the transmission was triggered successfully and only&#10; then &#60;tt>transmitDone()&#60;/tt> will be signalled; FAIL, if the command was&#10; not accepted, because the radio is currently not in the state RADIO_OFF;&#10; EINVAL if &#60;tt>frame&#60;/tt> or a pointer therein is invalid, or the length&#10; of the frame is invalid&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c565cc0" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t0" ref="0x2afd8c591060" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8c5913a0" loc="66:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmitDone" ref="0x2afd8c590940" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
        <documentation loc="68:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
          <short>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt> and completing &#10; the transmission of a frame.</short>
          <long>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt> and completing &#10; the transmission of a frame. The radio is now back in state RADIO_OFF. &#10; The time of the transmission -- the point in time when the first bit of the&#10; PPDU was transmitted -- is given by &#60;tt>timestamp&#60;/tt>. Since the&#10; frame was transmitted without CCA the transmission can only have&#10; failed if no acknowledgement was received although one was requested.&#10;&#10; @param frame The frame that was transmitted.  &#10;&#10; @param result SUCCESS if the frame was transmitted (and a matching&#10; acknowledgement was received, if requested); ENOACK if the frame was &#10; transmitted, but no matching acknowledgement was received although one&#10; was requested     &#10;*</long>
        </documentation>
        <interfacedef-ref qname="RadioTx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c590360" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x2afd8c5906b0" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioTx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeCalc" loc="33:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
      <function command="" provided="0" name="hasExpired" ref="0x2afd8c567bb0" loc="47:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
        <documentation loc="42:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
          <short>&#10; Assuming that t0 lies in the past, this command returns TRUE&#10; iff t0+dt lies also in the past.</short>
          <long>&#10; Assuming that t0 lies in the past, this command returns TRUE&#10; iff t0+dt lies also in the past.&#10; @return TRUE if t0+dt is later than &#34;now&#34;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeCalc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c5675e0" loc="47:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8c567920" loc="47:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="timeElapsed" ref="0x2afd8c56ad80" loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
        <documentation loc="35:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
          <short>&#10; Returns the interval between time t1 and time t0 assuming&#10; that t0 happened before t1.</short>
          <long>&#10; Returns the interval between time t1 and time t0 assuming&#10; that t0 happened before t1.&#10; @return interval between t1 and t0&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeCalc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c56a7b0" loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="t1" ref="0x2afd8c56aaf0" loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/TimeCalc.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioRx" loc="37:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
      <function command="" provided="0" name="enableRx" ref="0x2afd8c5962b0" loc="56:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
        <documentation loc="39:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
          <short> &#10; Switches the radio to receive mode at time &#60;tt>t0 + dt&#60;/tt> or immediately&#10; if &#60;tt>t0 + dt&#60;/tt> lies in the past.</short>
          <long> &#10; Switches the radio to receive mode at time &#60;tt>t0 + dt&#60;/tt> or immediately&#10; if &#60;tt>t0 + dt&#60;/tt> lies in the past. Analogous to the &#60;tt>Timer&#60;/tt>&#10; interface &#60;tt>t0&#60;/tt> is interpreted as a time in the past. Consequently,&#10; if &#60;tt>dt = 0&#60;/tt> then the radio is always switched to receive mode&#10; immediately. This command will fail, if the radio is currently not in&#10; state RADIO_OFF. Once the radio is in receive mode an event&#10; &#60;tt>enableRxDone&#60;/tt> will be signalled.&#10;&#10; @param t0 Reference time for receive operation  &#10;&#10; @param dt A positive offset relative to &#60;tt>t0&#60;/tt>.  &#10;&#10; @return SUCCESS if the command was accepted and only then the&#10; &#60;tt>enableRxDone()&#60;/tt> event will be signalled; FAIL, if the command was&#10; not accepted, because the radio is currently not in the state RADIO_OFF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8c568c50" loc="56:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8c596020" loc="56:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="enableRxDone" ref="0x2afd8c596da0" loc="65:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
        <documentation loc="58:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
          <short> &#10; Signalled in response to a successful call to &#60;tt>enableRx()&#60;/tt>.</short>
          <long> &#10; Signalled in response to a successful call to &#60;tt>enableRx()&#60;/tt>. This&#10; event is completing the &#60;tt>enableRx()&#60;/tt> operation, the radio is now in&#10; the state RECEIVING. It will stay in receive mode until it is switched off&#10; through the &#60;tt>RadioOff&#60;/tt> interface. Received frames will be signalled&#10; through the &#60;tt>received()&#60;/tt> event.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="RadioRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiving" ref="0x2afd8c595760" loc="73:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
        <documentation loc="67:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
          <short>&#10; Tells whether the radio is in state RECEIVING, i.e.</short>
          <long>&#10; Tells whether the radio is in state RECEIVING, i.e. in receive&#10; mode.&#10;&#10; @return TRUE if the radio is in the state RECEIVING, FALSE otherwise &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x2afd8c5942e0" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
        <documentation loc="75:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
          <short> &#10; A frame was received and passed the filters described in &#10; IEEE 802.15.4-2006 Sec.</short>
          <long> &#10; A frame was received and passed the filters described in &#10; IEEE 802.15.4-2006 Sec. 7.5.6.2 (&#34;Reception and rejection&#34;).&#10;&#10; @param frame The received frame  &#10;&#10; @return            a buffer to be used by the driver for the next &#10;                    incoming frame &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c594020" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioRx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2afd8c5a1870" loc="52:../../../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2afd8c5a1070" loc="46:../../../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioOff" loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
      <function event="" provided="0" name="offDone" ref="0x2afd8c58ec60" loc="53:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
        <documentation loc="49:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
          <short> &#10; Signalled in response to a successful call to &#60;tt>off()&#60;/tt>.</short>
          <long> &#10; Signalled in response to a successful call to &#60;tt>off()&#60;/tt>. The radio is&#10; now in the state RADIO_OFF.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="RadioOff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2afd8c58e350" loc="47:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
        <documentation loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
          <short> &#10; Disables the transceiver and changes the radio state to RADIO_OFF.</short>
          <long> &#10; Disables the transceiver and changes the radio state to RADIO_OFF. This&#10; command will succeed only if the current state of the radio is RECEIVING.&#10;&#10; @return SUCCESS if the command was accepted and the &#60;tt>offDone()&#60;/tt>&#10; event will be signalled; EALREADY if the radio is already switched off,&#10; i.e. in state RADIO_OFF; FAIL if the radio was not switched of because &#10; the current state is not RECEIVING.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioOff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOff" ref="0x2afd8c58c4a0" loc="60:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
        <documentation loc="55:../../../../../tos/lib/mac/tkn154/interfaces/private/RadioOff.nc">
          <short> &#10; Tells whether the radio is in state RADIO_OFF.</short>
          <long> &#10; Tells whether the radio is in state RADIO_OFF.&#10;&#10; @return TRUE if the radio is in the state RADIO_OFF, FALSE otherwise &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioOff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnslottedCsmaCa" loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
      <function command="" provided="0" name="transmit" ref="0x2afd8c58a3e0" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
        <documentation loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
          <short> &#10; Transmits a frame using the unslotted CSMA-CA algorithm as specified in &#10; IEEE 802.15.4-2006 standard Sect.</short>
          <long> &#10; Transmits a frame using the unslotted CSMA-CA algorithm as specified in &#10; IEEE 802.15.4-2006 standard Sect. 7.5.1.4. This command will fail if the&#10; current state of the radio is not RADIO_OFF. The initial CSMA-CA parameters&#10; are passed as a parameter and may be modified by the callee. The caller&#10; must not access &#60;tt>csma&#60;/tt> until the &#60;tt>transmitDone&#60;/tt> event&#10; has been signalled. &#10;&#10; Iff the ACK_REQUESTED flag is set in the frame's header a successful &#10; transmission will include an acknowledgement from the destination; &#10; then, the callee will perform the necessary steps for receiving this&#10; acknowledgement following the specification in IEEE 802.15.4-2006 &#10; Sect. 7.5.6.4. &#10; &#10; @param frame The frame to transmit.&#10;&#10; @param csma Parameters for the unslotted CSMA-CA algorithm. &#10;&#10; @return SUCCESS if the unslotted CSMA-CA algorithm was triggered &#10; successfully; EINVAL if &#60;tt>frame&#60;/tt> or a pointer therein is invalid; &#10; FAIL if the radio is not in state RADIO_OFF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c592d70" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="csma" ref="0x2afd8c58a150" loc="62:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmitDone" ref="0x2afd8c589da0" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
        <documentation loc="64:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
          <short>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt>.</short>
          <long>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt>. This event completes&#10; the &#60;tt>transmit&#60;/tt> operation. If the transmission succeeded then&#10; the time of the transmission -- the point in time when the first bit of the&#10; PPDU was transmitted -- will be stored in the metadata field of the frame. &#10; A transmission failed if either all CCA operation(s) failed (including&#10; backoffs, i.e. NB > macMaxCsmaBackoffs) or if no acknowledgement was received&#10; although one was requested.&#10;&#10; @param frame The frame that was to be transmitted.  &#10;&#10; @param csma Parameters for the unslotted CSMA-CA algorithm; this&#10; pointer is identical to the one passed to the &#60;tt>transmit&#60;/tt> command,&#10; the content, however, may have changed.&#10;&#10; @param ackPendingFlag TRUE if an acknowledgement was received and the&#10; &#34;pending&#34; flag is set in the header of the ACK frame, FALSE otherwise&#10; (this is typically only relevant for indirect transmissions)&#10;&#10; @param result SUCCESS if the frame was transmitted (and a matching&#10; acknowledgement was received, if requested); ENOACK if the frame was &#10; transmitted, but no matching acknowledgement was received, although one&#10; was requested; FAIL if the CSMA-CA algorithm failed because &#10; NB > macMaxCsmaBackoffs.  &#10;</long>
        </documentation>
        <interfacedef-ref qname="UnslottedCsmaCa"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c589060" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="csma" ref="0x2afd8c589420" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ackPendingFlag" ref="0x2afd8c5897a0" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x2afd8c589af0" loc="89:../../../../../tos/lib/mac/tkn154/interfaces/private/UnslottedCsmaCa.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afd8c574390" loc="52:../../../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c574390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x2afd8c5734b0" loc="67:../../../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2afd8c574c60" loc="59:../../../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x2afd8c572020" loc="74:../../../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c574390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afd8c573c40" loc="74:../../../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c574390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EnergyDetection" loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
      <function event="" provided="0" name="done" ref="0x2afd8c5859a0" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
        <documentation loc="51:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
          <short>&#10; Signalled in response to a call to &#60;tt>start&#60;/tt>;&#10; returns the maximum energy measured on the channel over the&#10; specified period of time.</short>
          <long>&#10; Signalled in response to a call to &#60;tt>start&#60;/tt>;&#10; returns the maximum energy measured on the channel over the&#10; specified period of time.&#10;&#10; @param status SUCCESS if the measurement succeeded&#10; and only then &#60;tt>EnergyLevel&#60;/tt> is valid, FAIL &#10; otherwise&#10; @param EnergyLevel The maximum energy on the channel&#10;*</long>
        </documentation>
        <interfacedef-ref qname="EnergyDetection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x2afd8c5853a0" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
          <variable name="EnergyLevel" ref="0x2afd8c585710" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afd8c58fa50" loc="49:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
        <documentation loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
          <short>&#10; Requests to measure the energy level on the current channel; the&#10; measurement should last for &#60;tt>duration&#60;/tt> symbols and the  &#10; maximum energy level is signalled through the &#60;tt>done&#60;/tt>&#10; event.</short>
          <long>&#10; Requests to measure the energy level on the current channel; the&#10; measurement should last for &#60;tt>duration&#60;/tt> symbols and the  &#10; maximum energy level is signalled through the &#60;tt>done&#60;/tt>&#10; event.&#10;&#10; @param duration Duration of the energy detection measurement &#10; (in symbol time)&#10; @return SUCCESS if the request was accepted and only then &#10; the &#60;tt>done&#60;/tt> event will be signalled, FAIL otherwise&#10;*</long>
        </documentation>
        <interfacedef-ref qname="EnergyDetection"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="duration" ref="0x2afd8c58f7d0" loc="49:../../../../../tos/lib/mac/tkn154/interfaces/private/EnergyDetection.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Set" loc="49:../../../../../tos/interfaces/Set.nc">
      <documentation loc="33:../../../../../tos/interfaces/Set.nc">
        <short>&#10; The Set interface is intended for synchronous writing of small&#10; values.</short>
        <long>&#10; The Set interface is intended for synchronous writing of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the set() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afd8c5878b0" loc="49:../../../../../tos/interfaces/Set.nc">
          <interfacedef-ref qname="Set"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c5878b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="set" ref="0x2afd8c582390" loc="55:../../../../../tos/interfaces/Set.nc">
        <documentation loc="50:../../../../../tos/interfaces/Set.nc">
          <short>&#10; Stores a value of type val_t.</short>
          <long>&#10; Stores a value of type val_t.&#10;&#10; @param val the value to be stored&#10;</long>
        </documentation>
        <interfacedef-ref qname="Set"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c5878b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afd8c582110" loc="55:../../../../../tos/interfaces/Set.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8c5878b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FrameUtility" loc="33:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
      <function command="" provided="0" name="writeHeader" ref="0x2afd8c562060" loc="37:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mhr" ref="0x2afd8c564200" loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="DstAddrMode" ref="0x2afd8c5645a0" loc="39:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="DstPANId" ref="0x2afd8c564940" loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="DstAddr" ref="0x2afd8c564d60" loc="41:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/>
                <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="SrcAddrMode" ref="0x2afd8c563180" loc="42:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="SrcPANId" ref="0x2afd8c563520" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="SrcAddr" ref="0x2afd8c563980" loc="44:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="ieee154_address_t" ref="0x2afd8c20c860"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref name="ieee154_address" ref="0x2afd8c20dea0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="PANIDCompression" ref="0x2afd8c563d40" loc="45:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMHRLength" ref="0x2afd8c5612c0" loc="48:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fcf1" ref="0x2afd8c5627e0" loc="48:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="fcf2" ref="0x2afd8c562b20" loc="48:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2afd8c561020" loc="48:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="convertToNative" ref="0x2afd8c598020" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
                <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destNative" ref="0x2afd8c55d900" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
                <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="srcLE" ref="0x2afd8c55dcd0" loc="64:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyLocalExtendedAddressLE" ref="0x2afd8c55f7e0" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destLE" ref="0x2afd8c55f560" loc="55:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyCoordExtendedAddressLE" ref="0x2afd8c55e2a0" loc="58:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destLE" ref="0x2afd8c55e020" loc="58:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="convertToLE" ref="0x2afd8c55d120" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destLE" ref="0x2afd8c55ea10" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="srcNative" ref="0x2afd8c55ee10" loc="61:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x2afd8afc5d60"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isBeaconFromCoord" ref="0x2afd8c561cf0" loc="52:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
        <interfacedef-ref qname="FrameUtility"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c561a70" loc="52:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameUtility.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FrameTx" loc="34:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
      <function command="" provided="0" name="transmit" ref="0x2afd8c5d4590" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
        <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
          <short>&#10; Transmits a frame.</short>
          <long>&#10; Transmits a frame.&#10;&#10; @param  txFrame    the frame to transmit&#10; @return IEEE154_SUCCESS if the request was accepted and&#10; only then &#60;tt>transmitDone()&#60;/tt> will be signalled&#10;</long>
        </documentation>
        <interfacedef-ref qname="FrameTx"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txFrame" ref="0x2afd8c5d4310" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmitDone" ref="0x2afd8c5d34d0" loc="51:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
        <documentation loc="45:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
          <short>&#10; Signals the completion of the transmission of a frame.</short>
          <long>&#10; Signals the completion of the transmission of a frame.&#10;&#10; @param  txFrame    the frame that was transmitted&#10; @param  status     the result of the transmission&#10;</long>
        </documentation>
        <interfacedef-ref qname="FrameTx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txFrame" ref="0x2afd8c5d4e10" loc="51:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="status" ref="0x2afd8c5d3240" loc="51:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameTx.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FrameRx" loc="34:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameRx.nc">
      <function event="" provided="0" name="received" ref="0x2afd8c5d75b0" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameRx.nc">
        <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameRx.nc">
          <short>&#10; Received a frame.</short>
          <long>&#10; Received a frame.&#10;&#10; @param   frame     the received frame&#10; @return            a buffer to be used by the stack for the next &#10;                    incoming frame &#10;</long>
        </documentation>
        <interfacedef-ref qname="FrameRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c5d72f0" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameRx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2afd8c5d0020" loc="50:../../../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c5d0020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afd8c5cc230" loc="97:../../../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c5d0020"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2afd8c5cea10" loc="80:../../../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2afd8c5d08d0" loc="61:../../../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2afd8c5cd4e0" loc="89:../../../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c5d0020"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2afd8c5cd260" loc="89:../../../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c5d0020"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2afd8c5ce190" loc="72:../../../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Purge" loc="34:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
      <function event="" provided="0" name="purgeDone" ref="0x2afd8c5c2820" loc="37:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
        <interfacedef-ref qname="Purge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txFrame" ref="0x2afd8c5c21e0" loc="37:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="status" ref="0x2afd8c5c2590" loc="37:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
              <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purge" ref="0x2afd8c5c5a20" loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
        <interfacedef-ref qname="Purge"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msduHandle" ref="0x2afd8c5c57a0" loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/Purge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TransferableResource" loc="72:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
      <documentation loc="63:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <short> &#10; This interface is the same as the standard &#60;tt>Resource&#60;/tt> &#10; interface, except that it has one new command &#60;tt>transferTo()&#60;/tt> &#10; and one new event &#60;tt>transferred()&#60;/tt>, which allow to pass &#10; the resource from one component to another.</short>
        <long> &#10; This interface is the same as the standard &#60;tt>Resource&#60;/tt> &#10; interface, except that it has one new command &#60;tt>transferTo()&#60;/tt> &#10; and one new event &#60;tt>transferred()&#60;/tt>, which allow to pass &#10; the resource from one component to another.&#10;&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isOwner" ref="0x2afd8c6708b0" loc="145:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="139:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x2afd8c671de0" loc="137:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="121:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="transferTo" ref="0x2afd8c673850" loc="111:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="100:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short> &#10; Transfers ownership of a resource to another client, which will in turn&#10; be signalled the &#60;tt>transferred()&#60;/tt> event.</short>
          <long> &#10; Transfers ownership of a resource to another client, which will in turn&#10; be signalled the &#60;tt>transferred()&#60;/tt> event. This command may override &#10; the default queueing policy.&#10;&#10; @param dstClient The identifier of the client to transfer the resource to.&#10;&#10; @return SUCCESS If ownership has been transferred; FAIL if ownership has&#10; not been transferred, because the caller is not owner of the resource or&#10; a client with the identifer &#60;tt>dstClient&#60;/tt> is not present.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstClient" ref="0x2afd8c6735d0" loc="111:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2afd8c6745a0" loc="93:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="86:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8c637bf0" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="74:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2afd8c674d90" loc="98:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="95:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transferredFrom" ref="0x2afd8c671500" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
        <documentation loc="113:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
          <short> &#10; Another client transferred ownership of the resource to you by calling&#10; the &#60;tt>transfer()&#60;/tt> command, i.e.</short>
          <long> &#10; Another client transferred ownership of the resource to you by calling&#10; the &#60;tt>transfer()&#60;/tt> command, i.e. you are now in control of the resource.&#10;&#10; @param srcClient The identifier of the client that transferred the resource to you.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TransferableResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcClient" ref="0x2afd8c671280" loc="119:../../../../../tos/lib/mac/tkn154/interfaces/private/TransferableResource.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:../../../../../tos/interfaces/GetNow.nc">
      <documentation loc="36:../../../../../tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2afd8c643880" loc="44:../../../../../tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2afd8c643880"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2afd8c6401f0" loc="51:../../../../../tos/interfaces/GetNow.nc">
        <documentation loc="46:../../../../../tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2afd8c643880"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2afd8c812c30" loc="53:../../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2afd8c8585a0" loc="61:../../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2afd8c850270" loc="65:../../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2afd8c8529b0" loc="59:../../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCsmaCa" loc="38:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
      <function command="" provided="0" name="transmit" ref="0x2afd8c818a30" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
        <documentation loc="40:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
          <short> &#10; Transmits a frame using the slotted CSMA-CA algorithm as specified in IEEE&#10; 802.15.4-2006 standard Sect.</short>
          <long> &#10; Transmits a frame using the slotted CSMA-CA algorithm as specified in IEEE&#10; 802.15.4-2006 standard Sect. 7.5.1.4. This command will fail if the&#10; current state of the radio is not RADIO_OFF. The initial CSMA-CA&#10; parameters are passed as a parameter and may be modified by the callee.&#10; The caller must not access &#60;tt>csma&#60;/tt> until the &#60;tt>transmitDone&#60;/tt>&#10; event has been signalled.&#10;&#10; &#60;tt>slot0Time&#60;/tt> defines the beginning of the first slot in the CAP.&#10; Any transmission must commence on a backoff slot boundary relative to&#10; &#60;tt>slot0Time&#60;/tt>. The last possible time for transmission is defined by&#10; &#60;tt>slot0Time+dtMax&#60;/tt>. If the transmission cannot commence at or before&#10; &#60;tt>slot0Time+dtMax&#60;/tt> then an event &#60;tt>transmitDone()&#60;/tt> with error&#10; code ERETRY will be signalled and &#60;tt>csma&#60;/tt> will reflect the current&#10; state of the CSMA-CA algorithm. The caller can then resume the&#10; transmission of this frame in the next CAP based on the&#10; &#60;tt>remainingBackoff&#60;/tt> passed in the &#60;tt>transmitDone()&#60;/tt> event, by&#10; setting &#60;tt>resume&#60;/tt> to TRUE in the &#60;tt>transmit()&#60;/tt> call.&#10;&#10; Iff the ACK_REQUESTED flag is set in the frame's header a successful&#10; transmission will include an acknowledgement from the destination; then,&#10; the callee will perform the necessary steps for receiving this&#10; acknowledgement following the specification in IEEE 802.15.4-2006 Sect.&#10; 7.5.6.4. &#10; &#10; @param frame The frame to transmit.&#10;&#10; @param csma Initial parameters for the slotted CSMA-CA algorithm. &#10;&#10; @param slot0Time Reference time for the backoff slot boundaries  &#10;&#10; @param dtMax &#60;tt>slot0Time+dtMax&#60;/tt> is the last time the frame may be &#10;              transmitted.&#10;&#10; @param resume TRUE means that the initial backoff is defined by the&#10;               &#60;tt>remainingBackoff&#60;/tt> parameter, FALSE means the &#10;               &#60;tt>remainingBackoff&#60;/tt> is to be ignored.&#10;&#10; @param remainingBackoff initial backoff (ignored if &#60;tt>resume&#60;/tt>&#10; is FALSE.&#10;&#10; @return SUCCESS if the slotted CSMA-CA was triggered successfully;&#10; EINVAL if &#60;tt>frame&#60;/tt> or a pointer therein is invalid; FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCsmaCa"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c819550" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="csma" ref="0x2afd8c819910" loc="84:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="slot0Time" ref="0x2afd8c819cb0" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dtMax" ref="0x2afd8c818060" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="resume" ref="0x2afd8c818390" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="remainingBackoff" ref="0x2afd8c818760" loc="85:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmitDone" ref="0x2afd8c8164a0" loc="115:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
        <documentation loc="87:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
          <short>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt>.</short>
          <long>&#10; Signalled in response to a call to &#60;tt>transmit()&#60;/tt>. This event&#10; completes the &#60;tt>transmit&#60;/tt> operation. A transmission failed if either&#10; the channel was never idle during any of the &#60;tt>macMaxCsmaBackoffs+1&#60;/tt>&#10; transmission attempts, if no acknowledgement was received although one was&#10; requested or if the frame could not be transmitted before the specified&#10; deadline (&#60;tt>slot0Time+dtMax&#60;/tt>).&#10;&#10; @param frame The frame that was to be transmitted.  &#10;&#10; @param csma Parameters for the slotted CSMA-CA algorithm; this pointer is&#10; identical to the one passed to the &#60;tt>transmit&#60;/tt> command, the content,&#10; however, may have changed.&#10;&#10; @param ackPendingFlag TRUE if an acknowledgement was received and the&#10; &#34;pending&#34; flag is set in the header of the ACK frame, FALSE otherwise&#10; (this is typically only relevant for indirect transmissions)&#10; &#10; @param remainingBackoff Only valid if &#60;tt>result = ERETRY&#60;/tt>, and&#10; then it describes the remaining backoff time (in symbols) to be used&#10; for the transmission of the frame in the following CAP.   &#10;&#10; @result result SUCCESS if the the frame was transmitted (and a matching&#10; acknowledgement was received, if requested); FAIL if the CSMA-CA algorithm&#10; failed because NB > macMaxCsmaBackoffs; ERETRY if the frame could not be &#10; transmitted because transmission would have started later than &#10; &#60;tt>slot0Time+dtMax&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCsmaCa"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8c817300" loc="115:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="csma" ref="0x2afd8c8176c0" loc="115:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="ieee154_csma" ref="0x2afd8c2add40"/>
                <typename><typedef-ref name="ieee154_csma_t" ref="0x2afd8c2acb50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ackPendingFlag" ref="0x2afd8c817a60" loc="116:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="remainingBackoff" ref="0x2afd8c817e30" loc="116:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x2afd8c8161e0" loc="116:../../../../../tos/lib/mac/tkn154/interfaces/private/SlottedCsmaCa.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2afd8c847d40" loc="90:../../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2afd8c8445f0" loc="98:../../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2afd8c8857d0" loc="79:../../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afd8c88e870"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2afd8c885550" loc="79:../../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afd8c88e870"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2afd8c888820" loc="53:../../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2afd8c887350" loc="62:../../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afd8c88e870"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2afd8c8870d0" loc="62:../../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2afd8c88e870"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2afd8c887c60" loc="70:../../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2afd8c88e870"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FrameExtracted" loc="34:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameExtracted.nc">
      <function event="" provided="0" name="received" ref="0x2afd8c9022f0" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameExtracted.nc">
        <documentation loc="36:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameExtracted.nc">
          <short> &#10; A frame was extracted from the coordinator.</short>
          <long> &#10; A frame was extracted from the coordinator.&#10;&#10; @param rxFrame The frame received from the coordinator&#10; @param txFrame The data request frame sent to the coordinator&#10; @return A frame buffer for the stack to use for the next received frame&#10;*</long>
        </documentation>
        <interfacedef-ref qname="FrameExtracted"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxFrame" ref="0x2afd8c905b10" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameExtracted.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="txFrame" ref="0x2afd8c902020" loc="43:../../../../../tos/lib/mac/tkn154/interfaces/private/FrameExtracted.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2afd8c98e9a0" loc="43:../../../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2afd8c989120" loc="80:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2afd8c986b70" loc="97:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2afd8c9868f0" loc="97:../../../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2afd8afbfc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x2afd8afbfc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2afd8c985b30" loc="108:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2afd8c9858b0" loc="108:../../../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2afd8c98b9e0" loc="57:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2afd8c98a990" loc="72:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2afd8c989d00" loc="88:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2afd8c98e9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2afd8c98b270" loc="50:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2afd8c98a190" loc="65:../../../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="WriteBeaconField" loc="33:../../../../../tos/lib/mac/tkn154/interfaces/private/WriteBeaconField.nc">
      <function command="" provided="0" name="write" ref="0x2afd8c9e1bd0" loc="50:../../../../../tos/lib/mac/tkn154/interfaces/private/WriteBeaconField.nc">
        <documentation loc="35:../../../../../tos/lib/mac/tkn154/interfaces/private/WriteBeaconField.nc">
          <short> &#10; Writes a field inside a beacon frame (either &#34;GTS fields&#34; &#10; or &#34;Pending address field&#34;, see Fig.</short>
          <long> &#10; Writes a field inside a beacon frame (either &#34;GTS fields&#34; &#10; or &#34;Pending address field&#34;, see Fig. 44). IMPORTANT:&#10; the pointer &#60;tt>lastBytePtr&#60;/tt> points to the address of&#10; the last byte that the callee may write. E.g. assume&#10; we want to write a GTS information field of total 4 byte, &#10; the &#34;GTS Specification&#34; byte would be written at lastBytePtr[-3],&#10; the &#34;GTS Directions&#34; field at at lastBytePtr[-2] and so on.&#10;&#10; @param lastBytePtr Address of last byte to write&#10;&#10; @param maxlen Maximum number of bytes that may be written&#10; &#10; @return The number of bytes that have actually been written&#10;</long>
        </documentation>
        <interfacedef-ref qname="WriteBeaconField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lastBytePtr" ref="0x2afd8c9e15f0" loc="50:../../../../../tos/lib/mac/tkn154/interfaces/private/WriteBeaconField.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="maxlen" ref="0x2afd8c9e1940" loc="50:../../../../../tos/lib/mac/tkn154/interfaces/private/WriteBeaconField.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataRequest" loc="33:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
      <function command="" provided="0" name="poll" ref="0x2afd8ca84150" loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
        <documentation loc="35:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
          <short>&#10; Sends a data request frame to the coordinator.</short>
          <long>&#10; Sends a data request frame to the coordinator. &#10;&#10; @param CoordAddrMode coordinator address mode&#10; @param CoordPANId coordinator PAN ID&#10; @param CoordAddressLE points to coordinator address stored in &#10;                       little endian format&#10; @param SrcAddrMode source address mode&#10; @returns IEEE154_SUCCESS if a data request frame will be transmitted and&#10; only then pollDone will be signalled. &#10;*</long>
        </documentation>
        <interfacedef-ref qname="DataRequest"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="ieee154_status" ref="0x2afd8c1ed9e0"/>
            <typename><typedef-ref name="ieee154_status_t" ref="0x2afd8c20f550"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="CoordAddrMode" ref="0x2afd8ca85390" loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="CoordPANId" ref="0x2afd8ca85720" loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="CoordAddressLE" ref="0x2afd8ca85b00" loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="SrcAddrMode" ref="0x2afd8ca85e80" loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pollDone" ref="0x2afd8ca84a10" loc="52:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
        <documentation loc="49:../../../../../tos/lib/mac/tkn154/interfaces/private/DataRequest.nc">
          <short>&#10; Signalled in response to a successful poll command&#10;*</short>
        </documentation>
        <interfacedef-ref qname="DataRequest"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SuperframeStructure" loc="44:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
      <function command="" provided="0" name="numCapSlots" ref="0x2afd8ccebdc0" loc="67:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="62:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Number of CAP slots.</short>
          <long>&#10; Number of CAP slots.&#10; &#10; @returns  number of CAP slots&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfSlotDuration" ref="0x2afd8cceb550" loc="60:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="54:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Duration (in symbols) of a single superframe slot.</short>
          <long>&#10; Duration (in symbols) of a single superframe slot.&#10; Zero means, the CAP is not valid (no valid beacon was received).&#10; &#10; @returns  superframe slot duration&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="battLifeExtDuration" ref="0x2afd8cceae30" loc="83:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="76:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Duration of the battery life extension period (in symbols), &#10; Zero means battery life extension is not used (disabled).</short>
          <long>&#10; Duration of the battery life extension period (in symbols), &#10; Zero means battery life extension is not used (disabled).&#10; &#10; @returns  duration of the battery life extension period, &#10; zero means battery life extension is disabled&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numGtsSlots" ref="0x2afd8ccea5e0" loc="74:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="69:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Number of GTS slots.</short>
          <long>&#10; Number of GTS slots.&#10; &#10; @returns  number of GTS slots&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gtsFields" ref="0x2afd8cce9800" loc="91:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="85:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Returns a pointer to the content of the GTS fields of the &#10; last received/transmitted beacon.</short>
          <long>&#10; Returns a pointer to the content of the GTS fields of the &#10; last received/transmitted beacon. &#10; &#10; @returns GTS fields &#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBroadcastPending" ref="0x2afd8cce89b0" loc="108:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="102:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Tells whether the frame pending bit is set in the header&#10; of the beacon frame.</short>
          <long>&#10; Tells whether the frame pending bit is set in the header&#10; of the beacon frame.&#10; &#10; @returns TRUE is frame pending bit in beacon header is set, FALSE otherwise&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="beaconInterval" ref="0x2afd8cce62b0" loc="115:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="110:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; The beacon interval (in symbols) in which the superframe is embedded.</short>
          <long>&#10; The beacon interval (in symbols) in which the superframe is embedded.&#10;&#10; @returns beacon interval&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="guardTime" ref="0x2afd8cce80e0" loc="100:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="93:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; The last &#34;guardTime&#34; symbols of CAP/CFP should not be used,&#10; i.e.</short>
          <long>&#10; The last &#34;guardTime&#34; symbols of CAP/CFP should not be used,&#10; i.e. transmission/reception should stop &#34;guardTime&#34; symbols&#10; before the actual end of the CAP/CFP.&#10; &#10; @returns guard time&#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfStartTime" ref="0x2afd8cceec40" loc="52:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
        <documentation loc="46:../../../../../tos/lib/mac/tkn154/interfaces/private/SuperframeStructure.nc">
          <short>&#10; Returns the absolute time (in symbols) when the superframe started, &#10; i.e.</short>
          <long>&#10; Returns the absolute time (in symbols) when the superframe started, &#10; i.e. the timestamp of the beacon marking the first slot.&#10; &#10; @returns  superframe start time &#10;*</long>
        </documentation>
        <interfacedef-ref qname="SuperframeStructure"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetSet" loc="50:../../../../../tos/interfaces/GetSet.nc">
      <documentation loc="33:../../../../../tos/interfaces/GetSet.nc">
        <short>&#10; The GetSet interface is intended for synchronous reading and&#10; writing of small values.</short>
        <long>&#10; The GetSet interface is intended for synchronous reading and&#10; writing of small values. The type of the value is given as a&#10; template argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2afd8cd39cf0" loc="50:../../../../../tos/interfaces/GetSet.nc">
          <interfacedef-ref qname="GetSet"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8cd39cf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2afd8cd365c0" loc="56:../../../../../tos/interfaces/GetSet.nc">
        <documentation loc="51:../../../../../tos/interfaces/GetSet.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetSet"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8cd39cf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2afd8cd35020" loc="63:../../../../../tos/interfaces/GetSet.nc">
        <documentation loc="58:../../../../../tos/interfaces/GetSet.nc">
          <short>&#10; Stores a value of type val_t.</short>
          <long>&#10; Stores a value of type val_t.&#10;&#10; @param val the value to be stored&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetSet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8cd39cf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afd8cd36ca0" loc="63:../../../../../tos/interfaces/GetSet.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2afd8cd39cf0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReliableWait" loc="33:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
      <function command="" provided="0" name="waitBackoff" ref="0x2afd8ce724d0" loc="39:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2afd8ce72250" loc="39:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitRx" ref="0x2afd8ce74020" loc="35:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8ce78930" loc="35:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8ce78c70" loc="35:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="waitBackoffDone" ref="0x2afd8ce72c20" loc="40:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ccaOnBackoffBoundary" ref="0x2afd8ce716a0" loc="41:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slot0" ref="0x2afd8ce71420" loc="41:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitTx" ref="0x2afd8ce73400" loc="37:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2afd8ce74e10" loc="37:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2afd8ce73170" loc="37:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="waitTxDone" ref="0x2afd8ce73b20" loc="38:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitRxDone" ref="0x2afd8ce74740" loc="36:../../../../../tos/chips/cc2420_tkn154/ReliableWait.nc">
        <interfacedef-ref qname="ReliableWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CaptureTime" loc="34:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
      <function command="" provided="0" name="getTimestamp" ref="0x2afd8ced7540" loc="47:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
        <documentation loc="37:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
          <short> &#10; Converts a platform-specific SFD capture time value (16-bit) into a IEEE&#10; 802.15.4 timestamp.</short>
          <long> &#10; Converts a platform-specific SFD capture time value (16-bit) into a IEEE&#10; 802.15.4 timestamp. The timestamp is a 32-bit value that represents the&#10; local time when the *first bit* (chip) of the corresponding frame was&#10; transmitted / received (note that on the CC2420 the SFD capture happens &#10; 5 byte (=10 symbols) after the transmission/reception of the first bit).&#10;&#10; @param   time  capture time &#10; @return  timestamp local time when the frame was transmitted/received&#10;*</long>
        </documentation>
        <interfacedef-ref qname="CaptureTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SFDCaptureTime" ref="0x2afd8ced72c0" loc="47:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSFDUptime" ref="0x2afd8ced6660" loc="56:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
        <documentation loc="49:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
          <short> &#10; Returns the time interval that the SFD pin was high during a packet&#10; transmission/reception.</short>
          <long> &#10; Returns the time interval that the SFD pin was high during a packet&#10; transmission/reception. The time is expressed in 802.15.4 symbols.&#10;&#10; @param  SFDCaptureTime capture time of rising SFD&#10; @param  EFDCaptureTime capture time of falling SFD&#10;</long>
        </documentation>
        <interfacedef-ref qname="CaptureTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SFDCaptureTime" ref="0x2afd8ced6020" loc="56:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="EFDCaptureTime" ref="0x2afd8ced63d0" loc="56:../../../../../tos/chips/cc2420_tkn154/CaptureTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (added some commands)&#10; @version $Revision: 1.1 $ $Date: 2008-06-16 18:02:40 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setShortAddr" ref="0x2afd8cf41620" loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2afd8cf413a0" loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2afd8cf43470" loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2afd8cf431f0" loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPromiscuousMode" ref="0x2afd8cf3e390" loc="89:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="86:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change to promiscuous mode.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2afd8cf3e110" loc="89:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2afd8cf407a0" loc="78:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2afd8cf40520" loc="78:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxPower" ref="0x2afd8cf3b560" loc="101:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="98:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the transmission power.</short>
          <long>&#10; Change the transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPromiscuousModeEnabled" ref="0x2afd8cf3eb90" loc="90:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCCAMode" ref="0x2afd8cf3cdb0" loc="96:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afd8cf3cb30" loc="96:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2afd8cf43c20" loc="71:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="68:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCCAMode" ref="0x2afd8cf3c350" loc="95:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="92:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the CCA mode.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2afd8ceeb9e0" loc="53:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2afd8cf44a80" loc="65:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="62:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="needsSync" ref="0x2afd8cf44270" loc="60:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="55:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Whether changes have been made that should be sync-ed.</short>
          <long>&#10; Whether changes have been made that should be sync-ed.&#10;&#10; @return TRUE if changes have been made, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2afd8cf41dc0" loc="77:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanCoordinator" ref="0x2afd8cf3f9c0" loc="84:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pcoord" ref="0x2afd8cf3f740" loc="84:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanCoordinator" ref="0x2afd8cf3f020" loc="83:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <documentation loc="80:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTxPower" ref="0x2afd8cf3a020" loc="102:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txPower" ref="0x2afd8cf3bca0" loc="102:../../../../../tos/chips/cc2420_tkn154/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Rx" loc="39:../../../../../tos/chips/cc2420_tkn154/CC2420Rx.nc">
      <function event="" provided="0" name="received" ref="0x2afd8cf36020" loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420Rx.nc">
        <documentation loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420Rx.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. &#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Rx"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
              <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8cf45c30" loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420Rx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2afd8cef6ab0" loc="95:../../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8ceef350" loc="105:../../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2afd8cef3120" loc="120:../../../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2afd8cef4120" loc="97:../../../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2afd8cef5770" loc="88:../../../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2afd8cef4910" loc="102:../../../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2afd8cef3b80" loc="128:../../../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Tx" loc="38:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
      <function event="" provided="0" name="loadTXFIFODone" ref="0x2afd8cf34470" loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8cf35e50" loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2afd8cf341e0" loc="41:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="loadTXFIFO" ref="0x2afd8cf35690" loc="40:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8cf35410" loc="40:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x2afd8cf34dd0" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cca" ref="0x2afd8cf34b50" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lockChipSpi" ref="0x2afd8cf31e40" loc="47:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cca" ref="0x2afd8cf31720" loc="46:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afd8cf31020" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="frame" ref="0x2afd8cf33590" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ackPendingFlag" ref="0x2afd8cf33910" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afd8cf33c60" loc="44:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unlockChipSpi" ref="0x2afd8cf305d0" loc="48:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transmissionStarted" ref="0x2afd8cf2f0b0" loc="50:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8cf30dc0" loc="50:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transmittedSFD" ref="0x2afd8cf2e020" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timestamp" ref="0x2afd8cf2f830" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2afd8cf2fc10" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x2afd8c2af590"/>
                <typename><typedef-ref name="ieee154_txframe_t" ref="0x2afd8c2afd20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2afd8cf2c130" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
        <documentation loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Tx"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afd8cf2e770" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2afd8cf2eae0" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8cf2ee10" loc="63:../../../../../tos/chips/cc2420_tkn154/CC2420Tx.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="43:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @version $Revision: 1.3 $ $Date: 2009-03-04 18:31:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2afd8cee82b0" loc="72:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="66:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2afd8cee6350" loc="98:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="93:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushRxFifo" ref="0x2afd8cee45e0" loc="112:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="106:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Flush the RXFIFO if it is not empty.</short>
          <long>&#10; Flush the RXFIFO if it is not empty. &#10; Radio SHOULD be disabled (off) when calling this command.&#10;&#10; @return SUCCESS if fifo was flushed (or it was empty), FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2afd8cee7b60" loc="91:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="86:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2afd8cef0980" loc="52:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="45:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2afd8cee9a30" loc="64:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="59:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2afd8cee8b20" loc="77:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="74:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2afd8cee7390" loc="84:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="79:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rssi" ref="0x2afd8cee6da0" loc="104:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="100:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Read RSSI from the radio.</short>
          <long>&#10; Read RSSI from the radio. &#10; @return SUCCESS if RSSI was read successfully, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rssi" ref="0x2afd8cee6b20" loc="104:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="signed char" size="I:1" alignment="I:1">
                <typename><typedef-ref name="int8_t" ref="0x2afd8afc4110"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2afd8cee9270" loc="57:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
        <documentation loc="54:../../../../../tos/chips/cc2420_tkn154/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420AsyncSplitControl" loc="105:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
      <documentation loc="100:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
        <short>&#10; This interface is a mixture of a SplitControl/AsyncStdControl interface.</short>
        <long>&#10; This interface is a mixture of a SplitControl/AsyncStdControl interface.&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="stopDone" ref="0x2afd8ceec020" loc="132:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
        <documentation loc="125:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped. This event&#10; completes the &#60;tt>stop()&#60;/tt> operation.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2afd8ceedd10" loc="132:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2afd8cef1bb0" loc="113:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
        <documentation loc="107:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  &#10;&#10; @return SUCCESS if the component was started successfully.&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8ceed420" loc="123:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
        <documentation loc="115:../../../../../tos/chips/cc2420_tkn154/CC2420AsyncSplitControl.nc">
          <short>&#10; Stop this component and all of its subcomponents - iff this command&#10; succeeds then &#60;tt>stopDone&#60;/tt> will signal the result of the stop&#10; operation.</short>
          <long>&#10; Stop this component and all of its subcomponents - iff this command&#10; succeeds then &#60;tt>stopDone&#60;/tt> will signal the result of the stop&#10; operation.&#10;&#10; @return SUCCESS Stop operation was started, &#60;tt>stopDone&#60;/tt> will be signalled&#10;         FAIL Otherwise (&#60;tt>stopDone&#60;/tt> will not be signalled)&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420AsyncSplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afd8d058020" loc="55:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d060cc0" loc="55:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afd8d058b00" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d058880" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2afd8d052580" loc="53:../../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2afd8d05dc60" loc="52:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afd8d064d90" loc="52:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2afd8d05d670" loc="52:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d05d9c0" loc="52:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afd8d05b3f0" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2afd8d05c570" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2afd8d05cde0" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d05b150" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afd8d061190" loc="68:../../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afd8d063960" loc="61:../../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2afd8d0631f0" loc="54:../../../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2afd8d0668d0" loc="53:../../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2afd8d0a9560" loc="177:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2afd8c27b400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d0a92e0" loc="177:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2afd8d04a110" loc="88:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d04be30" loc="88:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2afd8d04c3e0" loc="68:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2afd8d04b020" loc="78:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d04cc20" loc="78:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2afd8d047b10" loc="121:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d047530" loc="121:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2afd8d047880" loc="121:../../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2afd8d048600" loc="103:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d048020" loc="103:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2afd8d048370" loc="103:../../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2afd8c27b7e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2afd8d0ac040" loc="147:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2afd8c27b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d046da0" loc="147:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2afd8d0ab3a0" loc="162:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afd8c27b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d0acdc0" loc="162:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2afd8d0ab110" loc="162:../../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2afd8c27b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2afd8d045da0" loc="136:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d045b20" loc="136:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2afd8d0a8a30" loc="187:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afd8c27b400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2afd8d0a8450" loc="187:../../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2afd8d0a87a0" loc="187:../../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2afd8c27b400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2afd8d0a5890" loc="195:../../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2afd8c27b400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2afd8d127020" loc="54:../../../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afd8d1261f0" loc="66:../../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2afd8d1279c0" loc="61:../../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afd8d127740" loc="61:../../../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2afd8d1286f0" loc="53:../../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2afd8d171020" loc="52:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2afd8d170ac0" loc="72:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2afd8d1737c0" loc="47:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2afd8d1702a0" loc="67:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2afd8d170020" loc="67:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2afd8d173020" loc="42:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2afd8d171820" loc="59:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2afd8d288270" loc="24:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2afd8d288ac0" loc="31:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2afd8d287350" loc="39:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2afd8d2d2b60" loc="62:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d2d2580" loc="62:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d2d28d0" loc="62:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2afd8d2cddd0" loc="91:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d2cd490" loc="91:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d2cd7e0" loc="91:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afd8d2cdb30" loc="91:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afd8d2ce6b0" loc="82:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d2ce0d0" loc="82:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d2ce420" loc="82:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2afd8d2d3730" loc="51:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2afd8ced9e80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d2d3150" loc="51:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d2d34a0" loc="51:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2afd8d2cf2c0" loc="71:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d2d1930" loc="71:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2afd8d2d1c80" loc="71:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afd8d2cf020" loc="71:../../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2afd8d2b3cf0" loc="70:../../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2afd8d2b3380" loc="70:../../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2afd8d2b3710" loc="70:../../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8d2b3a50" loc="70:../../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2afd8d2b03c0" loc="82:../../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2afd8d2af6a0" loc="82:../../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2afd8d2afa30" loc="82:../../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2afd8d2afd70" loc="82:../../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2afd8d2b0110" loc="83:../../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2afd8d2b7c90" loc="45:../../../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2afd8d2b7a10" loc="45:../../../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2afd8d2a87f0" loc="71:../../../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2afd8d2abd40" loc="56:../../../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2afd8d2a8020" loc="66:../../../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2afd8d2aac70" loc="66:../../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2afd8d2aa4d0" loc="61:../../../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2afd8d2b5a80" loc="45:../../../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2afd8d2b5800" loc="45:../../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2afd8d2ab560" loc="51:../../../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2afd8d2ab2e0" loc="51:../../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2afd8d39bbf0" loc="39:../../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afd8d359020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afd8d359440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2afd8d39aaa0" loc="62:../../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d39a820" loc="62:../../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2afd8d399e60" loc="74:../../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d399be0" loc="74:../../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2afd8d399350" loc="68:../../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2afd8d398920" loc="81:../../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d3986a0" loc="81:../../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2afd8d3882a0" loc="54:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d388020" loc="54:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2afd8d389720" loc="49:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2afd8d3daaf0" loc="213:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2afd8d3e6790" loc="143:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2afd8d3f3610" loc="50:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d375080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2afd8d3758c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afd8d3f3390" loc="50:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d375080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2afd8d3758c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2afd8d3e8800" loc="123:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2afd8d3f0a90" loc="70:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d371080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2afd8d3718c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afd8d3f0810" loc="70:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d371080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2afd8d3718c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2afd8d3e0e70" loc="180:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2afd8d3dc480" loc="197:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2afd8d3f0070" loc="65:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d373020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2afd8d3737b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2afd8d3ef2b0" loc="75:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d371080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2afd8d3718c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2afd8d3eb020" loc="97:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2afd8d3ecd30" loc="97:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2afd8d3ec610" loc="95:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2afd8d3e0740" loc="179:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2afd8d3f1840" loc="60:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d373020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2afd8d3737b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2afd8d3f15c0" loc="60:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d373020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2afd8d3737b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2afd8d3ee420" loc="85:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2afd8d3de5d0" loc="181:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2afd8d3eee00" loc="90:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2afd8d3eeb80" loc="90:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2afd8d3ea8c0" loc="113:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2afd8d3e8070" loc="118:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2afd8d3e1840" loc="177:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2afd8d3e3790" loc="163:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2afd8d3e77a0" loc="133:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2afd8d3e0020" loc="178:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2afd8d3e5020" loc="148:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2afd8d3decf0" loc="182:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2afd8d3eb800" loc="103:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2afd8d37cdf0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2afd8d378680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2afd8d3dd4c0" loc="187:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2afd8d3da350" loc="207:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2afd8d3efc50" loc="80:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2afd8d3ef9d0" loc="80:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2afd8d3d94d0" loc="224:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d3d9250" loc="224:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2afd8d3f3df0" loc="55:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2afd8d375080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2afd8d3758c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2afd8d3e7020" loc="128:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2afd8d3e5770" loc="153:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2afd8d3e1020" loc="174:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afd8d3bbe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2afd8d3ba2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afd8d3e2cf0" loc="174:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afd8d3bbe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2afd8d3ba2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2afd8d3e22a0" loc="168:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afd8d359020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afd8d359440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afd8d3e2020" loc="168:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2afd8d359020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2afd8d359440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2afd8d3d9d90" loc="231:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2afd8d3ddcb0" loc="192:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2afd8d3ea020" loc="108:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2afd8d3dcbe0" loc="202:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2afd8d3e3020" loc="158:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2afd8d3e6020" loc="138:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2afd8d461600" loc="39:../../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2afd8d43a070" loc="80:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2afd8d44db10" loc="31:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2afd8d441d50" loc="62:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afd8d441ad0" loc="62:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2afd8d454270" loc="11:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2afd8d43d350" loc="71:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2afd8d446cf0" loc="49:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2afd8d44ec50" loc="28:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2afd8d44b9c0" loc="34:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2afd8d44fc00" loc="25:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2afd8d44f980" loc="25:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2afd8d451120" loc="21:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2afd8d449790" loc="41:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2afd8d440c80" loc="66:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2afd8d43b8f0" loc="78:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2afd8d441390" loc="61:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2afd8d436b60" loc="91:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2afd8d4a9270" loc="100:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2afd8d4530e0" loc="14:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2afd8d449020" loc="38:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2afd8d448910" loc="45:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2afd8d44e500" loc="27:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2afd8d456020" loc="7:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2afd8d443ba0" loc="58:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2afd8d443920" loc="58:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2afd8d4597e0" loc="6:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2afd8d43fb80" loc="69:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2afd8d43a7d0" loc="81:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2afd8d4ab350" loc="94:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2afd8d4aaa90" loc="97:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2afd8d43c270" loc="74:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2afd8d438020" loc="83:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2afd8d440520" loc="65:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2afd8d437bb0" loc="87:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2afd8d453800" loc="15:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2afd8d444020" loc="53:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2afd8d437020" loc="86:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2afd8d43b190" loc="77:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2afd8d446520" loc="46:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2afd8d4462a0" loc="46:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2afd8d4abaf0" loc="95:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2afd8d4431f0" loc="57:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2afd8d43dac0" loc="72:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2afd8d456aa0" loc="8:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afd8d3a8b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2afd8d3a7020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2afd8d456820" loc="8:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2afd8d3a8b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2afd8d3a7020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2afd8d44a870" loc="37:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2afd8d452980" loc="19:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afd8d452700" loc="19:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2afd8d448120" loc="42:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2afd8d449e70" loc="42:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2afd8d4363b0" loc="90:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2afd8d44f270" loc="24:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2afd8d452020" loc="18:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2afd8d4449e0" loc="54:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2afd8d444760" loc="54:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2afd8d4549a0" loc="12:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2afd8d438740" loc="84:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2afd8d43c9e0" loc="75:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2afd8d43f420" loc="68:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2afd8d445740" loc="50:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2afd8d4454c0" loc="50:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2afd8d44a120" loc="35:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2afd8d44d3b0" loc="29:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2afd8d4aa2b0" loc="96:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2afd8d451aa0" loc="22:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2afd8d451820" loc="22:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2afd8d435350" loc="92:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2afd8d44b270" loc="32:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2afd8d435b10" loc="93:../../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2afd8d549e00" loc="56:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2afd8d547020" loc="73:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2afd8d549570" loc="46:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2afd8d5486d0" loc="65:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2afd8b924090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2afd8d547950" loc="81:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2afd8d718cf0" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2afd8d718330" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2afd8d718a60" loc="63:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:150" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2afd8c2c9710"/>
                <typename><typedef-ref name="message_t" ref="0x2afd8c2c8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2afd8d719b20" loc="55:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2afd8d719350" loc="49:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2afd8d7190d0" loc="49:../../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2afd8afc5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2afd8d9a9970" loc="53:../../../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afd8d9a9970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2afd8d9a54f0" loc="64:../../../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afd8d9a9970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2afd8d9a5270" loc="64:../../../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2afd8d9a9970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x2afd8d9ef950" loc="41:../../../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x2afd8da6c910" loc="84:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8da6c340" loc="84:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2afd8da6c680" loc="84:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x2afd8da6b190" loc="92:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x2afd8da6eb50" loc="76:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x2afd8da6f4e0" loc="61:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x2afd8da6aaa0" loc="109:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2afd8da6a820" loc="109:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2afd8d9dc270" loc="47:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x2afd8da695c0" loc="116:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8da69340" loc="116:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x2afd8da6a020" loc="100:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8da6b9c0" loc="100:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2afd8da6bcf0" loc="100:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2afd8afc5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x2afd8d9dcc40" loc="54:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8d9dc9c0" loc="54:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x2afd8da6e2f0" loc="69:../../../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2afd8da6fcd0" loc="69:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2afd8da6e060" loc="69:../../../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2afd8afc5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2afd8db19850" loc="62:../../../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2afd8db123b0" loc="95:../../../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2afd8db12bc0" loc="105:../../../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2afd8b927980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
